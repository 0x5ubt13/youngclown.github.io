<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OpenAPI_001</title>
      <link href="/2019/03/2019-03-14-exchangeJSON/"/>
      <url>/2019/03/2019-03-14-exchangeJSON/</url>
      
        <content type="html"><![CDATA[<p>한국수출입은행에서, 현재 환율을 실시간으로 제공합니다.  </p><p><a href="https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?data=AP01&amp;authkey=xxxxxxx&amp;searchdate=20190314" rel="external nofollow noopener noreferrer" target="_blank">https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?data=AP01&amp;authkey=xxxxxxx&amp;searchdate=20190314</a></p><p>인증키를 발급받아 요청을 할 경우, 해당 환율이 나오게 됩니다.<br>테스트 시 나오는 결과값입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;AED&quot;,&quot;ttb&quot;:&quot;305.77&quot;,&quot;tts&quot;:&quot;311.94&quot;,&quot;deal_bas_r&quot;:&quot;308.86&quot;,&quot;bkpr&quot;:&quot;308&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;308&quot;,&quot;kftc_deal_bas_r&quot;:&quot;308.86&quot;,&quot;cur_nm&quot;:&quot;아랍에미리트 디르함&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;AUD&quot;,&quot;ttb&quot;:&quot;794.74&quot;,&quot;tts&quot;:&quot;810.79&quot;,&quot;deal_bas_r&quot;:&quot;802.77&quot;,&quot;bkpr&quot;:&quot;802&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;802&quot;,&quot;kftc_deal_bas_r&quot;:&quot;802.77&quot;,&quot;cur_nm&quot;:&quot;호주 달러&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;BHD&quot;,&quot;ttb&quot;:&quot;2,979.02&quot;,&quot;tts&quot;:&quot;3,039.21&quot;,&quot;deal_bas_r&quot;:&quot;3,009.12&quot;,&quot;bkpr&quot;:&quot;3,009&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;3,009&quot;,&quot;kftc_deal_bas_r&quot;:&quot;3,009.12&quot;,&quot;cur_nm&quot;:&quot;바레인 디나르&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;CAD&quot;,&quot;ttb&quot;:&quot;838.57&quot;,&quot;tts&quot;:&quot;855.52&quot;,&quot;deal_bas_r&quot;:&quot;847.05&quot;,&quot;bkpr&quot;:&quot;847&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;847&quot;,&quot;kftc_deal_bas_r&quot;:&quot;847.05&quot;,&quot;cur_nm&quot;:&quot;캐나다 달러&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;CHF&quot;,&quot;ttb&quot;:&quot;1,112.36&quot;,&quot;tts&quot;:&quot;1,134.83&quot;,&quot;deal_bas_r&quot;:&quot;1,123.6&quot;,&quot;bkpr&quot;:&quot;1,123&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;1,123&quot;,&quot;kftc_deal_bas_r&quot;:&quot;1,123.6&quot;,&quot;cur_nm&quot;:&quot;스위스 프랑&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;CNH&quot;,&quot;ttb&quot;:&quot;166.78&quot;,&quot;tts&quot;:&quot;170.15&quot;,&quot;deal_bas_r&quot;:&quot;168.47&quot;,&quot;bkpr&quot;:&quot;168&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;168&quot;,&quot;kftc_deal_bas_r&quot;:&quot;168.47&quot;,&quot;cur_nm&quot;:&quot;위안화&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;DKK&quot;,&quot;ttb&quot;:&quot;169.62&quot;,&quot;tts&quot;:&quot;173.05&quot;,&quot;deal_bas_r&quot;:&quot;171.34&quot;,&quot;bkpr&quot;:&quot;171&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;171&quot;,&quot;kftc_deal_bas_r&quot;:&quot;171.34&quot;,&quot;cur_nm&quot;:&quot;덴마아크 크로네&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;EUR&quot;,&quot;ttb&quot;:&quot;1,265.45&quot;,&quot;tts&quot;:&quot;1,291.02&quot;,&quot;deal_bas_r&quot;:&quot;1,278.24&quot;,&quot;bkpr&quot;:&quot;1,278&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;1,278&quot;,&quot;kftc_deal_bas_r&quot;:&quot;1,278.24&quot;,&quot;cur_nm&quot;:&quot;유로&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;GBP&quot;,&quot;ttb&quot;:&quot;1,488.12&quot;,&quot;tts&quot;:&quot;1,518.19&quot;,&quot;deal_bas_r&quot;:&quot;1,503.16&quot;,&quot;bkpr&quot;:&quot;1,503&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;1,503&quot;,&quot;kftc_deal_bas_r&quot;:&quot;1,503.16&quot;,&quot;cur_nm&quot;:&quot;영국 파운드&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;HKD&quot;,&quot;ttb&quot;:&quot;143.08&quot;,&quot;tts&quot;:&quot;145.97&quot;,&quot;deal_bas_r&quot;:&quot;144.53&quot;,&quot;bkpr&quot;:&quot;144&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;144&quot;,&quot;kftc_deal_bas_r&quot;:&quot;144.53&quot;,&quot;cur_nm&quot;:&quot;홍콩 달러&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;IDR(100)&quot;,&quot;ttb&quot;:&quot;7.86&quot;,&quot;tts&quot;:&quot;8.01&quot;,&quot;deal_bas_r&quot;:&quot;7.94&quot;,&quot;bkpr&quot;:&quot;7&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;7&quot;,&quot;kftc_deal_bas_r&quot;:&quot;7.94&quot;,&quot;cur_nm&quot;:&quot;인도네시아 루피아&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;JPY(100)&quot;,&quot;ttb&quot;:&quot;1,009.25&quot;,&quot;tts&quot;:&quot;1,029.64&quot;,&quot;deal_bas_r&quot;:&quot;1,019.45&quot;,&quot;bkpr&quot;:&quot;1,019&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;1,019&quot;,&quot;kftc_deal_bas_r&quot;:&quot;1,019.45&quot;,&quot;cur_nm&quot;:&quot;일본 옌&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;KRW&quot;,&quot;ttb&quot;:&quot;0&quot;,&quot;tts&quot;:&quot;0&quot;,&quot;deal_bas_r&quot;:&quot;1&quot;,&quot;bkpr&quot;:&quot;1&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;1&quot;,&quot;kftc_deal_bas_r&quot;:&quot;1&quot;,&quot;cur_nm&quot;:&quot;한국 원&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;KWD&quot;,&quot;ttb&quot;:&quot;3,694.95&quot;,&quot;tts&quot;:&quot;3,769.6&quot;,&quot;deal_bas_r&quot;:&quot;3,732.28&quot;,&quot;bkpr&quot;:&quot;3,732&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;3,732&quot;,&quot;kftc_deal_bas_r&quot;:&quot;3,732.28&quot;,&quot;cur_nm&quot;:&quot;쿠웨이트 디나르&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;MYR&quot;,&quot;ttb&quot;:&quot;274.64&quot;,&quot;tts&quot;:&quot;280.19&quot;,&quot;deal_bas_r&quot;:&quot;277.42&quot;,&quot;bkpr&quot;:&quot;277&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;277&quot;,&quot;kftc_deal_bas_r&quot;:&quot;277.42&quot;,&quot;cur_nm&quot;:&quot;말레이지아 링기트&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;NOK&quot;,&quot;ttb&quot;:&quot;129.84&quot;,&quot;tts&quot;:&quot;132.47&quot;,&quot;deal_bas_r&quot;:&quot;131.16&quot;,&quot;bkpr&quot;:&quot;131&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;131&quot;,&quot;kftc_deal_bas_r&quot;:&quot;131.16&quot;,&quot;cur_nm&quot;:&quot;노르웨이 크로네&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;NZD&quot;,&quot;ttb&quot;:&quot;768.01&quot;,&quot;tts&quot;:&quot;783.52&quot;,&quot;deal_bas_r&quot;:&quot;775.77&quot;,&quot;bkpr&quot;:&quot;775&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;775&quot;,&quot;kftc_deal_bas_r&quot;:&quot;775.77&quot;,&quot;cur_nm&quot;:&quot;뉴질랜드 달러&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;SAR&quot;,&quot;ttb&quot;:&quot;299.48&quot;,&quot;tts&quot;:&quot;305.53&quot;,&quot;deal_bas_r&quot;:&quot;302.51&quot;,&quot;bkpr&quot;:&quot;302&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;302&quot;,&quot;kftc_deal_bas_r&quot;:&quot;302.51&quot;,&quot;cur_nm&quot;:&quot;사우디 리얄&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;SEK&quot;,&quot;ttb&quot;:&quot;119.95&quot;,&quot;tts&quot;:&quot;122.38&quot;,&quot;deal_bas_r&quot;:&quot;121.17&quot;,&quot;bkpr&quot;:&quot;121&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;121&quot;,&quot;kftc_deal_bas_r&quot;:&quot;121.17&quot;,&quot;cur_nm&quot;:&quot;스웨덴 크로나&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;SGD&quot;,&quot;ttb&quot;:&quot;827.49&quot;,&quot;tts&quot;:&quot;844.2&quot;,&quot;deal_bas_r&quot;:&quot;835.85&quot;,&quot;bkpr&quot;:&quot;835&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;835&quot;,&quot;kftc_deal_bas_r&quot;:&quot;835.85&quot;,&quot;cur_nm&quot;:&quot;싱가포르 달러&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;THB&quot;,&quot;ttb&quot;:&quot;35.46&quot;,&quot;tts&quot;:&quot;36.17&quot;,&quot;deal_bas_r&quot;:&quot;35.82&quot;,&quot;bkpr&quot;:&quot;35&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;35&quot;,&quot;kftc_deal_bas_r&quot;:&quot;35.82&quot;,&quot;cur_nm&quot;:&quot;태국 바트&quot;&#125;,&#123;&quot;result&quot;:1,&quot;cur_unit&quot;:&quot;USD&quot;,&quot;ttb&quot;:&quot;1,123.15&quot;,&quot;tts&quot;:&quot;1,145.84&quot;,&quot;deal_bas_r&quot;:&quot;1,134.5&quot;,&quot;bkpr&quot;:&quot;1,134&quot;,&quot;yy_efee_r&quot;:&quot;0&quot;,&quot;ten_dd_efee_r&quot;:&quot;0&quot;,&quot;kftc_bkpr&quot;:&quot;1,134&quot;,&quot;kftc_deal_bas_r&quot;:&quot;1,134.5&quot;,&quot;cur_nm&quot;:&quot;미국 달러&quot;&#125;]</span><br></pre></td></tr></table></figure><p>만약 미국 달러가 필요할 경우,</p><p><a href="https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?data=AP01&amp;authkey=xxxx&amp;searchdate=20190312&amp;cur_unit=USD" rel="external nofollow noopener noreferrer" target="_blank">https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?data=AP01&amp;authkey=xxxx&amp;searchdate=20190312&amp;cur_unit=USD</a></p><p>USD를 요청하면됩니다.<br>정확한 스펙문서는,</p><p><a href="https://www.koreaexim.go.kr/site/program/openapi/openApiList?menuid=001003002002001" rel="external nofollow noopener noreferrer" target="_blank">https://www.koreaexim.go.kr/site/program/openapi/openApiList?menuid=001003002002001</a><br>에 정의되어있습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.koreaexim.go.kr/site/program/openapi/openApiView?menuid=001003002002001&amp;apino=2&amp;viewtype=C" rel="external nofollow noopener noreferrer" target="_blank">Open API 제공목록</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>assets_Response</title>
      <link href="/2019/03/2019-03-13-assets_Response/"/>
      <url>/2019/03/2019-03-13-assets_Response/</url>
      
        <content type="html"><![CDATA[<h2 id="Native-Link-object-adm-object"><a href="#Native-Link-object-adm-object" class="headerlink" title="Native Link object (adm object)"></a>Native Link object (adm object)</h2><h2 id="타불라-네이비트-광고의-Response-요청-처리안"><a href="#타불라-네이비트-광고의-Response-요청-처리안" class="headerlink" title="타불라 네이비트 광고의 Response 요청 처리안"></a>타불라 네이비트 광고의 Response 요청 처리안</h2><p>The native ad markup object is the top level JSON object which identifies a native response. Each asset within the asset array corresponds to the Asset Object in the request. The main container object for each asset requested or supported by Exchange on behalf of the rendering client. Out<br>of the six possible assets only title and img are mandatory.<br>The Taboola Open RTB supports this either as a JSON-encoded string, or a formal object.<br>For video, the inline VAST document in the adm attribute constitute the ad markup</p><h2 id="adm-object"><a href="#adm-object" class="headerlink" title="adm object"></a>adm object</h2><p>“link” -&gt; “{“url”:”<a href="https://partneradvertiser.com/url/data/com&quot;,&quot;clicktrackers&quot;:[]}&quot;" rel="external nofollow noopener noreferrer" target="_blank">https://partneradvertiser.com/url/data/com&quot;,&quot;clicktrackers&quot;:[]}&quot;</a></p><p>“imptrackers” -&gt; “[“<a href="http://partnerimptrackerurl.com/imp/trackers/{AUCTION_PRICE}&quot;]&quot;" rel="external nofollow noopener noreferrer" target="_blank">http://partnerimptrackerurl.com/imp/trackers/{AUCTION_PRICE}&quot;]&quot;</a></p><p>assets : List of native ad’s assets<br>link : Destination Link. This is the link object for the ad.<br>imptrackers : Array of impression tracking URLs, expected to return a<br>1x1 image or 204 response</p><pre><code>- This is one of the possible means for conveying win notifications to the exchange partner. Taboola Open RTB Exchange will replace macros defined within the URL as specified under table 4.2.5 in this specification, or with an empty string if unavailable. Up to 4 tracking URLs will be allowed. The impression tracker is limited to 3000 characters</code></pre><h2 id="Native-Link-object"><a href="#Native-Link-object" class="headerlink" title="Native Link object"></a>Native Link object</h2><p>URL : Landing URL of the clickable link.<br>clicktrackers : List of third-party tracker URLs to be fired on click of the URL.</p><pre><code>- Taboola Open RTB Exchange will replace macros defined within the URL as specified under table 4.2.5 in this specification, or with an empty string if unavailable. Up to 3 tracking URLs will be allowed. If more than three exist, only the first 3 will be fired.</code></pre><blockquote><p>landing url 에 대한 유효 클릭에 대한 대응 처리에 대한 방안이 고려되어야함.</p></blockquote><h2 id="Native-asset-object-title"><a href="#Native-asset-object-title" class="headerlink" title="Native asset object - title"></a>Native asset object - title</h2><p>{“id”:1,”title”:{“text”:”Some site title - Some site titile”},”img”:null,”data”:null,”video”:null}</p><p>id : the asset IDs in request</p><pre><code>- 1</code></pre><p>title : Contains a single (string typed) field, named ‘text’ which contains the text associated with the title element</p><pre><code>- 40 characters, after which “...” are added</code></pre><h2 id="Native-asset-object-img"><a href="#Native-asset-object-img" class="headerlink" title="Native asset object - img"></a>Native asset object - img</h2><p>{“id”:2,”title”:null,”img”:{“url”:”<a href="http://somesitename.com/images/img.jpg&quot;,&quot;w&quot;:600,&quot;h&quot;:500},&quot;data&quot;:null,&quot;video&quot;:null}" rel="external nofollow noopener noreferrer" target="_blank">http://somesitename.com/images/img.jpg&quot;,&quot;w&quot;:600,&quot;h&quot;:500},&quot;data&quot;:null,&quot;video&quot;:null}</a></p><p>id : the asset IDs in request</p><pre><code>- 2</code></pre><p>img : url : URL of the image asset</p><pre><code>    - The image URL is limited to 1024 charactersw : Optionalh : Optional</code></pre><p>Since the Taboola network’s supply consists of native placements the use of h,w parameters are highly recommended. They allow the Taboola algorithm to optimize the the processing of the source image so that it optimally fits into the (possibly varying) placement dimensions. In some cases, we might also choose to reject the bid, if we suspect that the difference between source and target dimension would inevitably create a bad user experience and low engagement chances, which would be inefficient both for the Publisher hosting that placement and the Taboola exchange partner.</p><h2 id="Native-asset-object-brand-name"><a href="#Native-asset-object-brand-name" class="headerlink" title="Native asset object - brand name"></a>Native asset object - brand name</h2><p>{“id”:3,”title”:null,”img”:null,”data”:{“value”:”Some site name”},”video”:null}</p><p>id : the asset IDs in request</p><pre><code>- 3</code></pre><p>data : Contains a single (string typed) field, named ‘value’ which contains the text associated with the brand name element</p><h2 id="Native-asset-object-description"><a href="#Native-asset-object-description" class="headerlink" title="Native asset object - description"></a>Native asset object - description</h2><p>{“id”:4,”title”:null,”img”:null,”data”:{“value”:”site description and other information provided”},”video”:null}</p><p>id : the asset IDs in request</p><pre><code>- 4</code></pre><p>data : Contains a single (string typed) field, named ‘value’ which contains the text associated with the description element</p><h2 id="Native-asset-object-price"><a href="#Native-asset-object-price" class="headerlink" title="Native asset object - price"></a>Native asset object - price</h2><p>id : the asset IDs in request</p><pre><code>- 5</code></pre><p>data : Contains a single (string typed) field, named ‘value’ which contains the text associated with the price element</p><pre><code>- As stated above, value should include currency symbol in localised format. Limited to 40 characters.</code></pre><h2 id="Native-asset-object-privacy-link"><a href="#Native-asset-object-privacy-link" class="headerlink" title="Native asset object - privacy link"></a>Native asset object - privacy link</h2><p>id : the asset IDs in request</p><pre><code>- 6</code></pre><p>data : Contains a single (string typed) field, named ‘value’ which contains the text to be concatenated to the partner domain. Combined, they create the privacy link URL which will be incorporated in the widget opt-out AdChoices icon</p><h2 id="Native-asset-object-video"><a href="#Native-asset-object-video" class="headerlink" title="Native asset object - video"></a>Native asset object - video</h2><p>vasttag :  vast xml</p><pre><code>- 7</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>assets_Request</title>
      <link href="/2019/03/2019-03-13-assets_Request/"/>
      <url>/2019/03/2019-03-13-assets_Request/</url>
      
        <content type="html"><![CDATA[<h2 id="Native-Ad-Request-Markup-object"><a href="#Native-Ad-Request-Markup-object" class="headerlink" title="Native Ad Request Markup object"></a>Native Ad Request Markup object</h2><h2 id="타불라-네이비트-광고의-Request-요청-처리안"><a href="#타불라-네이비트-광고의-Request-요청-처리안" class="headerlink" title="타불라 네이비트 광고의 Request 요청 처리안"></a>타불라 네이비트 광고의 Request 요청 처리안</h2><p>The Native Object defines the native advertising opportunity available for bid via this bidrequest.<br>The Taboola Open RTB will supply this as a JSON-encoded string.<br>Every Taboola inventory item will call for six assets to be returned in the response: A title, an image (for the thumbnail), brand name, description, the price of the product and a privacy link.<br>Out of the six only the first two are mandatory, and the others optional.<br>All are described in further details in the following sections.  </p><p>Json 안에 String 화된 Json 이 다시 구현되어있는 구조.</p><h2 id="Asset-object-title"><a href="#Asset-object-title" class="headerlink" title="Asset object - title"></a>Asset object - title</h2><pre><code>- Describes the need for the bid creative to contain a title.</code></pre><p>{“id”:1,”required”:1,”title”:{“len”:1500}}<br>id : Unique asset ID, assigned by exchange. Typically a counter for the array</p><pre><code>- Value will be set to 1</code></pre><p>required : Set to 1 if asset is required (exchange will not accept a bid without it)</p><pre><code>- Value will be set to 1</code></pre><p>title : d Title object - contains a single field defining the maximal allowed length of the title:<br>        Field name: len<br>        Field type: Int</p><pre><code>- Will be set to 90 by default.</code></pre><h2 id="Asset-object-img"><a href="#Asset-object-img" class="headerlink" title="Asset object - img"></a>Asset object - img</h2><ul><li>Describes the need for the bid creative to contain an image, that will serve as the creative’s thumbnail.<br>{“id”:2,”required”:1,”img”:{“type”:3,”wmin”:1,”hmin”:1}}<br>id : Unique asset ID, assigned by exchange. Typically a counter for the array<ul><li>Value will be set to 2<br>required : Set to 1 if asset is required (exchange will not accept a bid without it)</li><li>Value will be set to 1<br>img : img object will contain three (int type) fields:<br>wmin - the minimum requested width of the image in pixels.<br>hmin - the minimum requested height of the image in pixels<br>type - the type ID of the image element supported by the publisher<ul><li>Type value will always be set to 3 (“Large image preview for the ad”)</li></ul></li></ul></li></ul><h2 id="Asset-object-brand-name"><a href="#Asset-object-brand-name" class="headerlink" title="Asset object - brand name"></a>Asset object - brand name</h2><ul><li>Describes the need for the bid creative to contain a branding text. If no brand name will be supplied, the advertiser domain will be used by Taboola instead.<br>{“id”:3,”required”:0,”data”:{“type”:1,”len”:200}}<br>id : Unique asset ID, assigned by exchange. Typically a counter for the array<ul><li>Value will be set to 3<br>required : Set to 1 if asset is required (exchange will not accept a bid without it)</li><li>Value will be set to 0<br>data : data object will contain two<br>fields (of type int):<br>Field name - type<br>Field name - len<ul><li>‘type’ value will always be set to 1, which states ‘Sponsored By message where response should contain the brand name of the sponsor’ len represents the maximal allowed length for the brand name.</li></ul></li></ul></li></ul><h2 id="Asset-object-description"><a href="#Asset-object-description" class="headerlink" title="Asset object - description"></a>Asset object - description</h2><p>Describes the need for the bid creative to contain a descriptive text.<br>{“id”:4,”required”:0,”data”:{“type”:2,”len”:15000}}</p><p>id : Unique asset ID, assigned by exchange. Typically a counter for the array</p><pre><code>- Value will be set to 4</code></pre><p>required : Set to 1 if asset is required (exchange will not accept a bid without it)</p><pre><code>- Value will be set to 0</code></pre><p>data : data object will contain two<br>      fields (of type int):<br>      Field name - type<br>      Field name - len</p><pre><code>- ‘type’ value will always be set to 2, which states ‘Descriptive text associated with the product or service being advertised. Longer length of text in response may be truncated or ellipsed by the exchange’ len represents the maximal allowed length for the description.</code></pre><h2 id="Asset-object-price"><a href="#Asset-object-price" class="headerlink" title="Asset object - price"></a>Asset object - price</h2><ul><li>Describes the option for the bid creative to contain a price, in case the bidder is offering a product ad.<br>{“id”:5,”required”:0,”data”:{“type”:6,”len”:60}}</li></ul><p>id : Unique asset ID, assigned by exchange. Typically a counter for the array</p><pre><code>- Value will be set to 5</code></pre><p>required : Set to 1 if asset is required (exchange will not accept a bid without it)</p><pre><code>- Value will be set to 0</code></pre><p>data : data object will contain one field :<br>      Field name - type<br>      Field value - int</p><pre><code>- Value will always be set to 6, which states ‘Price for product / app / in-app purchase. Value should include currency symbol in localized format</code></pre><h2 id="Asset-object-privacy-link"><a href="#Asset-object-privacy-link" class="headerlink" title="Asset object - privacy link"></a>Asset object - privacy link</h2><ul><li>In some cases the bidder might be willing to supply a link to its privacy policy opt out mechanism, as part of the creative. In case this asset is incorporated in the response, the Taboola exchange will use this link as opt-out parameters, which will be concatenated to a domain name agreed upon prior to setting up the RTB integration. The result is what the user will be redirected to when interacting with the Taboola AdChoices icon for that slot. For more details please contact Taboola product team.<br>{“id”:6,”required”:0,”data”:{“type”:500}}</li></ul><p>id : Unique asset ID, assigned by exchange. Typically a counter for the array</p><pre><code>- Value will be set to 6</code></pre><p>required : Set to 1 if asset is required (exchange will not accept a bid without it)</p><pre><code>- Value will be set to 0</code></pre><p>data : data object will contain one field:<br>      Field name - type<br>      Field value - string</p><pre><code>- Value will always be set to 500</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Anonymous</title>
      <link href="/2019/01/2019-01-30-ramdavsanonymous/"/>
      <url>/2019/01/2019-01-30-ramdavsanonymous/</url>
      
        <content type="html"><![CDATA[<h2 id="람다-vs-익명클래스-성능-확인"><a href="#람다-vs-익명클래스-성능-확인" class="headerlink" title="람다 vs 익명클래스 성능 확인"></a>람다 vs 익명클래스 성능 확인</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.function.DoubleBinaryOperator;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DoubleBinaryOperator op;</span><br><span class="line">    Main( DoubleBinaryOperator op) &#123;</span><br><span class="line">        <span class="keyword">this</span>.op = op;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Main(<span class="keyword">new</span> DoubleBinaryOperator() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">applyAsDouble</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> x+y;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line"></span><br><span class="line">        start = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Main((x,y)-&gt;x+y);</span><br><span class="line">        &#125;</span><br><span class="line">         end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>람다를 사용할 경우, 소스는 매우 간단하게 바뀝니다.</p><p>테스트를 위해, DoubleBinaryOperator 클래스를 import 받아 테스트했을 때,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Main((x,y)-&gt;x+y);</span><br></pre></td></tr></table></figure><p>람다는 단 한줄안에 처리되지만,<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Main(<span class="keyword">new</span> DoubleBinaryOperator() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">applyAsDouble</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x+y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>익명클래스(anonymous class)를 사용하여 생성할 경우에는 상당히 복잡해보입니다.<br>하지만 속도를 확인했을 경우,<br>anonymous class 로 생성해서 돌리는 경우가 람다식을 썻을 때보다 대략 3~8배 가량 빠른 것을 확인할 수 있습니다.<br>꼭 최신 기능이 더 나은 기능이란 것은 아니라고 생각합니다.</p><p>개발자들은 숨겨진 비용에 대해, 명확하게 알고 사용하는 것이 좋을 것이라고 생각합니다.<br>응답시간을 100ms 맞춰야하는 짧은 시간에서,<br>조금이라도 성능을 확인하고 적용하면, 별도의 Util 보다 hardcoding 형태로 바로 적용하는 것이 더 빠를 경우도 있어,<br>상황에 맡게 자신의 기술력을 적용하는 것이 어렵다는 걸 자주 느낍니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>netstat -na | grep 720 | grep ESTABLISHED</title>
      <link href="/2019/01/2019-01-03-netstat/"/>
      <url>/2019/01/2019-01-03-netstat/</url>
      
        <content type="html"><![CDATA[<h2 id="넷스탯-네트워크-통계"><a href="#넷스탯-네트워크-통계" class="headerlink" title="넷스탯, 네트워크 통계"></a>넷스탯, 네트워크 통계</h2><p>외부와의 연결상태를 파악할 수 있습니다.<br>시스템과 연결된 여러가지 세션(session) 정보들을 확인할 수 있습니다.<br>개발자들은 보통 커넥션 풀을 확인하는 용도로 확인합니다.</p><p>SE 라면, 시스템 라우팅 테이블 확인, 네트워크 인터페이스 사용통계 확인, 마스커레이드 연결확인, 멀티케스팅 과 같은 현재 시스템의 네트워크에 관한 다양한 정보확인을 할 수 있는 유용한 네트워크 관리도구라고 합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-a : --all 과 같으며 listen되는 소켓정보와 listen 되지 않는 소켓정보 모두 보여줍니다.</span><br><span class="line">-n : --numeric 과 같으며 10진수의 수치정보로 결과를 출력합니다.</span><br><span class="line">-r : --route 와 같으며 설정된 라우팅정보를 출력합니다.</span><br><span class="line">-p : --program 과 같으며 실행되고 있는 각 프로그램과 PID 정보를 출력합니다.</span><br><span class="line">-i : --interface=iface 와 같으며 모든 네트워크 인터페이스 정보를 출력합니다. 또는 특정 네트워크 인터페이스를 지정할 수도 있습니다.</span><br><span class="line">-c : --continuous 와 같으며 netstat 결과를 연속적으로 출력합니다.</span><br><span class="line">-l : --listening 과 같으며 현재 listen 되고 있는 소켓정보를 출력합니다.</span><br><span class="line">-s : --statistics 와 같으며 각 프로토콜에 대한 통계정보를 출력합니다.</span><br></pre></td></tr></table></figure><p>netstat -rn : route 와 같은 기능합니다.<br>netstat -an : 모든 소켓을 보여줍니다.<br>netstat -atp : 열려진 포트를 사용하고 있는 프로세스를 확인합니다.<br>netstat -s : 각각의 프로토콜의 사용 통계를 확인합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[WAS-03:root]/root&gt;#netstat -na | grep 720 | grep ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:41956            xxx.xxx.xxx.103:7205           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:46042            xxx.xxx.xxx.102:7202           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:40238            xxx.xxx.xxx.102:7206           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:51886            xxx.xxx.xxx.102:7208           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:42588            xxx.xxx.xxx.103:7205           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:44846            xxx.xxx.xxx.103:7207           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:52202            xxx.xxx.xxx.103:7201           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:54546            xxx.xxx.xxx.102:7200           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:54964            xxx.xxx.xxx.102:7200           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:49862            xxx.xxx.xxx.102:7204           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:53268            xxx.xxx.xxx.102:7200           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:43196            xxx.xxx.xxx.103:7207           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:50626            xxx.xxx.xxx.102:7204           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:48736            xxx.xxx.xxx.102:7200           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:50086            xxx.xxx.xxx.102:7208           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:60356            xxx.xxx.xxx.103:7201           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:33794            xxx.xxx.xxx.103:7201           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:41388            xxx.xxx.xxx.102:7206           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:45390            xxx.xxx.xxx.102:7202           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:44728            xxx.xxx.xxx.103:7209           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:37258            xxx.xxx.xxx.102:7202           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:59658            xxx.xxx.xxx.103:7203           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:44726            xxx.xxx.xxx.103:7209           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:42756            xxx.xxx.xxx.103:7209           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:59744            xxx.xxx.xxx.103:7203           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:58458            xxx.xxx.xxx.103:7203           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:42052            xxx.xxx.xxx.102:7206           ESTABLISHED</span><br><span class="line">tcp        0      0 xxx.xxx.xxx.3:42590            xxx.xxx.xxx.103:7205           ESTABLISHED</span><br></pre></td></tr></table></figure><p>netstat -an 를 사용하여 현재 720X 포트를 사용하는 ESTABLISHED된 소켓을 확인할 수 있습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>샤머니즘 TABLE 생성 논리</title>
      <link href="/2018/12/2018-12-17-dbdeeplink/"/>
      <url>/2018/12/2018-12-17-dbdeeplink/</url>
      
        <content type="html"><![CDATA[<p>A 테이블과 B 테이블은 서로간 맵핑이 되어야한다고 할때,<br>보통의 개발자들은 맵핑 테이블을 만들게 됩니다.  </p><p>그리고 N:N 구조에서 어느쪽의 데이터가 더 많은 지를 우선 파악해야합니다.<br>N:N 이 실제 2:5의 비율이 될지 2:13 의 비율이 될지를 파악해야지, 개발시 맵핑테이블에 등록하는 방법을 기술적으로 더 고민해야합니다.  </p><p>예를 들어,<br>A군에 속한 데이터를 화면에 등록하는 페이지에서는,<br>A군의 데이터가 한개 등록될 때 최대 3만건의 B군의 데이터가 맵핑에 자동으로 등록이 됩니다.<br>B군에 속한 데이터가 화면에서 한개 등록될 떄 A군의 속한 데이터가 8천개 정도 자동으로 맵핑되어 등록됩니다.  </p><p>A군의 유효한 데이터가 8천개<br>B군의 유효한 데이터가 3만개 로 대략적으로 1:4 의 구조를 지니고 있습니다.  </p><p>해당 데이터 B군이 어떠한 사유에 의해 유효한 데이터가 5만건이 늘어나게 된다면,<br>기존 1:4 로 등록되는 구조가 1:8 이상의 구조로 변경되게 됩니다.  </p><p>그렇다면 5만건의 유효한 데이터를 그대로 유지할지, 안할지에 대한 판단이 필요합니다.<br>현재 Auto Increment 가 1048719446 (10억)까지 증가된 상황에서 테이블 용량은 110GB를 차지하고 있는 상황이며,<br>B군이 2.5배가 된다는 것은 직관적으로 20억 및 테이블 용량이 220GB가 된다는 의미와 같습니다.  </p><p>그 상황에서 개발자의 접속권한으로는 전체 row 갯수를 파악하지 못할 정도로 많은 데이터이긴한데,<br>인덱스가 가능한 PK값들을 단독으로 수행했을 때는 0.0016초 정도안에 응답하고 있습니다.<br>해당 데이터를 full scan 하여 검색하는하는 로직이 존재하지 않기 때문에 개발적으로는 이슈될 사항은 없는 상태입니다.  </p><p>그렇다면, 현재 상황에서 기존의 테이블을 그대로 사용해야할 것인지, 분리해서 별도의 테이블을 구축해야할지 결정해야하는데,<br>이 경우, 테이블을 분리할 것인가 하지 말아야할 것인가는 DBA의 판단으로 넘겨야할 거 같습니다.  </p><p>index size 라든가, 얼마만큼 data block 이 깨져있는지 등에 대해서는 개발자로서 접근권한이 없기 때문에 해당 근거자료로는 부족하기 때문입니다.  </p><p>분리한다는 작업은 신규개발 및 일정을 산정하면 될 부분이고,<br>테이블을 분리하여 성능 개선이 된다면, 혹은 기존 개발된 부분에 무리가 가는 부분이 조금이라도 있다면 분리하는 것이 맞습니다.  </p><p>테이블의 수직분할은 컬럼을 기준으로 테이블을 분리하는 것을 의미하고 수평분할은 Row를 기준으로 테이블을 분리하는 것을 의미합니다.  </p><p>개발자로서 개발을 하면서 수직분할 작업은 했지만, 수평분할로 개발한 적은 단 한번도 없긴 하지만,<br>만약 해야한다면 이번이 처음으로 보입니다.  </p><p>기본적으로 수직 분할을 하는 이유는 컬럼이 계속 추가 되면, 테이블의 컬럼 수가 많을수록 I/O에 대한 부하가 걸리고,<br>수평 분할을 하는 이유는 테이블의 Row 수가 많을수록 Index에 대한 부하가 따르기 때문입니다.  </p><p>만약 한 테이블에 수많은 컬럼을 계속 추가하게 되어 존재하게 된다면,<br>디스크의 여러 블록에 데이터가 저장되므로 I/O 성능 저하를 불러올 수 있게 되어, 이렇게 컬럼이 많아지면 로우 체이닝과 로우 마이그레이션이 많아져서 성능이 저하되게 됩니다.  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">로우 체이닝(Row Chaining)</span><br><span class="line">길이가 너무 커서 하나의 블록에 저장되지 못하고 다수의 블록에 나누어져 저장</span><br><span class="line"></span><br><span class="line">로우 마이그레이션(Row Migration)</span><br><span class="line">수정된 데이터를 해당 데이터 블록에 저장하지 못하고 다른 블록의 빈 공간에 저장</span><br></pre></td></tr></table></figure><p>로우 체이닝과 로우 마이그레이션이 발생하여 많은 블록을 사용하게 되면, 불필요한 I/O가 발생하여 성능이 저하됩니다.<br>많은 I/O 발생은 성능에 직접적인 영향을 주므로 매우 중요한 문제며, 데이터에 대한 범위 검색을 할 경우 더 많은 I/O를 유발하므로 성능 저하를 일으킵니다.<br>수많은 컬럼을 동시에 조회하는 경우는 드물기 때문에,<br>각각의 조회 조건에 맞게 이용되는 컬럼들로 그룹을 묶어서 테이블 분할을 검토하게 됩니다. 하지만, 지금 상황은 컬럼이 추가되는 것이 아니라, row가 늘어나므로,  </p><p>조회나 처리에 대한 분산을 가능하게 하는 칼럼들을 기준으로 테이블을 분리하여 성능 개선에 큰 도움을 노리는 것이 아닙니다.  </p><p>그래서 만약 개발을 하게 되면, 수평분할을 고려해야합니다.<br>수평분할(Horizontal Partitioning)은 Row를 기준으로 테이블을 분리합니다.<br>만약 한 테이블에 대량의 데이터가 존재하고 트랜잭션이 몰린다면 성능 저하를 피하기 어렵습니다.  </p><p>대량의 데이터가 하나의 테이블에 있으면 인덱스 정보 생성 시 부하가 커집니다.<br>삭제와 등록을 반복하게 되면, 인덱스를 찾아가는 깊이(Depth)가 깊어지게 되고 인덱스의 크기가 커질수록 더 많은 성능 저하를 불러오게됩니다.<br>조회하는 성능보다 데이터를 처리하는 성능에 더 큰 영향을 미치게 되고,<br>이런 경우 트랜잭션이 분산 처리될 수 있도록 테이블 수평분할을 검토하게 됩니다.  </p><p>데이터 건수가 수천만 건을 넘고 처리가 많이 일어난다면 성능을 제대로 발휘할 수 없게 됩니다.<br>현재 A군과 B군의 맵핑테이블이 바로 그러합니다.<br>이때 논리적으로는 같은 테이블이지만 물리적으로 서로 다른 여러 개의 테이블 스페이스에 나누어서 저장하는 파티션 방법을 이용하면 성능 개선에 큰 도움이 됩니다.<br>파티션 종류로는 Range, Hash, List, Composite 파티션이 있으며,<br>가장 널리 이용하는 Range 파티션은 주로 날짜를 기준으로 하는 경우가 많습니다.<br>Range의 경우 데이터가 균등하게 나누어져서 비슷한 성능 개선을 보장하며, 보관 주기에 따라서 필요치 않는 데이터도 쉽게 지우고 관리할 수 있지만,<br>A군과 B군의 등록날짜들은 제 각각 이므로, 만약 하게 된다면 Hash와 List 형태가 더 올바릅니다.  </p><p>이러한 부분들에 대해 DBA와 논의할 준비를 하는 중,  </p><p>DBA 께서,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A군과 B군의 테이블에 대한 맵핑 테이블 뿐만 아니라, A군, B군, C군, D군.</span><br><span class="line">이 모든 것을 다 바꾸고, 변경해야지만 이 성능저하를 피할 수 있다.</span><br></pre></td></tr></table></figure></p><p>라는 논리를 펼쳤으며, 해당 논리의 근거를 요구했을 때 샤머니즘을 외치었기 때문에,<br>더 이상의 이야기는 진행할 수 없었으며, 5만건의 데이터는 기존 테이블에 INSERT 되게 되었습니다.  </p><p>4년이 넘게 유지된 모든 테이블 구성을 바꿔야할 경우, 개발자 입장에선 그로인한 모든 화면 및 백도어로직이 변경되게 됩니다.<br>그러면 그 근거자료가 존재해야하며,<br>논의하기 위해 준비했던 모든 자료들, 해당 테이블의 용량, INDEX구조등에 벗어난 뜬금없는 C군과 B군의 데이터 구조까지 변경해야한다면,<br>그 개발 범위를 다시 산정해야합니다.<br>그런데 그 논리가 그냥 ‘감’, 인디언 기우제 논리라면, 해당 개발건은 고착화 될 수 밖에 없으며,</p><p>그리고 그렇게 되었기 때문에 결국 유지보수로 인하여 최소화된 추가개발을 진행할 수 밖에 없게 되며,<br>개발로직이 처리할 업무를 사람이 처리하게 될 것입니다. </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>google_openRTB</title>
      <link href="/2018/12/2018-12-06-google_openrtb/"/>
      <url>/2018/12/2018-12-06-google_openrtb/</url>
      
        <content type="html"><![CDATA[<h2 id="문서-정리겸-정리합니다"><a href="#문서-정리겸-정리합니다" class="headerlink" title="문서 정리겸 정리합니다."></a>문서 정리겸 정리합니다.</h2><p><a href="https://github.com/google/openrtb" rel="external nofollow noopener noreferrer" target="_blank">github</a>에 올라온 google openrtb 를 적용해봅니다.</p><h2 id="The-OpenRTB-specification"><a href="#The-OpenRTB-specification" class="headerlink" title="The OpenRTB specification"></a>The OpenRTB specification</h2><p>This library implements the protocol / data model from the latest OpenRTB Specification, so reading that should be your first step; it’s also a good introduction to the concepts of real-time bidding.</p><p>OpenRTB is only specified in terms of JSON messages, so an implementation has to provide bindings for specific programming languages so you can create and manipulate its message objects in a convenient way, i.e. not needing to deal with the raw JSON representation. We do that by first translating the specification to a Protocol Buffer descriptor, which can be used to generate model classes. This library will only build a Java model out-of-the-box, but you can easily use the same Protobuf descriptor to generate the model code for many other languages. (Other features though, are only available for Java or other JVM-based languages.)</p><p>해당 google openrtb는 구글 프로토콜 버퍼 (Protocol Buffer)를 사용하여,<br>data model 을 구성하였습니다.</p><p>구글 프로토콜 버퍼란?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;프토토콜 버퍼&gt;는 랭귀지 중립적, 플랫폼 중립적인 데이터 시리얼라이즈 포맷입니다.  </span><br><span class="line"></span><br><span class="line">서로 다른 종류의 머신, 서로 다른 종류의 플랫폼에서 동일한 의미를 갖도록 데이터의 포맷을 정의한다는 점에서 &lt;프로토콜 버퍼&gt;라는 이름은 프로토콜(통신)을 위한 버퍼(데이터)을 뜻하게 되며,  </span><br><span class="line">&lt;프로토콜 버퍼&gt;는 이제 구글의 데이터 공용어 (gRPC의 디폴트 데이터 포맷) 입니다.  </span><br><span class="line"></span><br><span class="line">What is gRPC?</span><br><span class="line">- 구글이 정의한 RPC</span><br><span class="line">- 구글의 최신 API는 이제 REST API 뿐 아니라 gRPC API도 함께 제공함</span><br><span class="line">- gRPC는 &lt;프로토콜 버퍼&gt;를 기본 데이터 시리얼라이즈 포맷으로 사용 (JSON 등 다른 포맷도 사용 가능)</span><br><span class="line">- 다양한 랭귀지 지원: C++, Java, Python, Go, Ruby, C#, Node.js, PHP, ...</span><br><span class="line">  (JSON을 &lt;프로토콜 버퍼&gt;로 &lt;프로토콜 버퍼&gt;를 JSON으로 변환 가능)</span><br><span class="line">- XML보다 작고, 빠르고, 간단</span><br></pre></td></tr></table></figure><p>구글 프로토콜 버퍼를 적용하기 위해서는,<br><a href="https://github.com/protostuff/protobuf-jetbrains-plugin.git" rel="external nofollow noopener noreferrer" target="_blank">IntelliJ protobuf plugin</a>을 설치해야합니다.<br>IntelliJ 의 Plugins 에서는 검색이 되지 않습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://plugins.jetbrains.com/plugin/8277-protobuf-support</span><br></pre></td></tr></table></figure><p>경로에 가서 프로그인을 설치해야합니다.<br>또한, maven 을 정상적으로 build 하기 위해서는 protoc 를 설치해야하며,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://developers.google.com/protocol-buffers/</span><br></pre></td></tr></table></figure></p><p>를 통해 설치하였습니다.</p><p><a href="https://github.com/protocolbuffers/protobuf/releases/tag/v3.6.1" rel="external nofollow noopener noreferrer" target="_blank">releases page</a>에서,<br>protoc-3.6.1-win32.zip 파일을 받아, 윈도우기반에서 환경설정을 하였습니다.</p><p>환경설정을 하지 않을 경우에는 경우는 intellij 에, Settings &gt; Other Settings 에서 Protobuf Support 의 경로를 지정해주시면됩니다.<br>수정할 내용이 있으면 변경후, jar 파일을 만들어서 별도의 import 를 받아 처리해도 되고,</p><p><a href="https://mvnrepository.com/artifact/com.google.openrtb/openrtb-core" rel="external nofollow noopener noreferrer" target="_blank">open-core lib</a>에서 dependency 를 추가해도 됩니다.<br>maven 을 사용하기 때문에,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/com.google.openrtb/openrtb-core --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.openrtb&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;openrtb-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.5.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>해당 버전을 적용해도 상관없습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://developers.google.com/protocol-buffers/docs/javatutorial" rel="external nofollow noopener noreferrer" target="_blank">Protocol Buffer Basics: Java</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>null; nested exception is org.apache.http.client.ClientProtocolException</title>
      <link href="/2018/11/2017-11-29-redirect/"/>
      <url>/2018/11/2017-11-29-redirect/</url>
      
        <content type="html"><![CDATA[<h2 id="null-nested-exception-is-org-apache-http-client-ClientProtocolException"><a href="#null-nested-exception-is-org-apache-http-client-ClientProtocolException" class="headerlink" title="null; nested exception is org.apache.http.client.ClientProtocolException"></a>null; nested exception is org.apache.http.client.ClientProtocolException</h2><p>중간에 리다이렉트 조건이 존재할 경우,<br>HttpClient에서 ClientProtocolException이 일어날 수 있습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>로컬 https 셋팅방법</title>
      <link href="/2018/11/2017-08-21-HTTPS/"/>
      <url>/2018/11/2017-08-21-HTTPS/</url>
      
        <content type="html"><![CDATA[<h2 id="https-443-로컬에서-사용가능하게-이클립스-TOMCAT-JAVA-setting"><a href="#https-443-로컬에서-사용가능하게-이클립스-TOMCAT-JAVA-setting" class="headerlink" title="https(443) 로컬에서 사용가능하게 이클립스, TOMCAT, JAVA setting"></a>https(443) 로컬에서 사용가능하게 이클립스, TOMCAT, JAVA setting</h2><p>로컬에서, hosts를 변경하여 실 라이브 테스트 처럼 진행하고자 했을 때,<br>https 의 특정 페이지에서는 정상 동작하지 않을 경우에 대응 방안입니다.</p><p>https 인증서를 만드는 법은 <a href="https://www.comodossl.co.kr/certificate/ssl-installation-guides.aspx" rel="external nofollow noopener noreferrer" target="_blank">CSR 생성 및 인증서 적용 방법 안내</a>를 참고합니다.</p><p>Tomcat : CSR 생성 및 SSL 인증서 적용<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">1. 키파일 생성</span><br><span class="line">keytool -genkey -keyalg RSA -sigalg SHA1withRSA -alias hanbiro -keysize 2048 -keystore hanbiro.key</span><br><span class="line"></span><br><span class="line">※ 참고사항(위의 빨간색 부분과 매칭되게</span><br><span class="line">hanbiro는 키의 alias 이름으로 임의로 작성합니다.</span><br><span class="line">hanbiro.key는 keystore이름으로 임의로 만듭니다</span><br><span class="line"></span><br><span class="line">Enter keystore password: (비밀번호를 입력하세요.)</span><br><span class="line"></span><br><span class="line">What is your first and last name?</span><br><span class="line">[Unknown]: www.hanbiro.com (인증서 사용을 원하는 도메인)</span><br><span class="line">What is the name of your organizational unit?</span><br><span class="line">[Unknown]: LINUX (부서명)</span><br><span class="line">What is the name of your organization?</span><br><span class="line">[Unknown]: HANBIRO (업체명)</span><br><span class="line">What is the name of your City or Locality?</span><br><span class="line">[Unknown]: SEOCHO (지역명)</span><br><span class="line">What is the name of your State or Province?</span><br><span class="line">[Unknown]: SEOUL(시/도)</span><br><span class="line">What is the two-letter country code for this unit?</span><br><span class="line">[Unknown]: KR</span><br><span class="line">Is CN=www.hanbiro.com, OU=LINUX, O=HANBIRO, L=SEOCHO, ST=SEOUL, C=KR correct?</span><br><span class="line">[no]: y</span><br><span class="line"></span><br><span class="line">Enter key password for &lt;hanbiro&gt;</span><br><span class="line">(RETURN if same as keystore password): (엔터를 입력)</span><br><span class="line"></span><br><span class="line">키파일이 제대로 생성되었는지 확인해 봅니다.</span><br><span class="line">keytool -list -keystore hanbiro.key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. CSR 생성</span><br><span class="line"></span><br><span class="line">keytool -certreq -alias hanbiro -keyalg RSA -sigalg SHA1withRSA -file hanbiro.csr -keystore hanbiro.key</span><br><span class="line"></span><br><span class="line">Enter keystore password: (키파일 생성시에 입력하였던 패스워드를 입력합니다.)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3. 생성된 CSR 예</span><br><span class="line"></span><br><span class="line">한비로(www.comodossl.co.kr) 에서 인증서 신청하실 때 위에서 생성하신 CSR 내용을 복사해서 붙여 넣은후 나머지 설치 절차를 거칩니다.</span><br><span class="line">생성된 CSR 을 출력하면 아래와 같은 base64 형식의 문서를 볼 수 있습니다.</span><br><span class="line"></span><br><span class="line">[root@ns root]# cat hanbiro.csr</span><br><span class="line">-----BEGIN NEW CERTIFICATE REQUEST-----</span><br><span class="line">MIIBsDCCARkCAQAwcDELMAkGA1UEBhMCS1IxDjAMBgNVBAgTBVN</span><br><span class="line">lb3VsMQ8wDQYDVQQHEwZTZW9j</span><br><span class="line">aG8xEDAOBgNVBAoTB0hhbmJpcm8xDjAMBgNVBAsTBUxpbnV4MR4w</span><br><span class="line">HAYDVQQDExV3d3cucHJvZGln</span><br><span class="line">AAGgADANBgkqhkiG9w0BAQQFAAOBgQBhV3jIaT2wEOB1/AIOedu+4</span><br><span class="line">gECrr+6UIYhwPtSmIeoWXg5</span><br><span class="line">76+UHe5I1M2M/ew5j6d8pq4IBXaTesSrmwZuuuA2Stx4uXjb/Akjr8UIDX</span><br><span class="line">isnycJGmk5dQDCCT3G</span><br><span class="line">8IBd8gwgvQOiAhnfGSjIbStsPOiVCgB60uSz9Jc8s9rPIxh69w==</span><br><span class="line">-----END NEW CERTIFICATE REQUEST-----</span><br><span class="line"></span><br><span class="line">-----BEGIN … 부터 마지막 줄 -----END … 까지 복사하여 지정된 SSL 접수페이지에 복사하여 붙여 넣은 뒤 입력정보와 함께 전송하면 접수가 완료됩니다.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. 인증서 설치</span><br><span class="line"></span><br><span class="line">keytool -import -trustcacerts -alias COMODOSSL -file</span><br><span class="line">COMODOSSLCA.crt -keystore hanbiro.key</span><br><span class="line"></span><br><span class="line">keytool -import -trustcacerts -alias INTER -file</span><br><span class="line">AddTrustExternalCARoot -keystore hanbiro.key</span><br><span class="line"></span><br><span class="line">keytool -import -trustcacerts -alias hanbiro -file</span><br><span class="line">www_hanbiro.crt -keystore hanbiro.key</span><br><span class="line"></span><br><span class="line">##주의##</span><br><span class="line">Free SSL 및 PostiveSSL 의 경우, PostiveSSLCA.crt 파일을 추가 하지 않았을 경우,</span><br><span class="line">아래와 같은 메세지가 표시 되며 저장 되지 않으니 반드시 아래 작업을 진행하여 주시기 바랍니다.</span><br><span class="line">또한 -alias 설정시 .등의 특수문자가 있을 경우 인증서를 적용할 수 없습니다.</span><br><span class="line">예) keytool -import -trustcacerts -alias www.hanbiro.com -file PositiveSSLCA.crt -keystore hanbiro.key (X)</span><br><span class="line">keytool -import -trustcacerts -alias wwwhanbirocom -file PositiveSSLCA.crt -keystore hanbiro.key (0)</span><br><span class="line">에러내용</span><br><span class="line">keytool error: java.lang.Exception: Failed to establish chain from reply</span><br><span class="line"></span><br><span class="line">추가내용</span><br><span class="line">keytool -import -trustcacerts -alias POSITIVESSL -file PositiveSSLCA.crt -keystore hanbiro.key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5. 서버설정</span><br><span class="line">Server.xml을 설정합니다.</span><br><span class="line"></span><br><span class="line"># Tomcat 버젼 8.X 의 경우..</span><br><span class="line">&lt;Connector port=&quot;443&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">   maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</span><br><span class="line">   clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot;</span><br><span class="line">   keystoreFile=&quot;키스토어파일경로/hanbiro.key&quot; keystorePass=&quot;hanbiro.key 패스워드&quot;</span><br><span class="line">/&gt;</span><br><span class="line"></span><br><span class="line"># Tomcat 버젼 7.X 의 경우..</span><br><span class="line">&lt; -- Define a SSL Coyote HTTP/1.1 Connector on port 8443 --&gt;</span><br><span class="line">&lt;Connector port=&quot;8443&quot;</span><br><span class="line">   maxThreads=&quot;200&quot;</span><br><span class="line">   scheme=&quot;https&quot; secure=&quot;true&quot; SSLEnabled=&quot;true&quot;</span><br><span class="line">   keystoreFile=&quot;키스토어파일경로/hanbiro.key&quot; keystorePass=&quot;(hanbiro.key 패스워드)&quot; clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot;</span><br><span class="line">/&gt;</span><br><span class="line"></span><br><span class="line"># Tomcat 버젼 6.X 의 경우..</span><br><span class="line">&lt;!--Define a SSL Coyote HTTP/1.1 Connector on port 8443 --&gt;</span><br><span class="line">&lt;Connector port=&quot;443&quot;</span><br><span class="line">   maxThreads=&quot;150&quot; minSpareThreads=&quot;25&quot; maxSpareThreads=&quot;75&quot; enableLookups=&quot;false&quot; disableUploadTimeout=&quot;true&quot;</span><br><span class="line">   acceptCount=&quot;100&quot; debug=&quot;0&quot; scheme=&quot;https&quot; secure=&quot;true&quot; SSLEnabled=&quot;true&quot;  clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot;</span><br><span class="line">   keystoreFile=&quot;키스토어파일경로/hanbiro.key&quot; keystorePass=&quot;(hanbiro.key 패스워드)&quot;</span><br><span class="line">/&gt;</span><br><span class="line"></span><br><span class="line"># Tomcat 버젼 5.X 의 경우..</span><br><span class="line">&lt;!--Define a SSL Coyote HTTP/1.1 Connector on port 8443 --&gt;</span><br><span class="line">&lt;Connector port=&quot;443&quot;</span><br><span class="line">   maxThreads=&quot;150&quot; minSpareThreads=&quot;25&quot; maxSpareThreads=&quot;75&quot;  enableLookups=&quot;false&quot; disableUploadTimeout=&quot;true&quot;</span><br><span class="line">   acceptCount=&quot;100&quot; debug=&quot;0&quot; scheme=&quot;https&quot; secure=&quot;true&quot;  clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot;</span><br><span class="line">   keystoreFile=&quot;키스토어파일경로/hanbiro.key&quot;  keystorePass=&quot;(hanbiro.key 패스워드)&quot;</span><br><span class="line">/&gt;</span><br><span class="line"></span><br><span class="line"># Tomcat 버전 4.X 의 경우.</span><br><span class="line">&lt;!-- Define a SSL Coyote HTTP/1.1 Connector on port 8443 --&gt;</span><br><span class="line">&lt;Connector className=&quot;org.apache.coyote.tomcat4.CoyoteConnector&quot; port=&quot;443&quot; minProcessors=&quot;5&quot; maxProcessors=&quot;75&quot;</span><br><span class="line">  enableLookups=&quot;true&quot;  acceptCount=&quot;100&quot; debug=&quot;0&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</span><br><span class="line">  useURIValidationHack=&quot;false&quot; disableUploadTimeout=&quot;true&quot; /&gt;</span><br><span class="line">&lt;Factory className=&quot;org.apache.coyote.tomcat4.CoyoteServerSocketFactory&quot;</span><br><span class="line">  clientAuth=&quot;false&quot; protocol=&quot;TLS&quot;  keystoreFile=&quot;키스토어파일경로/hanbiro.key&quot;  keystorePass=&quot;(hanbiro.key 패스워드)&quot;</span><br><span class="line">/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6. 톰캣 재시작</span><br><span class="line"></span><br><span class="line">shutdown.sh</span><br><span class="line">startup.sh</span><br></pre></td></tr></table></figure></p><p>이라고 tomcat 설정에는 나와있는데요.</p><p>이를 통해 만들어진  STAR.keystore 파일을 임의의 경로로 이동시킵니다.<br>(예제에서는 D:/workset/STAR.xxxx.or.kr.keystore 로 정의합니다.)</p><p>Tomcat 이 설치되어있는 디렉토리로 이동하여,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\workset\apache-tomcat-8.0.37-windows-x64\apache-tomcat-8.0.37\conf</span><br></pre></td></tr></table></figure></p><p>server.xml 파일을 엽니다.</p><p>8080 port 값을 80 으로 변경하고, 8443 port 값을 443 으로 변경하는데요.<br><img src="/images/20170821https.PNG" alt="이미지">{: width=”100%”}</p><p><connector sslenabled="true" clientauth="false" connectiontimeout="3000" keystorefile="D:/workset/STAR.xxxx.or.kr.keystore" keystorepass="패스워드" maxthreads="1500" port="443" protocol="org.apache.coyote.http11.Http11Protocol" scheme="https" secure="true" sslprotocols="TLSv1,TLSv1.1,TLSv1.2"> 으로 수정합니다.</connector></p><p>해당 방법으로 작업시 편한 이유가, tomcat 설정의 server.xml 을 변경했기 때문에,<br>이클립스에서 별도의 80, 443을 변경하지 않더라도,</p><p>별도의 config 서버가 설정될때마다 자동으로 80포트가 적용됩니다.<br>(기존 8080을 사용하던 분들은 위에서 8080 port 를 80으로 변경하지 않으면됩니다.)</p><p>IntelliJ의 경우에는 이클립스와 다르게 별도의 config 설정을 가져가서 사용하지 않고,<br>직접접속하기 때문에,<br>server.xml 한번만 적용시 매우 편하게 처리할 수 있어 내부 개발시 매우 편리합니다.</p><p>PS. 가상의 keystoreFile을 만들 수는 있으나, 그럴 경우 처음 한번은 안전하지않음에서 그럼에도 불구하고 사용하도록 별도의 승인처리를 한번 이상해야하지만,<br>실 라이브에 있는 keystoreFile을 사용할 경우, 인증서 문제를 해결할 수 있습니다.</p><p>다만, localhost 로 그대로 사용시 안전하지 않음에 대한 경고가 다시 뜰 수 있으므로, hosts 변경을 통해 해당 도메인으로의 변경작업은 필요합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>openRTB</title>
      <link href="/2018/11/2018-11-27-openrtb/"/>
      <url>/2018/11/2018-11-27-openrtb/</url>
      
        <content type="html"><![CDATA[<h2 id="RTB-Real-Time-Bidding-실시간-경매-방식"><a href="#RTB-Real-Time-Bidding-실시간-경매-방식" class="headerlink" title="RTB - Real Time Bidding(실시간 경매 방식)"></a>RTB - Real Time Bidding(실시간 경매 방식)</h2><p>제가 openRTB 프로젝트를 시작하게 된 것은, 2년전 이 시기에 2016년 11월 경이었는데요.<br>다음카카오쪽에서 카카오스토리와 폴털 지면 등에 RTB를 추가하면서 해당 RTB를 대응하기 위한 구축을 위해서였습니다.</p><p>RTB 라는 것이 실시간 경매 방식을 의미하고요.<br>경쟁자들 사이에서 제일 비싼 값을 치르겠다고 말한 광고주가 광고 지면을 가져가는 형태가 경매 방식과 동일하여 붙여진 이름입니다.<br>경매 방식 중 이차가격 경매(Second-Price Auction) 등의 시스템이 openRTB에 그대로 사용됩니다.</p><p>경매를 하려면 경매를 벌일 사람들과 장소가 있어야 합니다.<br>[구매자]와 [판매자], [중개소] 가 필요합니다.<br>1:1로 물건을 사고파는 환경이라면 이 시스템은 있을 필요가 없습니다.  </p><p>경매 중개소에서 구매자는 자신에게 적합한 물건을 찾고, 이를 판매하려는 판매자에게 가격을 부릅니다.<br>RTB 광고 시장에도 구매자와 판매자, 중개소가 등장합니다.<br>DSP(구매자)와 SSP(판매자), 애드 익스체인지(중개소)가 그 역활을 합니다.</p><p>제가 개발을 하면서 느낀 점은,<br>Global 한 OpenRTB 프로젝트의 목표와, 국내 OpenRTB의 상황의 온도차가 조금 존재했습니다.  </p><p>Global 한 OpenRTB의 경우 기본적으로 바이어와 광고주, 퍼블리셔 간의 커뮤니케이션을 회사 표준안으로 통합해서 제공하여 Real-Time-Bidding 시장을 더욱더 성장시키는 것을 주목적으로 두는 것으로 이해했습니다.  </p><p>한마디로, OpenRTB의 궁극의 목표는 바이어와 셀러 간의 커뮤니케이션에서 사용될 공통어를 만드는 것이었습니다.<br>구글의 광고 디자인이 simple 하며, 실제 openRTB의 연동 SSP(&amp; ADExchange) 들의 디자인이 깔끔한 것이 그러한 점을 뒷받침해줍니다.  </p><p>국내의 경우는 DSP 의 광고의 얼마나 사용자에게 얼만큼의 유용한 광고가 송출되는지도 중요하지만, 그걸 표현하는 디자인을 조금더 감각적으로 표현하려고 합니다.<br>그러하기 때문에 국내의 대부분의 광고솔류션을 가진 업체들은 RTB가 필수가 아닌,<br>광고 플랫폼 사이에서 광고주의 편의를 돋는 하나의 기능일 뿐 플랫폼이 존재하는 목적이 아니기 때문에,<br>상황에 맞는 광고플랫폼에서 그 플랫폼 성격에 맞는 RTB 시스템을 구축하여,<br>추후에도 해당 광고솔류션의 경쟁력을 그대로 가져가는 형태로 진행되는 형태가 국내의 OpenRTB의 최종 목적지가 되는 것은 아닌가 싶으며,<br>그런 부분에서 국내와 해외의 openRTB 연동에서 해당 내용을 알맞게 조휼한다는 것은 꽤 어려운 일로 보입니다.  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RTB - 실시간으로 각각의 노출을 소비자가 기다리는 시간 동안 경매(입찰)</span><br><span class="line">Exchange - 노출 당 입찰자들 사이에서 경매를 하는 서비스</span><br><span class="line">Bidder - 노출을 얻기 위해 실시간 경매에서 경쟁하는 기업(엔티티)</span><br><span class="line">Seat - 노출을 얻기 원하는 기업이 입찰을 대신할 입찰자를 고용하는 것.</span><br><span class="line">Publisher - 하나 이상의 사이트를 운영하는 기업(엔티티)</span><br><span class="line">Site - 특별한 경우가 아니면 광고는 웹과 응용프로그램을 포함한 콘텐츠를 지원</span><br><span class="line">Deal ID - 특정 조건에 따라 광고 노출을 구매하는 Seat와 Publisher 사이에 기정 계약을 나타내는 ID</span><br></pre></td></tr></table></figure><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://www.ditoday.com/articles/articles_view.html?idno=19241" rel="external nofollow noopener noreferrer" target="_blank">RTB는 국내 광고 시장을 어떻게 바꿔 놓을까</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>WINDOWS 10 Bash Shell</title>
      <link href="/2018/11/2018-11-21-windowsSetting/"/>
      <url>/2018/11/2018-11-21-windowsSetting/</url>
      
        <content type="html"><![CDATA[<h2 id="윈도우즈-10에서-Linux-bash-shell-사용방법"><a href="#윈도우즈-10에서-Linux-bash-shell-사용방법" class="headerlink" title="윈도우즈 10에서 Linux bash shell 사용방법"></a>윈도우즈 10에서 Linux bash shell 사용방법</h2><p>윈도우즈 10에서는 우분투(Ubuntu bash shell) 리눅스  쉘이 사용 가능합니다.<br>윈도우에서 리눅스를 사용할 수 있다니 얼마나 행복한 일인가요~ 현재 베타 버전으로 윈도우 10에서 사용이 가능합니다.<br>사용방법은 비교적 간단합니다.   </p><h2 id="윈도우즈-설정으로-이동"><a href="#윈도우즈-설정으로-이동" class="headerlink" title="윈도우즈 설정으로 이동"></a>윈도우즈 설정으로 이동</h2><p>업데이트 및 복구 &gt; 개발자 모드 선택<br>제어판 &gt; 프로그램 &gt; 윈도우 기능켜기/끄기 &gt; 윈도우리눅스프로그램(리눅스용윈도우 하위시스템) 선택  </p><h2 id="Open-PowerShell-as-Administrator-and-run"><a href="#Open-PowerShell-as-Administrator-and-run" class="headerlink" title="Open PowerShell as Administrator and run:"></a>Open PowerShell as Administrator and run:</h2><p>PowerShell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure></p><p>윈도우즈의 Microsoft Store에서 다운받아 설치하는 합니다.<br><a href="https://aka.ms/wslstore" rel="external nofollow noopener noreferrer" target="_blank">윈도우 우분투</a> 이동 후 앱에서 ubuntu를 클릭하여 설치합니다.</p><p>루트권한으로 접속하기 위해서는,<br>만약 루트 권한으로 바꾸려면,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p>명령어를 사용하면 가능함. 실제 경로는 윈도우즈 최근 버젼에서는!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\%USERNAME%\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs\</span><br></pre></td></tr></table></figure><p>이처럼 경로가 좀 더 복잡하게 바뀌었습니다.<br>만약 숨겨진 폴더를 찾기 어려우면 탐색기 옵션에서 숨겨진 폴더 보기 옵션을 선택하시기 바랍니다.<br>찾기가 더 간단하며 이를 즐겨찾기에 포함해두시면 더 좋습니다.</p><h2 id="JAVA-설치하기"><a href="#JAVA-설치하기" class="headerlink" title="JAVA 설치하기"></a>JAVA 설치하기</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">sudo apt-get update</span><br><span class="line">apt install openjdk-8-jdk-headless</span><br></pre></td></tr></table></figure><p>openjdk 를 설치합니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://docs.microsoft.com/ko-kr/windows/wsl/install-win10" rel="external nofollow noopener noreferrer" target="_blank">Windows 10 Installation Guide</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MBean (JMX) Monitoring and Management</title>
      <link href="/2018/11/2018-11-20-registerMbeans/"/>
      <url>/2018/11/2018-11-20-registerMbeans/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;Resource name=&quot;xxx&quot; auth=&quot;Container&quot;</span><br><span class="line">     factory=&quot;com.zaxxer.hikari.HikariJNDIFactory&quot;</span><br><span class="line">     type=&quot;javax.sql.DataSource&quot;</span><br><span class="line">     minimumIdle=&quot;30&quot;</span><br><span class="line">     maximumPoolSize=&quot;30&quot;</span><br><span class="line">     maxLifetime=&quot;3600000&quot;</span><br><span class="line">     connectionTimeout=&quot;5000&quot;</span><br><span class="line">     dataSourceClassName=&quot;com.mysql.jdbc.jdbc2.optional.MysqlDataSource&quot;</span><br><span class="line">     dataSource.cachePrepStmts=&quot;true&quot;</span><br><span class="line">     dataSource.prepStmtCacheSize=&quot;250&quot;</span><br><span class="line">     dataSource.prepStmtCacheSqlLimit=&quot;2048&quot;</span><br><span class="line">     registerMbeans=&quot;true&quot;</span><br><span class="line">     dataSource.logger=&quot;com.mysql.jdbc.log.StandardLogger&quot;</span><br><span class="line">     dataSource.logSlowQueries=&quot;false&quot;</span><br><span class="line">     dataSource.dumpQueriesOnException=&quot;false&quot;</span><br><span class="line">     dataSource.user=&quot;xxxx&quot;</span><br><span class="line">     dataSource.password=&quot;xxxx&quot;</span><br><span class="line">     dataSource.url=&quot;jdbc:mysql:/xxxxx:3306/xxx?autoReconnect=true&quot;</span><br><span class="line">     validationQuery=&quot;SELECT 1&quot;</span><br><span class="line">     validationInterval=&quot;240000&quot;</span><br><span class="line">     testWhileIdle=&quot;true&quot; /&gt;</span><br></pre></td></tr></table></figure><p>초창기 JNDI(tomcat-jdbc)의 경우 JMX(jconsole 등)에 대한 설정에서 자동으로 dbfool 이 보였으나,<br>HikariCP를 적용하면,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registerMbeans=true</span><br></pre></td></tr></table></figure><p>를 해야지만, JMX 에서 확인이 가능하다고 합니다.<br>스프링 부트 2.0 의 default DBCP가 hikariCP 가 되었다고 합니다.</p><p>항상 hikariCP의 설명을 보면, 엄청 빠르고 가볍고, 신뢰할 수 있다고 설명합니다.<br>심지어 “zero-overhead”라며 엄청나게 높은 성능을 강조합니다.</p><p>2년전에 도입되었는데, 스프링 부트 2.0 의 default가 되었다는 것은 확실히 빠른다 뭐 그런 의미겠지요.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#configuring-a-datasource" rel="external nofollow noopener noreferrer" target="_blank">HikariCP</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cannot create JDBC driver of class</title>
      <link href="/2018/11/2018-11-05-context/"/>
      <url>/2018/11/2018-11-05-context/</url>
      
        <content type="html"><![CDATA[<p>새로운 db connection 을 연결했는데,<br>Tomcat에서 datasource/context정보를 못찾을 때.<br>다음과 같은 오류 내용이 발생했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cannot create JDBC driver of class &apos;&apos; for connect URL &apos;null&apos;</span><br></pre></td></tr></table></figure><p>일때.<br>datasource.properties  를 설정하여 처리하도록 작업이 되어있으며,<br>tomcat의 server.xml 을 설정해두었는데,<br>server.xml 파일 <host>태그에 하부 엘리먼트로<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context&gt;</span><br><span class="line">    &lt;ResourceLink name=&quot;xxx&quot; global=&quot;xxx&quot; type=&quot;javax.sql.DataSource&quot;/&gt;</span><br><span class="line">&lt;/Context&gt;</span><br></pre></td></tr></table></figure></host></p><p>위와같이 설정했어야했는데, context.xml 쪽 이슈는 빼면서 발생했습니다.<br>ResourceLink 를 통해, server.xml 에서 정의하였습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;Resource name=&quot;xxx&quot; auth=&quot;Container&quot;</span><br><span class="line">     factory=&quot;com.zaxxer.hikari.HikariJNDIFactory&quot;</span><br><span class="line">     type=&quot;javax.sql.DataSource&quot;</span><br><span class="line">     minimumIdle=&quot;30&quot;</span><br><span class="line">     maximumPoolSize=&quot;30&quot;</span><br><span class="line">     maxLifetime=&quot;3600000&quot;</span><br><span class="line">     connectionTimeout=&quot;5000&quot;</span><br><span class="line">     dataSourceClassName=&quot;com.mysql.jdbc.jdbc2.optional.MysqlDataSource&quot;</span><br><span class="line">     dataSource.cachePrepStmts=&quot;true&quot;</span><br><span class="line">     dataSource.prepStmtCacheSize=&quot;250&quot;</span><br><span class="line">     dataSource.prepStmtCacheSqlLimit=&quot;2048&quot;</span><br><span class="line">     registerMbeans=&quot;true&quot;</span><br><span class="line">     dataSource.logger=&quot;com.mysql.jdbc.log.StandardLogger&quot;</span><br><span class="line">     dataSource.logSlowQueries=&quot;false&quot;</span><br><span class="line">     dataSource.dumpQueriesOnException=&quot;false&quot;</span><br><span class="line">     dataSource.user=&quot;xxxxx&quot;</span><br><span class="line">     dataSource.password=&quot;xxxxx&quot;</span><br><span class="line">     dataSource.url=&quot;jdbc:mysql://xxxxx:3306/xxx?autoReconnect=true&quot;</span><br><span class="line">     validationQuery=&quot;SELECT 1&quot;</span><br><span class="line">     validationInterval=&quot;240000&quot;</span><br><span class="line">     testWhileIdle=&quot;true&quot; /&gt;</span><br></pre></td></tr></table></figure><p>resource에 정의해두었기 때문에 server.xml 에만 정의하면 이슈가 발생합니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>이클립스 CPU 100%</title>
      <link href="/2018/10/2018-10-29-eclipse/"/>
      <url>/2018/10/2018-10-29-eclipse/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">linking viewer selection with current editor</span><br></pre></td></tr></table></figure><p>위와같은 메시지가 우측하단에 노출되면서 cpu 100% 를 차지하는데, 실제 메모리라든가 다른 문제는 없었습니다.<br>소스 수정 및 반영을 하는데도 상당히 시간이 오래 걸렸는데,<br>인터넷 서핑을 해보니,<br>eclipse 의 PermSize 를 늘려주지 문제가 해결되었다고 합니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-XX:PermSize=512m</span><br><span class="line">-XX:MaxPermSize=512m</span><br><span class="line">-Xms2048m</span><br><span class="line">-Xmx2048m</span><br></pre></td></tr></table></figure></p><p>PermSize 하고, MaxPermSize 기능 추가했습니다.</p><p>성능향상을 위해,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Help-&gt;About Eclipse-&gt;Installation Details-&gt;Installed Software</span><br></pre></td></tr></table></figure></p><p>mylyn 플러그인 제거(php 용)하였습니다.<br>어느정도 성능이 안정화되었지만,<br>결국 이클립스보다 인텔리J로 코딩할때 안정감이 있어, 툴 변경을 고민중입니다.</p><p>==== 2018.11.20 추가내용 ====<br>아무리 해도 해결이 안되어서 인텔리J로 작업중이었는데,<br>창을 전부 닫고,<br>재시작하니 문제가 해결되었습니다.<br>PermSize라기보다,<br>프로젝트를 자주 close 하고 다시 open 하면서 남겨있던 java 파일과 linking viewer 사이에 뭔가 문제가 발생해서, 지연이 발생된게 아닌가 추측합니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://stackoverflow.com/questions/7315019/problem-in-linking-viewer-selection-with-current-editor-eclipse" rel="external nofollow noopener noreferrer" target="_blank">problem in linking viewer selection with current editor - Eclipse</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>스프링 프레임워크를 기반으로 한 개발플랫폼 01</title>
      <link href="/2018/10/2018-10-27-springboot/"/>
      <url>/2018/10/2018-10-27-springboot/</url>
      
        <content type="html"><![CDATA[<h2 id="스프링-부트-기능정의"><a href="#스프링-부트-기능정의" class="headerlink" title="스프링 부트 기능정의"></a>스프링 부트 기능정의</h2><p>단독실행가능한 스프링 애플리케이션 생성<br>내장 컨테이너로 톰캣, 제티, 혹은 언더토우 중에서 선택가능<br>스타터(starter)를 통해 간결한 의존성 구성지원<br>스프링에 대한 자동구성(Auto-Configuration) 제공<br>더이상 XML 구성 필요없음 (pom.xml 정도만 작업 후 순수한 자바만 가지고 적용가능.<br>제품 출시(release) 후 운영에 필요한 다양한 기능(상태점검, 모니터링 등) 제공 (healthcheck?)</p><h2 id="스프링부트-구성요소"><a href="#스프링부트-구성요소" class="headerlink" title="스프링부트 구성요소"></a>스프링부트 구성요소</h2><p>빌드도구(그레이들 vs 메이븐) : 요근대는 그레이들을 많이씀. (아직 maven 사용)<br>스프링 프레임워크(4.x vs 5.x)<br>스프링 부트(v1.5 vs v2.0)<br>스프링 부트 스타터(spring-boot-starter)</p><p>프랑스 철학자 ‘장 풀 샤르트르’가 인생은 BCD 라고 했다고 합니다.<br>태어나고(Bitch)- 죽는(Death) 사이에 수많은 선택을 한다고,</p><p>스트링 부트 또한 BCD입니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Build - Code - Deploy</span><br></pre></td></tr></table></figure></p><ul><li>Build</li><li>Code.<ul><li>spring-boot-starter</li><li>Auto-configuration</li><li>programming in spring enviroment</li></ul></li><li>Deploy</li></ul><h2 id="Build-빌드"><a href="#Build-빌드" class="headerlink" title="Build(빌드)"></a>Build(빌드)</h2><p>[spring initializr]:(<a href="https://start.spring.io)를" rel="external nofollow noopener noreferrer" target="_blank">https://start.spring.io)를</a> 통해 파일을 생성해서 다운받을 수 있습니다.</p><h2 id="Java-va-Kotilin-vs-Groovy"><a href="#Java-va-Kotilin-vs-Groovy" class="headerlink" title="Java va Kotilin vs Groovy"></a>Java va Kotilin vs Groovy</h2><p>스프링 부트는 자바, 코틀린, 그루비를 지원합니다.</p><p>빌드도구로는 그레이들과 메이븐이 있는데,<br>의존성과 빌드동작들을 실행하는 스크립트가 존재합니다.<br>그래들은 build.gradle 에 선언하고 maven의 경우 pom.xml 에 선언하게 됩니다.</p><p>Executable Jar or war</p><p>실행학능한(Executable) JAR (or WAR) : App 과 tocmat 이 공존<br>고전적인 WAR : 톰캣과 APP이 분리되어있는 형태</p><h2 id="스프링부트는-2-0부터"><a href="#스프링부트는-2-0부터" class="headerlink" title="스프링부트는 2.0부터!!"></a>스프링부트는 2.0부터!!</h2><p>1.5 는 스프링 4 지원 2.0은 스프링 5 지원이며 주가되는 것은 스프링부트 2.0을 주가 됩니다.</p><h2 id="스프링부트는-애너테이션-기반으로-작동-컴포넌트를-탐색하여-동작함"><a href="#스프링부트는-애너테이션-기반으로-작동-컴포넌트를-탐색하여-동작함" class="headerlink" title="스프링부트는 애너테이션 기반으로 작동(컴포넌트를 탐색하여 동작함.)"></a>스프링부트는 애너테이션 기반으로 작동(컴포넌트를 탐색하여 동작함.)</h2><p>@SpringBoodtApplication(with SpringApplication)<br>@ComponentScan<br>@EnableAutoConfiguration<br>@configuration<br>@ConditonalOn~~<br>@SpringBoodtConfigration(= @Configuration)<br>@EnableConfigurationProperties<br>@ConfigurationProperties</p><h2 id="Auto-Configuration"><a href="#Auto-Configuration" class="headerlink" title="Auto-Configuration"></a>Auto-Configuration</h2><ul><li>spring-starter 를 github에서 검색가능합니다.</li><li>스프링부트가 기술흐름에 따라 제공하는 관례(Convention)적인 구성</li><li>봐야할 모듈 : spring-boot-autoconfigure</li><li>동작선언<ul><li>@EnableAtuoConfigurazion(with @SpringBootApplication)</li><li>@Configuration</li></ul></li><li>tkdyd dosjxpdltus<ul><li>@Configuration</li><li>@ConditonalOn</li></ul></li></ul><h2 id="외부구성-External-Configuration"><a href="#외부구성-External-Configuration" class="headerlink" title="외부구성(External Configuration)"></a>외부구성(External Configuration)</h2><ol><li>실행인자</li><li>spring_application_json<ul><li>서버안에 json 으로 선언한 구성파일의 위치 지정</li></ul></li><li>환경변수(운영체제)</li><li>기타등등</li><li>application.yml or application.properties</li><li>application-{defaultprofiles}.yml</li></ol><p>1이 우선순위가 가장높습니다.</p><h2 id="Programming-in-Spring-Environment"><a href="#Programming-in-Spring-Environment" class="headerlink" title="Programming in Spring Environment"></a>Programming in Spring Environment</h2><ul><li>@ComponentScan 을 통해 ApplicationContext 적재<ul><li>@Repository</li><li>@Component</li><li>@Service</li><li>@Controller &amp; @RestController</li><li>@Configuratioin<ul><li>@Bean</li><li>@ConfiguraitonProperties</li></ul></li><li>DI, IoC, @Autowired</li><li>@Value Vs @ConfigurationProperties</li><li>AOP 프로그래밍</li></ul></li></ul><p>완료<br>– 업무 구현(비즈니스 로직)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>clean package -P</title>
      <link href="/2018/10/2018-10-29-clean_package/"/>
      <url>/2018/10/2018-10-29-clean_package/</url>
      
        <content type="html"><![CDATA[<p>maven package clean 하게 처리하면서 pom.xml 에 기술한 resource 를 사용하는 법입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clean package -P</span><br></pre></td></tr></table></figure><p>-P는 정의된 profies중 하나를 처리함을 의미합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- profile definition --&gt;</span><br><span class="line">   &lt;profiles&gt;</span><br><span class="line">       &lt;profile&gt;</span><br><span class="line">           &lt;id&gt;local&lt;/id&gt;</span><br><span class="line">           &lt;activation&gt;</span><br><span class="line">               &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">           &lt;/activation&gt;</span><br><span class="line">           &lt;properties&gt;</span><br><span class="line">               &lt;environment&gt;&lt;/environment&gt;</span><br><span class="line">           &lt;/properties&gt;</span><br><span class="line">       &lt;/profile&gt;</span><br><span class="line">       &lt;profile&gt;</span><br><span class="line">           &lt;id&gt;dev&lt;/id&gt;</span><br><span class="line">           &lt;properties&gt;</span><br><span class="line">               &lt;profile-id&gt;dev&lt;/profile-id&gt;</span><br><span class="line">               &lt;environment&gt;-dev&lt;/environment&gt;</span><br><span class="line">               &lt;maven.test.skip&gt;true&lt;/maven.test.skip&gt;</span><br><span class="line">           &lt;/properties&gt;</span><br><span class="line">       &lt;/profile&gt;</span><br><span class="line">       &lt;profile&gt;</span><br><span class="line">           &lt;id&gt;server&lt;/id&gt;</span><br><span class="line">           &lt;properties&gt;</span><br><span class="line">               &lt;profile-id&gt;server&lt;/profile-id&gt;</span><br><span class="line">               &lt;environment&gt;-server&lt;/environment&gt;</span><br><span class="line">               &lt;maven.test.skip&gt;true&lt;/maven.test.skip&gt;</span><br><span class="line">           &lt;/properties&gt;</span><br><span class="line">       &lt;/profile&gt;</span><br><span class="line">   &lt;/profiles&gt;</span><br></pre></td></tr></table></figure><p>위와같이 server, dev, local 등을 설정할 수 있으며 그냥 처리할 경우, activeByDefault에 의해 local 이 default 처리됩니다.<br>resources-batch 와 같이 resource뒤에 접미사를 ‘-dev’ , ‘-batch’등으로 두어 프로파일을 선택할 수 있도록 합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>protocol 설정하기</title>
      <link href="/2018/10/2018-10-29-protocol/"/>
      <url>/2018/10/2018-10-29-protocol/</url>
      
        <content type="html"><![CDATA[<h2 id="org-apache-coyote-http11-Http11NioProtocol-로-변경"><a href="#org-apache-coyote-http11-Http11NioProtocol-로-변경" class="headerlink" title="org.apache.coyote.http11.Http11NioProtocol 로 변경"></a>org.apache.coyote.http11.Http11NioProtocol 로 변경</h2><p>BIO connector  에 비해서 NIO connector 를 사용하는 것 자체로 20~30% 정도의 성능 향상이 이루어진다고 합니다.<br>현재 server.xml 을 보았을 때,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector protocol=&quot;HTTP/1.1&quot; port=&quot;80&quot; enableLookups=&quot;false&quot; tcpNoDelay=&quot;true&quot;  compression=&quot;off&quot;</span><br><span class="line">           maxThreads=&quot;5000&quot; minSpareThreads=&quot;50&quot; acceptCount=&quot;10&quot; connectionTimeout=&quot;8000&quot;</span><br><span class="line">           maxKeepAliveRequests=&quot;-1&quot; maxHttpHeaderSize=&quot;40960&quot;</span><br><span class="line">/&gt;</span><br><span class="line"></span><br><span class="line">   &lt;Connector port=&quot;443&quot; keystoreFile=&quot;파일경로&quot;                </span><br><span class="line">               keystorePass=&quot;비밀번호&quot; protocol=&quot;org.apache.coyote.http11.Http11Protocol&quot;</span><br><span class="line">              maxThreads=&quot;4000&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</span><br><span class="line">              clientAuth=&quot;false&quot; connectionTimeout=&quot;8000&quot; maxHttpHeaderSize=&quot;40960&quot; /&gt;</span><br></pre></td></tr></table></figure><p>protocol=”HTTP/1.1”와 protocol=”org.apache.coyote.http11.Http11Protocol”를 사용하고 있습니다.<br>80포트로 사용하는 protocol=”HTTP/1.1” 를 org.apache.coyote.http11.Http11NioProtocol 로 변경하였으며,<br>기존에 쓰던 org.apache.coyote.http11.Http11Protocol 또한 org.apache.coyote.http11.Http11NioProtocol으로 변경하여 전체 서버 적용하여 안정화가 되었다는<br>이야기를 들어, 제 서버에도 적용해봤습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;Connector protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot; port=&quot;80&quot; enableLookups=&quot;false&quot; tcpNoDelay=&quot;true&quot;  compression=&quot;off&quot;</span><br><span class="line">           maxThreads=&quot;5000&quot; minSpareThreads=&quot;50&quot; acceptCount=&quot;10&quot; connectionTimeout=&quot;8000&quot;</span><br><span class="line">           maxKeepAliveRequests=&quot;-1&quot; maxHttpHeaderSize=&quot;40960&quot;</span><br><span class="line">/&gt;</span><br><span class="line"></span><br><span class="line">   &lt;Connector port=&quot;443&quot; keystoreFile=&quot;파일경로&quot;                </span><br><span class="line">               keystorePass=&quot;비밀번호&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span><br><span class="line">              maxThreads=&quot;4000&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</span><br><span class="line">              clientAuth=&quot;false&quot; connectionTimeout=&quot;8000&quot; maxHttpHeaderSize=&quot;40960&quot; /&gt;</span><br></pre></td></tr></table></figure><p>전체 변경을 완료했습니다.<br>변경 전과 변경 후의 Thread 갯수와 속도 개선등의 명확한 수치 변화는 확인되지 않았습니다. 오히려 Thread 가 100개 정도 더 증가된 것으로 확인이되네요.</p><p>참고로 톰캣에서 protocol을 설정하지 않으면 아래의 2가지 connector를 자동으로 스위칭 한다고 하는데,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blocking Java connector - org.apache.coyote.http11.Http11Protocol</span><br><span class="line">the APR/native connector - org.apache.coyote.http11.Http11AprProtocol</span><br></pre></td></tr></table></figure><p>위의 2가지로 스위칭한다고 합니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://sejoung.github.io/2018/10/tomcat_thread_blocking_ssl" rel="external nofollow noopener noreferrer" target="_blank">tomcat_thread_blocking_ssl</a></li><li><a href="http://bcho.tistory.com/788" rel="external nofollow noopener noreferrer" target="_blank">Apache Tomcat Tuning</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Alias 설정하기</title>
      <link href="/2018/10/2018-10-24-alias_setting/"/>
      <url>/2018/10/2018-10-24-alias_setting/</url>
      
        <content type="html"><![CDATA[<h2 id="alias-란"><a href="#alias-란" class="headerlink" title="alias 란 ?"></a>alias 란 ?</h2><p>일종의 별명으로, 서버에서 작업하거나 모니터링을 할 때,<br>너무 길거나 복잡해서 매번 입력하기 귀찮거나 기억하기 어려운 명령들이 있을 수 있으며,<br>이러한 명령을 자주 사용하지 않는다면 큰 무리가 없겠으나,<br>개개인의 업무 스타일에 따라 자주 사용하게 된다면 그때마다 매번 명령들을 어렵게 입력해야 하는 고통을 감내해야 합니다.<br>alias 기능을 이용하면 어떤 명령이든지 명령의 길이가 얼마이든지 상관없이 내가 사용하기 편하게 바꾸어서 사용할 수 있습니다.  </p><p>다만, 그렇게 되면 alias 명령어를 외우게 되어 실제 명령어를 까먹을 수 있으니,<br>alias 설정했다는 것을 잊지 말아야합니다.</p><p>사용자별 alias 가 있고,<br>모든 사용자에 대한 alias 가 존재합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/home/계정명/.bashrc</span><br><span class="line">/etc/bashrc</span><br></pre></td></tr></table></figure><p>보통은 root 에서 작업을 한다고 할 경우에,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/root/.bashrc</span><br></pre></td></tr></table></figure><p>에 alias 를 등록하여 처리하게 됩니다.<br>작업이 완료되면,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>를 사용하여 바로 적용하면됩니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nohup 을 이용해서 서버 실행. pid 로 자동 stop 기능</title>
      <link href="/2018/10/2018-10-23-nohup_jar/"/>
      <url>/2018/10/2018-10-23-nohup_jar/</url>
      
        <content type="html"><![CDATA[<p>서버내부에서 helthcheck 서버를 구성할 때 처리할 때,<br>특정폴더에 올라간 jar 파일을 가지고,<br>서버를 실행시키거나, 중지시키는 용도의 shell script 입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">SERVICE_NAME=healthcheck</span><br><span class="line">PATH_TO_JAR=/home/users/deploy/healthcheck.jar</span><br><span class="line">PID_PATH_NAME=/tmp/healthcheck-pid</span><br><span class="line">case $1 in</span><br><span class="line">    start)</span><br><span class="line">        echo &quot;Starting $SERVICE_NAME ...&quot;</span><br><span class="line">        if [ ! -f $PID_PATH_NAME ]; then</span><br><span class="line">            nohup java -jar $PATH_TO_JAR /tmp 2&gt;&gt; /dev/null &gt;&gt; /dev/null &amp; echo $! &gt; $PID_PATH_NAME</span><br><span class="line">            echo &quot;$SERVICE_NAME started ...&quot;</span><br><span class="line">        else</span><br><span class="line">            echo &quot;$SERVICE_NAME is already running ...&quot;</span><br><span class="line">        fi</span><br><span class="line">    ;;</span><br><span class="line">    stop)</span><br><span class="line">        if [ -f $PID_PATH_NAME ]; then</span><br><span class="line">            PID=$(cat $PID_PATH_NAME);</span><br><span class="line">            echo &quot;$SERVICE_NAME stoping ...&quot;</span><br><span class="line">            kill $PID;</span><br><span class="line">            echo &quot;$SERVICE_NAME stopped ...&quot;</span><br><span class="line">            rm $PID_PATH_NAME</span><br><span class="line">        else</span><br><span class="line">            echo &quot;$SERVICE_NAME is not running ...&quot;</span><br><span class="line">        fi</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>start 할 때, pid 를 특정 파일에 저장하며, stop 할때 해당 pid를 kill 합니다.<br>자주 사용하는 기능으로,<br>pid를 저장함으로써 다시 실행하거나 중지할때 해당 파일을 kill 합니다.</p><p>이 스크립트의 문제는 별도의 서비스를 통해, 프로세스가 kill 되었을 때, 혹은<br>pid 파일이 삭제되면, stop을 하더라도 프로세스가 종료가 안될 수 있습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 8의 stream을 이용한 List 중복제거</title>
      <link href="/2018/10/2018-10-16-lamda02/"/>
      <url>/2018/10/2018-10-16-lamda02/</url>
      
        <content type="html"><![CDATA[<p>Friend 라는 모델의 배열 형태에서 friend_id 를 중복을 제거해서 가져오고자</p><h2 id="기존코드"><a href="#기존코드" class="headerlink" title="기존코드"></a>기존코드</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; userIdList = new ArrayList&lt;String&gt;();</span><br><span class="line">for(Friend friend : insertList) &#123;</span><br><span class="line">   boolean isExist = false;</span><br><span class="line">   if (friend != null) &#123;</span><br><span class="line">      for(String user_id : userIdList) &#123;</span><br><span class="line">         if(friend.getUser_id().equals(user_id)) &#123;</span><br><span class="line">            isExist = true;         </span><br><span class="line">            break;      </span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      if(isExist == false) userIdList.add(friend.getUser_id());</span><br><span class="line">   &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="자바8-stream-사용"><a href="#자바8-stream-사용" class="headerlink" title="자바8 stream 사용"></a>자바8 stream 사용</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; userIdList = insertList.stream().map(Friend::getUser_id).distinct().collect(Collectors.toList());</span><br></pre></td></tr></table></figure><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://sexydynamite.blogspot.com/2015/02/java-8-stream-list.html" rel="external nofollow noopener noreferrer" target="_blank">Java 8의 stream을 이용한 List 중복제거</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jetbrains-day-seoul-2018</title>
      <link href="/2018/10/2018-10-16-jetbrains/"/>
      <url>/2018/10/2018-10-16-jetbrains/</url>
      
        <content type="html"><![CDATA[<h2 id="JetBrains-Day-서울-2018"><a href="#JetBrains-Day-서울-2018" class="headerlink" title="JetBrains Day 서울 2018"></a>JetBrains Day 서울 2018</h2><p>작년에 참석 못해서 아쉬운데, 올해에는 참석 성공.<br>그런데,<br>Hall A (Java JVM 세션 )<br>Hall B (.NET 세션)</p><p>위 두개로 나뉘어서 진행됩니다. Java JVM 세션이지만, 거의 대부분이 코틀린관련 이야기를 하게되어, 주변 지인들은 관심이 그렇게까지는 없습니다.</p><h2 id="10-00-11-30"><a href="#10-00-11-30" class="headerlink" title="10:00 - 11:30"></a>10:00 - 11:30</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">기조연설 :</span><br><span class="line"></span><br><span class="line">개발자의 생산성을 높이기위한 장벽 제거 - by Hadi Hariri</span><br><span class="line">개발 작업에 뒷따르는 다양한 인위적인 장벽 없다고 상상해보십시오. 아무도 여러분에게 사소한 관여를 하지 않고, 심지어 아무도 출퇴근시에 쳐다 보지도 않는다고 생각해 보세요.관리자가 없다는 것, 자유롭고 이상적이지 않습니까? 모든 것이 원하는 대로 실행되고 우리는 훨씬 더 생산적이 될 것입니다.</span><br><span class="line"></span><br><span class="line">JetBrains에서는 이러한 장벽이 많이 존재하지 않습니다. 그러나 장벽이없는 것이 항상 쉬운 것은 아닙니다. 사실 우리에게 부딛히는 외부 장벽들 없다면 또 모든게 올바르게 작동 하지는 않을 가능성이 크죠.</span><br><span class="line">이 강연에서 우리는 상하 관계의 장벽이 없는 업무의 흐름에 대한 장단점을 살펴보고 이때 발생하는 특정 문제를 극복하는 방법을 살펴볼 것입니다.</span><br><span class="line">사내 프로젝트지만 모두 자유롭게 코딩하는 방법을 JetBrains 에서 공유 드립니다.</span><br><span class="line"></span><br><span class="line">소프트웨어를 모르는 대한민국 기업의 위기 - by 안영회</span><br><span class="line">80년대 후반 미국에서 장비를 들여오면서 번들 형태의 소프트웨어를 수정하는 업무로 시작한 대한민국 전산실. 후배들은 90년대 중후반 웹 기술을 배우면서, 외산 소프트웨어 지원 인력이 아닌 직접 개발하는 기회를 얻었습니다. 그래서, 시작한 1세대가 험난한 시절(?)을 보내고 이제야 그 안목으로 대한민국 사회에 기여를 하고자 발언을 시작합니다. 이제는 대한민국이 소프트웨어 산업을 주도해 갈 수 있습니다. 외세의 한국 영업 파트너가 아니라 진짜 소프트웨어 만드는 사람과 기업으로 가능합니다. 우리 선조들이 만드셨던 측우기와 거북선을 소프트웨어로 다시 실현하는 그날을 꿈꾸며...</span><br></pre></td></tr></table></figure><h2 id="13-00-13-45"><a href="#13-00-13-45" class="headerlink" title="13:00 - 13:45"></a>13:00 - 13:45</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Kotlin - What&apos;s New - by Hadi Hariri</span><br><span class="line">코틀린 1.1 버전 출시 후 시간이 많이 지났습니다. 이번 세션에서는 멀티플랫폼 프로젝트 지원 등 코틀린 개발언어의 새로운 기능들에 대해서 알아 볼 예정입니다.</span><br></pre></td></tr></table></figure><h2 id="14-00-14-45"><a href="#14-00-14-45" class="headerlink" title="14:00 - 14:45"></a>14:00 - 14:45</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Kotlin/Anywhere - by Hadi Hariri</span><br><span class="line">Kotlin은 JVM, Android, JavaScript를 대상의 언어로 알고 계셨나요? 이제 Kotlin / Native를 사용하여 iOS, macOS, Windows, Linux와 같은 다른 플랫폼을 지원할 수 있어, 단일 프로젝트에서 여러 플랫폼을 타겟팅 할 수 있게 되었습니다. 이 세션에서는 Kotlin과 함께 멀티 플랫폼 프로젝트를 만드는 방법, 언어에서 제공하는 장점 뿐만 아니라 함께 사용할 수 있는 라이브러리에 대한 내용을 다룰 것입니다.</span><br></pre></td></tr></table></figure><h2 id="15-00-15-45"><a href="#15-00-15-45" class="headerlink" title="15:00 - 15:45"></a>15:00 - 15:45</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Kotlin에서 제공하는 Coroutines을 사용하는 방법 - by 권태환</span><br><span class="line">Kotlin Coroutines을 소개하며, 회사 안드로이드 프로젝트에 적용한 Coroutines 적용하며 얻은 경험을 짧게 공유합니다.</span><br></pre></td></tr></table></figure><h2 id="16-00-16-45"><a href="#16-00-16-45" class="headerlink" title="16:00 - 16:45"></a>16:00 - 16:45</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IntelliJ Tips and Tricks - by Hadi Hariri</span><br><span class="line">IntelliJ IDEA 기반의 IDE 활용시 너무나도 많은 기능들을 놓치고 있는 경우가 많습니다. 출시는 연간 3회가 되고 신규 기능들은 늘어나는데 따라가지 못하는 경우가 많죠. 가장 최신 기능중 유용한 기능들을 위주로 숨겨진 신규 기능들을 소개하는 세션을 가지려 합니다.</span><br></pre></td></tr></table></figure><h2 id="17-00-17-45"><a href="#17-00-17-45" class="headerlink" title="17:00 - 17:45"></a>17:00 - 17:45</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Backend.AI의 JetBrains IDE용 플러그인 개발 경험 - by 고재필</span><br><span class="line">Backend.AI는 사용자가 작성한 코드를 간단한 설정만으로 Cloud자원을 이용해서 구동하고 결과를 돌려주는 머신러닝에 최적화된 PaaS입니다. 기존의 Backend.AI에서 지원하던 다양한 개발 환경 통합에 더하여 새로이 IntelliJ 기반 IDE 통합을 위해 플러그인을 제작하였습니다. IntelliJ기반 IDE를 지원하는 것과 다른 개발환경 지원간의 차이점과 플러그인을 개발하면서 알게된 것들에 대해서 이야기 하고, 한계점에 대해서 논합니다. 그리고, 실제 결과물을 이용한 로컬 개발 환경에서의 실행과 원격 자원을 이용한 실행간의 손쉬운 전환을 시연합니다.</span><br></pre></td></tr></table></figure><p>앞으로 코틀린 관련 공부를 해봐야겠습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://info.jetbrains.com/jetbrains-day-seoul-2018.html" rel="external nofollow noopener noreferrer" target="_blank">Chapter 14 람다와 스트림</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>람다와 스트림</title>
      <link href="/2018/10/2018-10-15-lamda_01/"/>
      <url>/2018/10/2018-10-15-lamda_01/</url>
      
        <content type="html"><![CDATA[<h2 id="람다식"><a href="#람다식" class="headerlink" title="람다식"></a>람다식</h2><p>람다식은 메서드를 하나의 식(expression)으로 표현하는 것을 의미합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 객체 지향 언어보다는 함수 지향 언어에 가깝습니다.  </span><br><span class="line">- 함수를 간략하면서도 명확한 식으로 표현할 수 있도록 해줍니다.  </span><br><span class="line">- 메서드를 람다식으로 표현하면 메서드의 이름 및 반환 값이 없어지므로 익명 함수 라고도 합니다.   </span><br><span class="line">- 람다식의 형태는 매개 변수를 가진 코드 블록이지만 런타임 시에는 익명 구현 객체를 생성합니다.</span><br></pre></td></tr></table></figure><h2 id="함수형-인터페이스"><a href="#함수형-인터페이스" class="headerlink" title="함수형 인터페이스"></a>함수형 인터페이스</h2><p>함수형 인터페이스는 람다식을 다루기 위한 인터페이로 하나의 추상 메서드만 정의되어 있어야 합니다. (단, static 메서드와 default 메서드의 개수에는 제약이 없음)<br>단순하게 하나의 interface 를 만들고, 거기에 추상화 메소드를 만들면, 람다식이 가능하게 됩니다.<br>보통 new 객체를 만들 었을 때 추상화 객체에 대한 Anonymous 객체가 생성되었던 부분을 조금더 간결하게 만들어지는 것입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 함수형 인터페이스 타입의 매개변수 및 반환 타입이 함수형 인터페이스 타입이라면 람다식을 참조하는 참조변수를 매개변수로 지정하고 람다식을 가리키는 참조변수를 반환하거나 또는 람다식 자체를 반환할 수 있습니다.  </span><br><span class="line">- 람다식은 Object 타입으로 형변환 할 수 없으며, 오직 함수형 인터페이스로만 형변환이 가능합니다.  </span><br><span class="line">- 람다식 내에서 참조하는 지역변수는 final이 붙어 있지 않아도 상수로 간주되며, 외부 지역변수와 같은 이름의 매개변수를 허용하지 않습니다.  </span><br><span class="line">- 함수형 인터페이스는 @FuntionalInterface 라는 어노테이션을 붙일 수 있습니다. (컴파일러에서 추상메서드를 갖춘 인터페이스인지 검사, javadoc 페이지에서 해당 인터페이스가 함수형 인터페이스임을 알 수 있도록 한다)</span><br></pre></td></tr></table></figure><h2 id="메서드-참조"><a href="#메서드-참조" class="headerlink" title="메서드 참조"></a>메서드 참조</h2><p>저는 위의 함수형 인터페이스는 업무에서 거의 사용하고 있지는 않습니다.<br>오히려 static method를 호출하는 용도로 메서드 참조를 자주 사용합니다. 아직 실업무보다는 개인업무 혹은 배치쪽 작업할때 간혈적으로 사용합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(a, b) -&gt; Math.max(a, b);</span><br><span class="line">Math::max</span><br></pre></td></tr></table></figure><p>메서드를 참조해서 매개변수의 정보 및 리턴 타입을 알아내어 람다식에서 불필요한 매개 변수를 제거하는 것이 목적으로,<br>람다식의 매개 변수는 메서드의 매개값을 전달하는 역할만 하기 때문에 메서드 참조를 이용하면 깔끔하게 처리할 수 있습니다.  </p><h2 id="스트림"><a href="#스트림" class="headerlink" title="스트림"></a>스트림</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String[] strArr = &#123;&quot;aaa&quot;, &quot;ddd&quot;, &quot;ccc&quot;&#125;;</span><br><span class="line">List&lt;String&gt; strList = Arrys.asList(strArr);</span><br><span class="line">Stream&lt;String&gt; strStreamArr = Arrays.stream(strArr);</span><br></pre></td></tr></table></figure><p>스트링배열을 List배열로 바꿔주는 방법입니다.<br>보통 굳이 저렇게 객체를 두개나 만들 필요없이,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;String&gt; strStreamArr = Stream.of(&quot;aaa&quot;, &quot;ddd&quot;, &quot;ccc&quot;);</span><br></pre></td></tr></table></figure></p><p>Stream.of 로 Stream 처리를 하는게 저는 편합니다.<br>물론 Arrays를 사용하여 java.util.Arrays.ArrayList(java.util.ArrayList 클래스와는 다른 클래스)를 리턴하여 사용할 이유가 있다면 위와같이 처리해야하지만,<br>보통 그냥 sort 하거나 강제적으로 변경되는 로직을 처리할 용도로만 사용하기 위해서 사용하는 부분이라 그렇게까지 처리할 이유가 없습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[] sortList = &#123; &quot;01&quot;, &quot;02&quot;, &quot;03&quot;, &quot;04&quot;, &quot;05&quot; &#125;;</span><br><span class="line">Stream.of(sortList).map(CodeUtils::getAdVrtsTpCode);</span><br></pre></td></tr></table></figure><p>CodeUtils 의 static 메소드를 통해, 내가 원하는 코드값으로 변경하는 로직입니다.<br>예전에는 for문으로 돌리면서 일일이 mapping 처리를 해야했지만, 정말 편하게 변경이 가능합니다.<br>성능이라든가, 효율적인 부분에 있어, 많은 부분을 람다로 바꿔 개발하진 않겠지만, Stream 은 간혹 사용할 거 같아 약간 정리해봅니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><p><a href="https://rebeccacho.gitbooks.io/java-study-group/content/chapter14.html" rel="external nofollow noopener noreferrer" target="_blank">Chapter 14 람다와 스트림</a></p></li><li><p><a href="https://okky.kr/article/329818" rel="external nofollow noopener noreferrer" target="_blank">자바 8 Stream API 과 주의사항</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nohup이란</title>
      <link href="/2018/10/2018-10-12-noup/"/>
      <url>/2018/10/2018-10-12-noup/</url>
      
        <content type="html"><![CDATA[<p>가끔 crontab 에 등록된 shell script 가 동작을 하지 않고 에러가 났을 경우,<br>서버내에서 다시 실행해야할때, nohup 을 씁니다.</p><p>nohup이란 리눅스, 유닉스에서 쉘스크립트파일을 데몬형태로 실행시키는 프로그램으로, 터미널 세션이 끊겨도 실행을 멈추지 않고 동작하도록 합니다.<br>shell script 를 실행하고 터미널을 종료하면 프로세스 또한 종료되므로,<br>터미널 세션을 끊겨도 사용해야할 경우에 사용합니다.</p><p>보통 명령어는 이렇습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nohup shell.sh &amp;</span><br><span class="line">$ nohup sh -- ./shell.sh &amp;</span><br></pre></td></tr></table></figure><p>실제 full 경로를 입력하거나 해당 경로에 가서, ./shell 을 실행합니다.<br>종료하는 방법은 강제로 프로세스를 kill 하는 방법밖에 없습니다. (kill -9 PID)</p><p>참고로 위와 같이 nohup과 &amp;을 같이 쓰는 형태로 암기하고 있었는데,<br>&amp;는 프로세스를 실행할 때 백그라운드에서 동작하도록 만드는 명령어로 비슷하지만 다른 명령어입니다.</p><p>nohup 으로 실행하면 hang-up signal 이 와도 동작하기 때문에 터미널 연결이 끊어져도 실행을 멈추지 않습니다.<br>&amp; 으로만 실행해도 터미널이 끊어져도 실행이 멈추지는 않는 데,<br>&amp; 은 백그라운드로 돌린다는 의미이며, 기본적으로는 nohup 이 아닐 경우 터미널이 끊어지면 실행도 끊어집니다.<br>하지만 요즘 옵션에 nohup 과 같은 동작을 하게 설정이 되어 있어서 &amp; 만으로도 nohup 과 같은 동작을 보인다고 합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nohup shell.sh &gt; /dev/null</span><br></pre></td></tr></table></figure><p>그래서 위와같이 &amp; 대신에 &gt; /dev/null 을 더 자주 쓰게 됩니다.<br>/dev/null 은 주로 불필요한 출력 스트림을 버리는 곳으로 사용됩니다.<br>/dev/null 을 사용하지 않을 경우, nohup.out 이라는 파일이 호출한 위치에 파일을 생성시키는데,<br>해당 파일을 생성하지 않게 합니다.</p><h2 id="행의-극복"><a href="#행의-극복" class="headerlink" title="행의 극복"></a>행의 극복</h2><p>nohup으로 백그라운드 처리된 작업들은 원격 SSH 세션을 로그오프할 때 일반적으로 이들의 종료를 막기 위해 사용되며, 이 상황에서 발생할 수 있는 또 다른 문제는 ssh가 로그오프(행)을 거부하는 것인데, 그 이유는 백그라운드 작업들에 대한 데이터 손실을 거부하기 때문이다. 이 문제는 3개의 모든 입출력 스트림을 리다이렉션 처리함으로써 극복할 수 있다고 합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nohup ./myprogram &gt; foo.out 2&gt; foo.err &lt; /dev/null &amp;</span><br></pre></td></tr></table></figure><p>SSH 세션을 닫으면 무조건 의존 프로세스들에 HUP 신호를 보내지 않게 된다. 이는 의사 터미널의 할당 여부에 따라 달라진다고 하는데,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">program &lt; /dev/null program</span><br></pre></td></tr></table></figure><p>형태일 때,<br>file descriptor 0 즉 STDIN을 통해 입력인수(옵션에 입력 매개 변수가 있거나 입력 파일이 될 수 있음)를 취하는 것을 의미하는데,<br>/dev/null은 아무것도 포함되어 있지 않으므로, 읽을 때 EOF (End of File)에 알릴 것이므로 /dev/null에서 입력을받는 프로그램은 기본적으로 아무 것도 입력 인수로 리디렉션하지 않습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias start=&apos;nohup java -jar healthcheck.jar /tmp 2&gt;&gt; /dev/null &gt;&gt; /dev/null &amp;&apos;</span><br></pre></td></tr></table></figure><p>/tmp 란 폴더를 두어서 별도의 로그관리를 하겠다는 의미이나 에러로그를 /dev/null 에 받게 하기 때문에,<br>결국 /tmp 폴더에는 별다른 로그가 쌓이지 않게 됩니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias start=&apos;nohup java -jar healthcheck.jar &gt;&gt; /dev/null &amp;&apos;</span><br></pre></td></tr></table></figure><p>만약 이렇게 한다면 jar 파일 자체의 모든 out 스트림을 /dev/null 에 보내기 때문에 , 아예 동작을 하지 않거나 한번만 동작하고 더이상 실행이 안될 수 있습니다.<br>(nohup을 했기 때문에 프로세스는 계속 떠있습니다. ㅠㅜ)</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><p><a href="https://zetawiki.com/wiki//dev/null" rel="external nofollow noopener noreferrer" target="_blank">/dev/null</a></p></li><li><p><a href="https://ko.wikipedia.org/wiki/Nohup" rel="external nofollow noopener noreferrer" target="_blank">행의극복</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Scouter APM 개발환경 구성하기</title>
      <link href="/2018/10/2018-10-08-Scouter_APM/"/>
      <url>/2018/10/2018-10-08-Scouter_APM/</url>
      
        <content type="html"><![CDATA[<p>2018년 10월 2일 기준,</p><p><a href="https://github.com/scouter-project/scouter/issues/499" rel="external nofollow noopener noreferrer" target="_blank">이슈사항</a>에 대해서 처리해보고 싶어서,<br>eclipse-jee-photon-R-win32-x86_64 이클립스 사용하여,</p><p>git으로,<br><a href="https://github.com/youngclown/scouter.git" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/youngclown/scouter.git</a> 에서 import 로 받아 처리했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">추출된 쿼리의 &quot;/&quot; (나누기 연산자 표현 누락현상)</span><br></pre></td></tr></table></figure><p>현상으로,</p><p><a href="https://youngclown.github.io/scouterLogParsers/">스카우터 쿼리 파서</a>를 만들어서 쓰다가,<br>해당 이슈로 인해,<br>강제로 “/“를 밀어넣는 로직을 구현할 수 밖에 없었습니다. (회사전용으로 특정 패턴시에 “/“를 강제로 삽입.)</p><p>간단하게 소스만봤을때 별도의 HttpEncoding을 하거나 특수문자를 삽입하는 부분이 없어, 그냥 넘기다가,<br>한번 기여해보고 싶어 제대로 된 분석을 하기 위해 셋팅을 하면서 기록을 남깁니다.</p><ol><li>Scouter Github 저장소에서 내 저장소로 Fork 한다.</li><li>fork 된 projects 를 내려받는다.</li><li>lombok 을 설치한다.</li><li>scala flugin 을 설치한다. Scala IDE (<a href="http://download.scala-ide.org/sdk/lithium/e44/scala211/stable/site" rel="external nofollow noopener noreferrer" target="_blank">http://download.scala-ide.org/sdk/lithium/e44/scala211/stable/site</a>)</li><li>build path를 확인하고, 만약 source 디렉토리에 /src/main/scala 가 포함되지 않았다면, 이를 포함시킨다.</li><li>scouter.server 프로젝트에 scala nature가 포함되지 않았다면, 이를 프로젝트에 포함시킨다. (configure &gt; scala nature)</li></ol><p>여기까지 처리해서 소스를 봤더니, 해당 이슈는 클라이언트쪽에서 제대로 파싱을 하지 못하는 이슈로 보여서, 분석을 해보려고했는데,<br>이미 3일 전에 해결했네요.</p><p>우선 분석하고 다음에 기여할 수 있도록 해야겠습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nslookup 으로 cname 알기</title>
      <link href="/2018/09/2018-09-18-nslookup/"/>
      <url>/2018/09/2018-09-18-nslookup/</url>
      
        <content type="html"><![CDATA[<p>SE 하는 분이랑 CNAME 설정했는데,<br>해당 서버에서 동작이 안되는 이슈 때문에 정확한 CNAME 을 찾기 위해,<br>확인하다가…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup</span><br></pre></td></tr></table></figure><p>nslookup 으로,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\bymin&gt;nslookup naver.com</span><br><span class="line">서버:    kns.kornet.net</span><br><span class="line">Address:  168.126.63.1</span><br><span class="line"></span><br><span class="line">권한 없는 응답:</span><br><span class="line">이름:    naver.com</span><br><span class="line">Addresses:  210.89.160.88</span><br><span class="line">          125.209.222.142</span><br><span class="line">          125.209.222.141</span><br><span class="line">          210.89.164.90</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Users\bymin&gt;</span><br></pre></td></tr></table></figure><p>해당 서버의 어드레스를 알 수 있는 것을 알고 있었는데,<br>cname 까지 알 수 있는 것을 이번에 알게 되어 기록을 남깁니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\bymin&gt;nslookup</span><br><span class="line">기본 서버:  kns.kornet.net</span><br><span class="line">Address:  168.126.63.1</span><br><span class="line"></span><br><span class="line">&gt; set type=cname</span><br><span class="line">&gt; img.en-mobon.com</span><br><span class="line">서버:    kns.kornet.net</span><br><span class="line">Address:  168.126.63.1</span><br><span class="line"></span><br><span class="line">권한 없는 응답:</span><br><span class="line">img.en-mobon.com        canonical name = img.en-mobon.com.cdnga.net</span><br><span class="line"></span><br><span class="line">en-mobon.com    nameserver = ns3.gethompy.com</span><br><span class="line">en-mobon.com    nameserver = ns1.gethompy.com</span><br><span class="line">en-mobon.com    nameserver = ns2.gethompy.com</span><br><span class="line">en-mobon.com    nameserver = ns.gethompy.com</span><br><span class="line">ns.gethompy.com internet address = 218.145.65.143</span><br><span class="line">ns1.gethompy.com        internet address = 116.126.143.226</span><br><span class="line">ns2.gethompy.com        internet address = 218.145.65.144</span><br><span class="line">&gt; megaimg.en-mobon.com</span><br><span class="line">서버:    kns.kornet.net</span><br><span class="line">Address:  168.126.63.1</span><br><span class="line"></span><br><span class="line">권한 없는 응답:</span><br><span class="line">megaimg.en-mobon.com    canonical name = megaimg.en-mobon.com.cdnga.net</span><br><span class="line"></span><br><span class="line">en-mobon.com    nameserver = ns.gethompy.com</span><br><span class="line">en-mobon.com    nameserver = ns2.gethompy.com</span><br><span class="line">en-mobon.com    nameserver = ns1.gethompy.com</span><br><span class="line">en-mobon.com    nameserver = ns3.gethompy.com</span><br><span class="line">ns.gethompy.com internet address = 218.145.65.143</span><br><span class="line">ns1.gethompy.com        internet address = 116.126.143.226</span><br><span class="line">ns2.gethompy.com        internet address = 218.145.65.144</span><br><span class="line">ns3.gethompy.com        internet address = 116.126.143.225</span><br></pre></td></tr></table></figure><p>nslookup 으로 들어간 후<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set type=cname</span><br></pre></td></tr></table></figure></p><p>을 사용하여 cname을 입력한 후, 확인하고 싶은 dns이름을 검색하면되네요.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>시리얼통신으로 자바와 아두이노 연동하기</title>
      <link href="/2018/09/2018-09-18-aduino_serial/"/>
      <url>/2018/09/2018-09-18-aduino_serial/</url>
      
        <content type="html"><![CDATA[<p>개인적인 취미로 숫자 키보드를 만들고 싶은데,<br>가지고 있는 아두이노는 UNO R3 와 UNO CH430 이 두기종.  </p><p>아두이노 키보드를 만들기위한 미니 아두이노도 구매했는데 분실해버리는 바람에,<br>현재 2개의 기종으로 숫자 키보드를 만들려고 합니다.  </p><p><a href="http://mitchtech.net/arduino-usb-hid-keyboard/" rel="external nofollow noopener noreferrer" target="_blank">참고주소</a><br>위의 참고주소를 가면, 친절하게 배선도와, 아두이노 소스코딩을 제공해줍니다.  </p><p>다만 문제는 제가 가지고 있는 기종이 키보드와 같은 하드웨어 인식이 안되는 R3와 CH430 인게 문제였네요.  </p><p>방법은,<br><a href="https://www.slideshare.net/dkserver/presentation1-40234926" rel="external nofollow noopener noreferrer" target="_blank">참고주소1</a><br><a href="https://splatspace.org/2015/04/using-an-arduino-as-an-hid/" rel="external nofollow noopener noreferrer" target="_blank">참고주소2</a><br>DFU (Device Firmware Update)을 처리해야합니다.  </p><p>CH430은 모르겠지만 R3는 저렇게 해서 가능하다고 하여<br>jumper 로 앞단자를 가리고,<br>순정 아두이노 펌웨어와, 아두이노 키보드 펌웨어 이렇게 2개를 처리해야한다고 하네요.  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Arduino-keyboard-0.3.hex  </span><br><span class="line">Arduino-usbserial-uno.hex</span><br></pre></td></tr></table></figure><p>펌웨어하는 방법도, 쉽지 않은데, 벽돌이 되면….<br>게다가 Arduino-keyboard-0.3.hex 적용하면,<br>아두이노 코딩 업로드가 안된다는 글까지 보게 되었습니다.  </p><p>그래서, 꼭 내가 하드웨어로 키보드 인식을 해서 쓸 것인지에 대한 고찰과 함께,<br>결론이 그냥 나는 텐키리스 키보드를 사면,  </p><p>숫자키가 허전해서, 3D 프린터로 숫자 키보드를 하나 만들고 싶고,<br>이미 가지고 있는 우노들을 이용하고 싶은 것뿐이더군요.  </p><p>그래서 인숙한 자바 Serial 통신방법을 찾게 되었습니다.<br><a href="https://kocoafab.cc/tutorial/view/596" rel="external nofollow noopener noreferrer" target="_blank">참고주소</a>  </p><p>참고 주소에서는<br>TxRx라이브러리를 받고난 뒤 압축을 풀고<br>RXTXcomm.jar는 %JAVAHOME%lib에 넣어주시고<br>rxtxSerial.dll는 %JAVAHOME%bin에 넣으라고 가이드를 주었는데,</p><p>저는 귀찮아서 java는 바로 프로젝트에서 import 받아서 처리했고,<br>rxtxSerial.dll 파일을 windows에 system32 폴더에 넣었습니다.</p><p>아두이노는 핀을 총 5개 사용했고 (연습삼아서… 나중에 매트릭스 구조로 다시 짜야함..)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;Boards.h&gt;</span><br><span class="line">#include &lt;FirmataConstants.h&gt;</span><br><span class="line">#include &lt;FirmataDefines.h&gt;</span><br><span class="line">#include &lt;FirmataMarshaller.h&gt;</span><br><span class="line">#include &lt;FirmataParser.h&gt;</span><br><span class="line"></span><br><span class="line">#define PIN_NUM3 3</span><br><span class="line">#define PIN_NUM4 4</span><br><span class="line">#define PIN_NUM5 5</span><br><span class="line">#define PIN_NUM6 6</span><br><span class="line">#define PIN_NUM7 7</span><br><span class="line"></span><br><span class="line">int state = 1;</span><br><span class="line"></span><br><span class="line">void setup()</span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(9600);</span><br><span class="line">  pinMode(PIN_NUM3, INPUT);</span><br><span class="line">  pinMode(PIN_NUM4, INPUT);</span><br><span class="line">  pinMode(PIN_NUM5, INPUT);</span><br><span class="line">  pinMode(PIN_NUM6, INPUT);</span><br><span class="line">  pinMode(PIN_NUM7, INPUT);</span><br><span class="line"></span><br><span class="line">  Serial.write(INPUT); // Send keypress</span><br><span class="line">  // enable internal pull-ups</span><br><span class="line">  digitalWrite(PIN_NUM3, 1);</span><br><span class="line">  digitalWrite(PIN_NUM4, 1);</span><br><span class="line">  digitalWrite(PIN_NUM5, 1);</span><br><span class="line">  digitalWrite(PIN_NUM6, 1);</span><br><span class="line">  digitalWrite(PIN_NUM7, 1);</span><br><span class="line"></span><br><span class="line">  delay(200);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop()</span><br><span class="line">&#123;</span><br><span class="line">  state = digitalRead(PIN_NUM3);</span><br><span class="line">  if (state != 1) &#123;</span><br><span class="line">    Serial.write(&apos;a&apos;); // Send keypress</span><br><span class="line">    delay(200);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  state = digitalRead(PIN_NUM4);</span><br><span class="line">  if (state != 1) &#123;</span><br><span class="line">    Serial.write(&apos;b&apos;); // Send keypress</span><br><span class="line">    delay(200);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  state = digitalRead(PIN_NUM5);</span><br><span class="line">  if (state != 1) &#123;</span><br><span class="line">    Serial.write(&apos;c&apos;); // Send keypress</span><br><span class="line">    delay(200);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  state = digitalRead(PIN_NUM6);</span><br><span class="line">  if (state != 1) &#123;</span><br><span class="line">    Serial.write(&apos;d&apos;); // Send keypress</span><br><span class="line">    delay(200);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  state = digitalRead(PIN_NUM7);</span><br><span class="line">  if (state != 1) &#123;</span><br><span class="line">    Serial.write(&apos;e&apos;); // Send keypress</span><br><span class="line">    delay(200);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>해당 값을 받아 처리하는 자바 클래스도 간단하게 구현하였습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">package aduino;</span><br><span class="line"></span><br><span class="line">import gnu.io.CommPort;</span><br><span class="line">import gnu.io.CommPortIdentifier;</span><br><span class="line">import gnu.io.SerialPort;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.OutputStream;</span><br><span class="line"></span><br><span class="line">public class Serial</span><br><span class="line">&#123;</span><br><span class="line">    public Serial()</span><br><span class="line">    &#123;</span><br><span class="line">        super();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void connect ( String portName ) throws Exception</span><br><span class="line">    &#123;</span><br><span class="line">        CommPortIdentifier portIdentifier = CommPortIdentifier.getPortIdentifier(portName);</span><br><span class="line">        if ( portIdentifier.isCurrentlyOwned() )</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(&quot;Error: Port is currently in use&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            //클래스 이름을 식별자로 사용하여 포트 오픈</span><br><span class="line">            CommPort commPort = portIdentifier.open(this.getClass().getName(),2000);</span><br><span class="line"></span><br><span class="line">            if ( commPort instanceof SerialPort )</span><br><span class="line">            &#123;</span><br><span class="line">                //포트 설정(통신속도 설정. 기본 9600으로 사용)</span><br><span class="line">                SerialPort serialPort = (SerialPort) commPort;</span><br><span class="line">                serialPort.setSerialPortParams(9600,SerialPort.DATABITS_8,SerialPort.STOPBITS_1,SerialPort.PARITY_NONE);</span><br><span class="line"></span><br><span class="line">                //Input,OutputStream 버퍼 생성 후 오픈</span><br><span class="line">                InputStream in = serialPort.getInputStream();</span><br><span class="line">                OutputStream out = serialPort.getOutputStream();</span><br><span class="line"></span><br><span class="line">                 //읽기, 쓰기 쓰레드 작동</span><br><span class="line">                (new Thread(new SerialReader(in))).start();</span><br><span class="line">                (new Thread(new SerialWriter(out))).start();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(&quot;Error: Only serial ports are handled by this example.&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /** */</span><br><span class="line">    //데이터 수신</span><br><span class="line">    public static class SerialReader implements Runnable</span><br><span class="line">    &#123;</span><br><span class="line">        InputStream in;</span><br><span class="line"></span><br><span class="line">        public SerialReader ( InputStream in )</span><br><span class="line">        &#123;</span><br><span class="line">            this.in = in;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void run ()</span><br><span class="line">        &#123;</span><br><span class="line">            byte[] buffer = new byte[1024];</span><br><span class="line">            int len = -1;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                while ( ( len = this.in.read(buffer)) &gt; -1 )</span><br><span class="line">                &#123;</span><br><span class="line">                String temp = new String(buffer,0,len);</span><br><span class="line">                    if (&quot;a&quot;.equals(temp)) &#123;</span><br><span class="line">                    Process oProcess = new ProcessBuilder(&quot;notepad.exe&quot;).start();</span><br><span class="line">                    &#125; else if (&quot;b&quot;.equals(temp)) &#123;</span><br><span class="line">                    Process oProcess = new ProcessBuilder(&quot;calc.exe&quot;).start();</span><br><span class="line">                    &#125; else if (&quot;c&quot;.equals(temp)) &#123;</span><br><span class="line">                    Process oProcess = new ProcessBuilder(&quot;control&quot;).start();</span><br><span class="line">                    &#125; else if (&quot;d&quot;.equals(temp)) &#123;</span><br><span class="line">                    Process oProcess = new ProcessBuilder(&quot;D:\\workset\\eclipse-jee-photon-R-win32-x86_64\\eclipse\\eclipse.exe&quot;).start();</span><br><span class="line">                    &#125; else if (&quot;e&quot;.equals(temp)) &#123;</span><br><span class="line">                    Process oProcess = new ProcessBuilder(&quot;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2018.2.3\\bin\\idea64.exe&quot;).start();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch ( IOException e )</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /** */</span><br><span class="line">    //데이터 송신</span><br><span class="line">    public static class SerialWriter implements Runnable</span><br><span class="line">    &#123;</span><br><span class="line">        OutputStream out;</span><br><span class="line"></span><br><span class="line">        public SerialWriter ( OutputStream out )</span><br><span class="line">        &#123;</span><br><span class="line">            this.out = out;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void run ()</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                int c = 0;</span><br><span class="line">                while ( ( c = System.in.read()) &gt; -1 )</span><br><span class="line">                &#123;</span><br><span class="line">                    this.out.write(c);</span><br><span class="line">                &#125;                </span><br><span class="line">            &#125;</span><br><span class="line">            catch ( IOException e )</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main ( String[] args )</span><br><span class="line">    &#123;</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            (new Serial()).connect(&quot;COM4&quot;); //입력한 포트로 연결</span><br><span class="line">        &#125;</span><br><span class="line">        catch ( Exception e )</span><br><span class="line">        &#123;</span><br><span class="line">            // TODO Auto-generated catch block</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>변경되는 port 에 대한 변경값 입력하는 방법을 args로 받아 처리하면서,<br>별도의 jar로 실행하는 방법만 고민하면,<br>텐키리스 사용하면서 숫자 키보드를 만들 수 있을 거 같습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>removeFirstPrenpend</title>
      <link href="/2018/09/2018-08-20-removeFirstPrenpend/"/>
      <url>/2018/09/2018-08-20-removeFirstPrenpend/</url>
      
        <content type="html"><![CDATA[<h2 id="요소-속성"><a href="#요소-속성" class="headerlink" title=" 요소 속성"></a><dynamic> 요소 속성</dynamic></h2><p>dynamic 태크는 다른 동적 sql요소를 포장하고 결과적인 내용물을 위해 prepend, open, close를 수행하기 위해 제공되는 간단한 태그입니다.</p><p>prepend<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">속성값을 요소 내용의 가장 앞에 붙이기 위해 사용한다. prepend의 값은 요소 내용이 공백일 때는 앞에 붙이지 않는 다.</span><br></pre></td></tr></table></figure></p><p>open<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">open 값은 요소 내용에 접두사로 붙이기 위해 사용한다. open 값은 요소 내용이 공백일 때는 출력되지 않는다. open 값은 prepend 속성 값보다는 뒤에 붙는다.</span><br><span class="line">예를 들면 prepend=&quot;WHEN&quot; 이고 open=&quot;(&quot; 라면 조합된 결과는 &quot;WHEN (&quot; 가 될 것이다.</span><br></pre></td></tr></table></figure></p><p>close<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">close 값은 요소 내용의 뒤에 덧붙이기 위해 사용한다. 이 값은 요소 내용이 공백이라면 출력되지 않는다.</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;statement id=&quot;dynamicGetAccountList&quot; resultMap=&quot;account-result&quot;&gt;</span><br><span class="line">  select * from account</span><br><span class="line">  &lt;dynamic prepend=&quot;WHERE&quot;&gt;</span><br><span class="line">    &lt;isNotNull prepend=&quot;AND&quot; property=&quot;firstName&quot;&gt;</span><br><span class="line">       acc_first_name = #firstName#</span><br><span class="line">    &lt;isNotNull prepend=&quot;OR&quot; property=&quot;lastName&quot;&gt;</span><br><span class="line">       acc_last_name = #lastName#</span><br><span class="line">    &lt;/isNotNull&gt;</span><br><span class="line">    &lt;/dynamic&gt;</span><br><span class="line">order by acc_last_name</span><br><span class="line">&lt;/statement&gt;</span><br></pre></td></tr></table></figure><p>위와같은 dynamic 쿼리를 사용할 경우, firstName 와 lastName. 이 두가지 값이 있다면,<br>당연하게도 where 다음에는 and가 바로 붙을 경우,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from account where and acc_first_name = #firstName# or acc_last_name = #lastName#</span><br></pre></td></tr></table></figure><p>이런 이상한 구문이 완성될 것이라고 생각했습니다.<br>분명 prepend 로 인해 구문 오류가 발생할 것이라고 생각한 것입니다.  </p><p>하지만,</p><p>이 태그를 사용할 때 removeFirstPrepend속성이 강제로  적용된다고 합니다.<br>즉 맨 처음 나오는 prepend속성놈은 강제로 생략된다는 이야기로,<br>dynamic 태그안에 removeFirstPrepend = true가 적용은 되지만 생략된 채로 있다고 보면 됩니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><p><a href="http://syaku.tistory.com/51" rel="external nofollow noopener noreferrer" target="_blank">iBATIS 동적 WHERE 절 다루기 위한 요소 설명</a></p></li><li><p><a href="http://narrowway.tistory.com/79" rel="external nofollow noopener noreferrer" target="_blank">iBatis 동적 쿼리문 생성</a></p></li><li><p><a href="http://javafactory.tistory.com/354" rel="external nofollow noopener noreferrer" target="_blank">dynamic 태그, isParameterPresent, removeFirstPrepend 설명</a></p></li><li><p><a href="http://ibatis.apache.org/docs/dotnet/datamapper/ch03s09.html" rel="external nofollow noopener noreferrer" target="_blank">Dynamic SQL</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>자동 배포 SVN HOOKS</title>
      <link href="/2018/09/2018-09-01-svn_export/"/>
      <url>/2018/09/2018-09-01-svn_export/</url>
      
        <content type="html"><![CDATA[<p>개인 Team 프로젝트(?) 진행을 하는데, php 밖에 모른다고 하는 팀원 때문에,<br>php 로 개발 중입니다.</p><p>이 팀원이 요구사항이 많은 사람입니다.<br>첫번째 요구사항은,<br>요구사항을 local host 에서 테스트할 수 없으니 서버에 바로 반영하겠다라고 했습니다.</p><p>당연히 테스트가 안된 소스를 운영에 올릴 수는 없고,<br>현업을 해야하니,<br>서버에 바로 반영할 수 없고 git 설치로 별도의 형상관리를 두어 local test 후에,<br>서버에 반영해주겠다고했으나,</p><p>git은 해본적없고 하고싶지 않으니 svn을 해달라고 합니다.</p><p>두번째 요구사항인 svn 을 설정했더니 실서버에 바로 반영을 못한다면 개발서버를 구축해달라고했습니다.<br>그개발서버의 전제조건이, 커밋을 하면 바로 적용될 수 있는 개발서버입니다.  </p><p>처음에는 젠킨스를 설치하고 뭔가하려고 했는데,<br>simple is best 라고,<br>그냥 hooks 기능을 사용하여 처리하려고 합니다.</p><h2 id="SVN-에서-강제로-특정-경로로-export-하는-명령어입니다"><a href="#SVN-에서-강제로-특정-경로로-export-하는-명령어입니다" class="headerlink" title="SVN 에서 강제로 특정 경로로 export 하는 명령어입니다."></a>SVN 에서 강제로 특정 경로로 export 하는 명령어입니다.</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/svn/hooks</span><br></pre></td></tr></table></figure><p>hooks 폴더의 post-commit 파일을 만들고,<br>해당 파일의 맨앞에 썻던,  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn export --force svn://url /home/svn/gnuboard5/txt</span><br></pre></td></tr></table></figure><p>를 적용합니다.  </p><p>훅(hook) 은 특정 이벤트가 발생하면 동작하는 프로그램을 의미하고, post-commit 은 커밋이 발생했을 때를 의미합니다.<br>훅 은 동작 방식에 따라 크게 2가지로 나눌 수 있습니다.</p><p>첫 번째는 이벤트가 처리되기전에 수행되는 pre-훅 으로,<br>pre-훅 을 이용하면 커밋전에 커밋 메시지가 정책에 맞는지, 파일이 추가될 경우 파일형식이 저장소 관리 규칙에 맞는지 등을 검사하여 규칙에 어긋나면 커밋을 거부하게 동작할 수 있습니다.</p><p>다른 하나는 이벤트가 완전히 끝난후에 수행되는 post 훅 입니다.<br>이것을 이용하면 커밋이 완료되면 프로젝트 팀원들에게 메일을 보내거나,<br>지속적인 통합 서버에 통보하여 커밋된 내용을 업데이트하여 자동으로 빌드를 수행하거나 이슈 관리에서 커밋 내역을 인덱싱하는 등의 작업을 수행할 수 있습니다.  </p><p>java 의 경우에는 별도의 shell 로 빼서, export 후 build 를 하거나 jar 로 묻거나 하는 별도의 컴파일이 필요하지만,<br>jsp 나 php 의 경우는 해당 경로에 바로 올려서 처리가 가능하므로,<br>간단하게 처리해서 제공해주었습니다.  </p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.lesstif.com/pages/viewpage.action?pageId=18220003" rel="external nofollow noopener noreferrer" target="_blank">hook script 로 svn 동작 제어하기</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>url special scheme</title>
      <link href="/2018/08/2018-08-20-url_special_scheme/"/>
      <url>/2018/08/2018-08-20-url_special_scheme/</url>
      
        <content type="html"><![CDATA[<p>http://,ftp://,market://과 같은 문자열을 url scheme이라 부릅니다.</p><p><a href="https://sejoung.github.io/2018/08/url_special_scheme" rel="external nofollow noopener noreferrer" target="_blank">url special scheme</a> 에서 처리된 내용을 첨부합니다.</p><p>위키피디아에 대한 내용입니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//americanbilliardclub.com/about/history/</span><br><span class="line">http://americanbilliardclub.com/about/history/</span><br></pre></td></tr></table></figure></p><p>두개의 링크가 존재했을 때,<br>위키피디아의 화면은 https 입니다.<br>클릭시, americanbilliardclub.com 의 도메인을 가진 홈페이지는 https 를 대응하지 않는 사이트로,<br>강제로 http를 넣으면 잘되지만,<br>// 만 넣고 스키마를 넣지 않은 도메인에서는 위키피디아의 https 를 그대로 사용하기 때문에,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">이 페이지를 표시할 수 없습니다.</span><br></pre></td></tr></table></figure><p>라는 메시지가 뜨게 됩니다.<br>// 만 사용할 경우, Protocol-Relative URL로 현재 쓰고있는 프로토콜을 명시합니다.<br>현재 접속한 페이지는 https 이니 https://와 동일해집니다.<br>만약 접속한 페이지가 http 면 자동으로 http로 변환해줍니다.</p><p>여지까지 개발시, 동적 https 와 http를 판단하기 위해서는,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var url = (&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//xxx&quot;;</span><br></pre></td></tr></table></figure><p>document.location.protocol 을 사용하여 판단하거나 java 단에서는 헤더정보를 이용하여 판단했습니다.<br>광고솔류션의 경우,<br>어떤 매체, 어떤 광고주에 우리 스크립트가 삽입되는지, 개발자가 일일이 신경쓰지 못할 경우,<br>사용자에 따라 http, https 가 다양하게 들어올 경우에 대한 대응 책으로,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;//code.jquery.com/jquery-2.2.3.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>가 우선적으로 처리되고 있지만, 해당 기술은 2010년도에 나온 little trick 입니다.<br>이미 2014년도에 사용하지 않게 지양되고 있는 기술입니다.  </p><p>URL 표준에는 없지만 Uniform Resource Identifier (URI) 표준인 <a href="https://tools.ietf.org/html/rfc3986#section-4.2" rel="external nofollow noopener noreferrer" target="_blank">rfc3986#section-4.2</a>에서 명시하고 있습니다.</p><p>남용하지 말아야한다는 이야기입니다.<br>http 일지 https 일지 모르는 브라우져에서,<br>무언가를 해야한다면,<br>그냥 https 를 사용하는 게 좋다고 결론이 나오는 거 같다는 결론이 나옵니다.  </p><p>다만, 왜 광고솔류션 특징상 본인의 홈페이지에 iframe이나 script나 image가 삽입되는 것이 아니므로,<br>정확하게 보안이슈가 아닌 어찌해서 안되는 지에 대한 부분을 조금 더 찾아봐야할 거 같습니다.<br>좀더 좋지 않았을 까 싶은데, 해당 내용을 찾기가 어렵네요.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://url.spec.whatwg.org/#special-scheme</span><br></pre></td></tr></table></figure><p>어디에도 ‘//‘를 사용해도 좋다라는 글은 없으며, 테스트할 때,<br>크롬에서 about:// 이 스키마로 붙는 경우가 생겨, 해당 문제에 대해 고찰했습니다.</p><p>사용가능한 경우는<br>a, link element, href attribute 정도로 국한해서 처리되었으면 합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;about:blank&quot; width=&quot;300&quot; height=&quot;120&quot; &gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>예를 들어, iframe 의 src는 about:blank 로 되어있으며,<br>해당 iframe 안에서 팝업이 뜬 상태에서 부모창을 제어할 때, about://도메인 으로 호출하는 구조가 되게 되므로,<br>이 경우에는 “//도메인”형태를 사용해서는 안됩니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><p><a href="https://en.wikipedia.org/wiki/Wikipedia:Protocol-relative_URL" rel="external nofollow noopener noreferrer" target="_blank">Wikipedia:Protocol-relative URL</a></p></li><li><p><a href="https://www.jeremywagner.me/blog/stop-using-the-protocol-relative-url/" rel="external nofollow noopener noreferrer" target="_blank">Stop Using the Protocol-relative URL</a></p></li><li><p><a href="https://www.paulirish.com/2010/the-protocol-relative-url/" rel="external nofollow noopener noreferrer" target="_blank">The Protocol-relative URL</a></p></li><li><p><a href="https://en.wikipedia.org/wiki/About_URI_scheme" rel="external nofollow noopener noreferrer" target="_blank">about scheme</a></p></li><li><p><a href="http://w3-org.9356.n7.nabble.com/path-abempty-in-URI-td170118.html" rel="external nofollow noopener noreferrer" target="_blank">Login Register path-abempty in URI</a></p></li><li><p><a href="https://sejoung.github.io/2018/08/url_special_scheme" rel="external nofollow noopener noreferrer" target="_blank">SENSE ARIGATO</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GCP 에 SVN 설치해보자</title>
      <link href="/2018/08/2018-08-27-GCP_SVN/"/>
      <url>/2018/08/2018-08-27-GCP_SVN/</url>
      
        <content type="html"><![CDATA[<h2 id="GCP-설정"><a href="#GCP-설정" class="headerlink" title="GCP 설정"></a>GCP 설정</h2><ul><li>Compute Engine 에서 VM 인스턴스 등록<br>제일 싼게 (us-east1 : 사우스캐롤라이나) 로 초소형(0.6G) 메모리에 10GB 사용시, 4.28 달러만 사용합니다.<br>부팅디스크는  CentOS 7(x86_64 built on 20180815)로 설정했습니다.</li></ul><p>옵션은 HTTP, HTTPS 둘다 트래픽 허용으로 연습합니다.<br>(SVN 으로 연결 후 해당 페이지까지 띄우기 하려고 합니다.)</p><p>등록이 완료되면 바로 처리해야할 것이 3가지 있습니다.</p><ul><li>메타데이터에 ssh_key 등록 (로그인 때문에)</li><li>고정 IP 신청</li><li>root 비밀번호 설정</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VPC 네트워크 &gt; 외부 IP 주소</span><br></pre></td></tr></table></figure><p>고정 IP 는 VPC 네트워크 &gt; 외부 IP 주소가서 아이피를 고정으로 신청해야합니다.<br>이미 고정된 주소가 있고 인스턴스에서 사용하지 않으면 초당 금액이 나간다고 합니다. ㅎㄷㄷ</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Compute Engine &gt; 메타데이터 &gt; SSH</span><br></pre></td></tr></table></figure><p>Compute Engine &gt; 메타데이터 &gt; SSH 키를 등록합니다.<br>SSH 키를 생성하고 등록하는 법은 다 알테니, 해당 부분은 지나갑니다.<br>저는 Xshell 로 했고, 등록한 ssh_key 뒤에 한칸뛰고 접속할 아이디를 bymin 으로 정했습니다.<br>로그인시에는 bymin 으로 접속합니다.</p><p>sudo passwd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd</span><br></pre></td></tr></table></figure></p><p>로그인을 한 후에 root 권한의 비밀번호를 설정합니다.</p><p>ETC<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FTP 접속 설치</span><br><span class="line">yum -y install vsftpd</span><br><span class="line">vi /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install htop : HTOP 이라는 모니터링 툴</span><br><span class="line">yun install java : 자바를 설치하자! (나중에 쓰겠지..)</span><br></pre></td></tr></table></figure><p>이제 SVN 설치!<br>실제로 GIT 을 사용하고 싶었으나, 해당 서버를 형상관리로 쓰고 싶어하는 지인분이 GIT은 모르겠고 SVN 으로 하고 싶다고,<br>그리고 PHP 를 띄우고 싶다고 해서….</p><h2 id="svn-설치-git-쓰고싶다"><a href="#svn-설치-git-쓰고싶다" class="headerlink" title="svn 설치 (git 쓰고싶다)"></a>svn 설치 (git 쓰고싶다)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install subversion</span><br></pre></td></tr></table></figure><p>svn 의 repository 를 설정할 폴더를 변경합니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/svnserve</span><br><span class="line">``` </span><br><span class="line">```aidl</span><br><span class="line"></span><br><span class="line"># OPTIONS is used to pass command-line arguments to svnserve.</span><br><span class="line"># </span><br><span class="line"># Specify the repository location in -r parameter:</span><br><span class="line">OPTIONS=&quot;-r /home/svn&quot;</span><br></pre></td></tr></table></figure></p><p>/home/svn 으로 변경했습니다.</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create --fs-type fsfs repos</span><br></pre></td></tr></table></figure><p>/home/svn 으로 이동하여 repos 라는 폴더를 만듭니다.<br>해당 폴더를 만들면 폴더 안에는,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">drwxrwxrwx. 2 root root  54 Aug 26 08:34 conf</span><br><span class="line">drwxrwsrwx. 6 root root 253 Aug 26 09:14 db</span><br><span class="line">-rwxrwxrwx. 1 root root   2 Aug 26 08:31 format</span><br><span class="line">drwxrwxrwx. 2 root root 231 Aug 26 08:31 hooks</span><br><span class="line">drwxrwxrwx. 2 root root  41 Aug 26 08:31 locks</span><br><span class="line">-rwxrwxrwx. 1 root root 229 Aug 26 08:31 README.txt</span><br></pre></td></tr></table></figure><p>위와같은 파일이 만들어집니다. 권한은 보지 말아주세요. ㅠㅜ<br>권한오류가 발생해서 계속 원인파악하다가 권한을 저렇게 바꾸었습니다;</p><p><a href="https://zetawiki.com/wiki/CentOS_%EC%84%9C%EB%B8%8C%EB%B2%84%EC%A0%84_%EC%84%9C%EB%B2%84_%EC%84%A4%EC%B9%98_%EB%B0%8F_%EC%84%A4%EC%A0%95_(svn" rel="external nofollow noopener noreferrer" target="_blank">svn 제타위키</a>)<br>그 이후의 설정은 svn 제타위키를 보는 것이 더 낫습니다.</p><p>svnserve.conf 수정하여,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[general]</span><br><span class="line">anon-access = none</span><br><span class="line">auth-access = write</span><br><span class="line">password-db = passwd</span><br><span class="line">authz-db = authz</span><br></pre></td></tr></table></figure></p><p>위와같이 등록합니다. 기존 주석된 부분을 빼는 걸로 해결하셔도 되며, 주석을 푸실때,<br>anon-access = read 로 되어있는 부분을 none 으로만 바꿔주시면됩니다.</p><p>passwd와 authz 파일을 사용하도록 했으니 해당 파일도 수정합니다.</p><p>authz 는 모든 권한을 부여하도록,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[/]</span><br><span class="line">*=rw</span><br></pre></td></tr></table></figure></p><p>절대 경로의 rw 를 주었으며, passwd는 아이디=패스워드 형태로 등록하시면됩니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[users]</span><br><span class="line">testuser1 = P@ssw0rd</span><br><span class="line">testuser2 = P@ssw0rd</span><br></pre></td></tr></table></figure></p><p>서비스 시작은 다음과 같습니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service svnserve start</span><br></pre></td></tr></table></figure></p><p>start, stop, restart 등으로 제어하도록 합니다.</p><p>다 작업을 하고 커밋을 하려고 했을때 발생한 오류는 2건이었습니다.<br>첫번째는 방화벽 문제입니다.</p><p>GCP 설정을 하면 방화벽이 자동으로 설정되는데요.<br>svn://ip 로 접속하면 svn의 defaul 포트인 3690 을 열어주셔야합니다.</p><p>VPC 네트워크 &gt; 방화벽 규칙에, 수신에 3690을 추가해줍니다. </p><p>2번째가 Permission Denied 문제였는데요.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R go+w /home/svn/</span><br></pre></td></tr></table></figure></p><p>서버에 모든 하위 권한에 접속권한을 부여해줘봤습니다…. 그래도 안됩니다.<br>구글링을 해보니,<br>/etc/sysconfig/selinux 파일을 여셔서 SELINUX=enforcing를 SELINUX=disable로 바꾸신 뒤 재부팅 하면 된다고 해서,<br>해봤습니다.</p><p>재부팅하니 잘되네요.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">shutdown [옵션] [시간] [메시지]</span><br><span class="line">-t n : 경고 메세지를 보낸 후 n초 후에 kill 시그널을 보낸다.</span><br><span class="line">-h : shutdown시 halt를 실행하게 한다.</span><br><span class="line">-n : 디스크 동기화 동작의 수행을 금지한다.</span><br><span class="line">-r : 시스템을 재부팅한다.</span><br><span class="line">-f : 다음 부팅시 파일시스템 검사를 하지 않는다.</span><br><span class="line">-c : 이미 예약되어 있는 shutdown을 취소한다. 이 옵션을 둔다면 시간인수는 줄 수 없다.</span><br><span class="line">      하지만 메시지는 사용자들에게 줄 수 있다.</span><br><span class="line">-k : 모든 동작을 제대로 수행하지만, 실제로 시스템을 종료하지는 않는다.</span><br><span class="line">시스템 종료시 가장 자주 사용되는 방식 : shutdown -h now</span><br><span class="line">시스템 재부팅시 자장 자주 사용되는 방식 : shutdown -r now</span><br><span class="line">시스템 종료 예약 : shutdown -h 10 (10분 후에 시스템을 종료한다.)</span><br></pre></td></tr></table></figure><p>음, <a href="https://www.lesstif.com/pages/viewpage.action?pageId=6979732" rel="external nofollow noopener noreferrer" target="_blank">SELinux</a> 는 Linux의 보안을 강화해 주는 보안 강화 커널이고 zero-day 공격 및 buffer overflow 등 어플리케이션 취약점으로 인한 해킹을 방지해 주는 핵심 구성요소라고 하네요.<br>특정 서비스가 SELinux 때문에 동작하지 않는다면 SELinux 를 끄기 보다는 해당 서비스가 SELinux 하에서 잘 동작하도록 설정을 수정하는걸 권장한다고 하는데,<br>우선은 SVN 적용을 하려고 한 것이고,<br>여기에 mysql 도 등록하고 외부에서 접속시킬건데, 이 부분에 계속 문제가 생길 것으로 보여,<br>disable 처리했습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>개인 서버 보안 설정</title>
      <link href="/2018/08/2018-08-19-SSHD/"/>
      <url>/2018/08/2018-08-19-SSHD/</url>
      
        <content type="html"><![CDATA[<p>대부분 개인 서버 관리를 하는데,<br>집에 설치하는 사람도 있고, 나처럼 매달 서버비를 내면서 개인서버를 운영하는 사람도 있겠죠.</p><p>국내에 동일 사양이 4만원 대인 반면, 해외에 해당 사양은 1만원 이하인 경우가 많아,<br>해외 서버를 이용합니다.</p><p>가장 먼저 설치하는 것은</p><p>htop 입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install htop</span><br></pre></td></tr></table></figure><p>그냥 서버 상태 모니터링인데, cpu 나 mem을 볼때 자주 이용합니다.<br>해외 서버를 사용하면,<br>참 골치아픈게, 해킹이라고 할지 로그인 시도가 엄청 들어옵니다.</p><p>첫번째 방어하기 위해 fail2ban 을 설치했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/log/secure</span><br></pre></td></tr></table></figure><p>secure 로그를 보면 전혀 이상한 ip(중국, 태국)에서 로그인시도를 계속 합니다.<br>fail2ban 이 하는 역활은,<br>계속 반복해서 접속하는 로그인 실패하는 특정 ip를 바로 차단하는 건데….</p><p>ip가 계속 바뀌면서 로그인을 시도합니다.</p><p>bind 기능을 설치해봤습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bind bind-utils -y</span><br></pre></td></tr></table></figure><p>별 소용이 없습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/secure | grep Accepted | awk &apos;&#123;print $9&quot;\t&quot;$11&quot;\t&quot;$14&#125;&apos; | sort | uniq</span><br></pre></td></tr></table></figure><p>그러다가 문득 제타위키에서 ssh 접속 허용을 만든 방법이 있더군요.</p><p><a href="https://zetawiki.com/wiki/%ED%8A%B9%EC%A0%95_IP%EB%A7%8C_SSH_%EC%A0%91%EC%86%8D_%ED%97%88%EC%9A%A9%ED%95%98%EA%B8%B0" rel="external nofollow noopener noreferrer" target="_blank">참고주소</a></p><p>/etc/hosts.allow 수정하는 방법입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line"># hosts.allowThis file describes the names of the hosts which are</span><br><span class="line">#allowed to use the local INET services, as decided</span><br><span class="line">#by the &apos;/usr/sbin/tcpd&apos; server.</span><br><span class="line">#</span><br><span class="line">sshd: 113.157.124.168, 135.79.246.</span><br></pre></td></tr></table></figure><p>→ 113.157.124.168와 135.79.246.XXX 대역을 허용</p><p>위와 같이 특정 아이피만 허용해서 로그인을 하면, 외부의 유입에 대해 걱정을 안할 수 있게 되었습니다.</p><p>회사에서 접속할때는 회사가 고정ip라 문제가 없지만,<br>집에서 접속할때는 가끔 ip가 바뀌는 경우가 있어, 그 부분에 대한 문제가 있지만,<br>해외 관리 서버들은 대부분 웹(브라우져)에서 접속할 방법이 있어,<br>웹에서 접속해서,</p><p>vi /etc/hosts.allow 로 접근합니다.</p><p>참고로, 해당 방법은 로그인만 차단하는 것으로,<br>db, svn, ftp 등의 다른 포트의 접근을 막는건 아닙니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JAVA9 Module</title>
      <link href="/2018/08/2018-08-05-JAVA08_01/"/>
      <url>/2018/08/2018-08-05-JAVA08_01/</url>
      
        <content type="html"><![CDATA[<p>시작 ====</p><p>자바 언어에서는 이미 전체 프로젝트를 모듈화하는 기본적인 기재들은 갖추고 있다.<br>jar, war 등을 써서 이미 필요한 부분을 떨어뜨릴 수 있고,</p><p>그렇기 때문에 그런것들을 다운받아서, 라이브러리로 받아서 한글처리나,<br>구아바, RXJava 같은 비동기 라이브러리가 되었든, 새로 개발하지 않고 사용 가능하다.</p><p>사실 내가 짜고 있는 프로그램에서도, interface 를 잘 쓰면 모듈화가 가능하다.<br>자바에서는 패키지를 제공하기 때문에 3 dept, 4 dept 처럼 단계를 가지고,<br>자바 언어에서 제공해주는 public, private 등을 이용하여 기본적인 구조화, 모듈화가 가능하다.</p><p>그럼에도 불구하고 왜 이런 모듈이란 새로운 게 나왔는지, 기존것과 무엇이 다른지를 이해해야한다.</p><p>자바 9의 언어의 모듈화는 어떻게 되었을까?</p><ol><li>javadoc 이 달라졌다.<br><a href="https://docs.oracle.com/javase/10/docs/api/index.html?overview-summary.html" rel="external nofollow noopener noreferrer" target="_blank">https://docs.oracle.com/javase/10/docs/api/index.html?overview-summary.html</a></li></ol><p>예전 자바doc을 들어가면 좌측은 패키지와 우측은 해당 패키지의 doc이었는데, 좌측 상단의 모듈들이 생기게 되었다.<br>모듈에서 패키지가 나온다.</p><p>base 모듈을 들어가보면,<br>Exports Package 라는 항목이 나온다.</p><table><thead><tr><th>Package</th><th>Description</th></tr></thead><tbody><tr><td>java.io</td><td>Provides for system input and output through data streams, serialization and the file system.</td></tr><tr><td>java.lang</td><td>Provides classes that are fundamental to the design of the Java programming language.</td></tr></tbody></table><p>provides 와 usec 는 서비스입니다.</p><p>자바 내부가 모듈화가 되었다는 첫번째 의미로 보았을, 여지껏 패키지로 모듈화가 되었다고 한다면,<br>JAVA 7 기준으로 서로가 서로를 참조하는 매우 어려운 구성에서,<br>JAVA 9 에서는 모듈화가 되면서 조금더 간략하게 되었다.</p><p>트리구조는 아래쪽을 띄어내서 모듈화하기 쉽지만,<br>A &gt; B &gt; C &gt; D &gt; A 구조와 같은 순환처리를 하게 되면 트리구조와는 다르게 띄어내기가 힘들다.<br>그래서 JDK 라는 전체 클래스가 5천개가 넘는데, 해당 클래스들의 순환참조를 다 끊어냈다가,<br>2년여간에 걸쳐 Project jigsaw (모듈화된 JDK)라는 이름하에 다 끊어냈다.<br>java.se 를 보더라도 순환처리가 없는 것을 알 수 있다.</p><p>모듈로 패키징하여 서로간의 순환참조를 하지 않도록 구성했다.<br>이것이 가능해지면서 기존에는 불가능한 구조가 가능하게 되었다.</p><p>원래는 2017년 9월에 나왔는데 2016년 초에 나오는게 목표였는데, 2016년부터 자바의 라이브러리를 만드는 최신 트랜드를 고민하는 개발자들은,<br>내가 가진 라이브러리로 고정부와 변동부, 확장과 기본, 아니면 계열분리와 같은 식으로,<br>라이브러리를 재작성하는 사례들이 있었다.</p><p>RxJava 도 그런 형태로 그렇고,<br>JUnit 또한 테스트 프로그램을 만들 때, JUnit5 가 모듈화되어서 나왔다.<br>테스팅을 하는 일반적인 JUnit5, Junit 쥬피터, Junit3나 4에 대한 레거시를 확장가능한 Junit 빈티지 와 같은 3개의 라이브러리를 모듈화하여 나왔었다.<br>(JUnit 5 = JUnit platform + JUnit Jupiter + Junit vinatage)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- foundaton for launching testung frameworks on the JVM</span><br><span class="line">- the combination of the new programming model and extension model for writing test and extenstions Junit 5</span><br><span class="line">- TestEngine for running JUnit 3 and JUnit 4 based tests on the platform</span><br></pre></td></tr></table></figure><p>솔직히 이렇게 하려면 어렵다. 고정부와 변동부를 쪼갠다는 건 매우 어려운 일이다.<br>관리자들이 이게 왜 필요한지를 모른다. 실제로 고정부와 변동부를 잘 쪼갰는지에 대해서는<br>잘 이해하기 어렵다. 그랬을 경우 성능은 떨어지지 않았는지에 대한 고민 또한 필요하다.</p><ol><li><p>자바 언어에서 모듈이란 키워드가 추가되었다.<br>그리고 모듈이란 키워드는 module-info.java에 들어간다.<br>들어가는 것은 export, requires 등이 있다.<br>그리고 사실 usec도 있고 provides도 있 커테인스도 있고 멘데이스도 있 많다.</p></li><li><p>Project Jigsaw라는 프로젝트에 의해 JDK도 모듈이 되었다.<br>가장 자주 쓰이는 것은 java.base, java.xml, java.sql 등이 있다.</p></li><li><p>모듈은 exports 한다.<br>모듈은 내부적으로 숨길수도 있고 외부에 노출 시킬 수 있지만, 기본적으로 exports는 패키지 단위로 한다.<br>이것은 java 9의 설계한 설계자의 선택이었다.</p></li><li><p>public 도 exports 해야만 외부에서 참조 가능하다. (Reflection도 불가능하다.)<br>public 은 어디서나 참고가능했었다.<br>패키지 내부는 default 나 protected 나 그런것으로 보호하지 않는 한,<br>완전히 다 열려있는데 모듈이라는 개념이 와서 public 이라도 모든 걸 가져올 수 없게 되었다.<br>한마디로 public 개념 축소되었다.<br>원하는 기능이 있을 때, 오픈소스의 경 소스를 다 볼 수 있었다.<br>근데 그 기능이 Hide된 API 라고 하더라도, 그럴 경우 그 시그너쳐만 따다가,<br>리플렉션으로 동적 호출을 합니다.<br>아예 그런것들이 JVM 단에서 막힌다.<br>그래서 Reflection도 안되게 강력하게 막을 수 있게 되었다.</p></li></ol><ol start="5"><li><p>동일 패키지는 중복할 수 없음 (Split pakages)<br>순환참조가 없어야하는 제약과 함께,<br>A와 B라는 모듈에서 동일한 패키지명을 가질 수 없는 제약이 생겼다.<br>클래스 이름만 같지 않으면 되었는데, 패키지는 완벽하게 modules의 하위가 되버림.<br>예전에는 전체에서 어떤 패키지를 쓰는지 자유로웠다면,<br>모듈 하위에서 패키지가 들어가므로, 중복되는 이름을 사용할 수 없게 되었다.</p></li><li><p>JVM 시작시 필요한 모든 클래스를 확인 (Module Resolution)<br>JVM 이 실행할때 모든 클래스를 확인합니다.<br>예전에는 컴파일에서는 확인하지 않고 런타임되었을때 에러났을 부분들을 예방하기 위해서 Module Resolution이라는 모든 클래스를 확인하는 절차가 생겼다.</p></li><li><p>Custom JDK 만들 수 있음 (JLink)</p></li></ol><p>정상적으로 지원되는 IDE<br>IntelliJ IDEA (2017.9)<br>이클립스 Photom (2018.6) : 아직도 불안정함.<br>ETC. Netbeans 9.0 RC1 (2018.7) 은 아직도 동작못함.(정식버젼아님.)<br>표준 그레들 방식으로 한다면 아직 IntelliJ 형태로 진행하는게 좋다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>OracleJDK 유료화</title>
      <link href="/2018/08/2018-08-13-openJDK/"/>
      <url>/2018/08/2018-08-13-openJDK/</url>
      
        <content type="html"><![CDATA[<p>Oracle 은 Java SE 에 대해서 유료화 모델을 발표했습니다.<br>상업적 목적으로 이용시 어떻게 해서든 과금을 시키겠다는 정책입니다.  </p><p>주변분들의 평가들이 서로 다른 거 같습니다.  </p><p>무료화 버젼도 있으며, openJDK 를 쓰면 된다, JVM != OracleJDK 가 아니다라고 생각하는 사람과,<br>유료화 모델이 나왔기 때문이 아니라, JAVA 자체의 생산성보다 더 좋은 것들이 많이 나오는 시점에서,<br>유료화 모델은 국내 회사에서의 개발 언어에 대한 선택의 폭을 좁히는 결과가 올 것이라고 생각하는 사람도 있습니다.  </p><p>예전 같았으면, 이 두가지 생각 중 하나를 선택했을 거 같습니다.<br>토비님의 [Oracle Code Seoul 2017] <a href="https://www.youtube.com/watch?v=BFjrmj4p3_Y" rel="external nofollow noopener noreferrer" target="_blank">Java 9과 Spring 5로 바라보는 Java의 변화와 도전</a><br>을 들어보면, 이 위기도 결국 극복해나갈 거라 확신합니다.  </p><p>그럼에도 불구하고 개발자로 살아가기 위해서는, 결과적으로 여러 언어는 많이 알아두면 좋은 거 같습니다.  </p><p>모든 언어가 영원할 거라 믿지 않기 때문입니다.</p><p>예전 javascript 의 MVN 패턴에 대해서 크게 뜨면서, 7년 전 프로젝트에 Ext.js 를 사용했지만,<br>모바일로 잠깐 반짝거리고 지금은 잘사용안하죠.<br>5년전에는 backbone.js 가 떳고 요즘 대세는 Vue.js 입니다. 작년엔 React.js 를 모르면 바보였던거 같습니다.  </p><p>자바로 평생 먹고 살 생각을 했던게 10년전이라면, 요즘은 어떤 언어든 배우면 된다로 바뀐거 같습니다.</p><p>자바를 하기 위해 몽고DB를 알아야하고 OracleDB, Mysql, MariaDB, 카산드라, ehcache 이제는 HBase, 카프카 등등..<br>알야할 게 끊임없는거 같습니다.<br>다만, 예전 backbone.js 와 Vue.js 나 React 를 비교해보면 요즘 나온 언어는 예전에 비해 정말 사용하기 쉬운거 같습니다.  </p><p>코틀린이 뜬다고 해서 코틀린도 해봤습니다.<br>재미있더군요.  </p><p>그냥 지정된 API 나 commands 만 알면 왠만한 것은 해당 라이브러리, 툴, 솔류션들이 알아서 해주니, 점차 개발자들은 단순히 해당 오픈소스를 그냥 쓰면된다라는 마인드로 바뀐게 아닐까요?<br>도메인 주도의 설계의 본질에 조금 더 접근하는 거 같습니다.</p><p>소프트웨어의 본질은 기술이 아니며, 기술력의 너무 촛점을 둬서 본질을 흐려서는 안된다고 봅니다.</p><p>저는 당연히 개발자는 도메인에 대한 개념을 알아야한다고 생각합니다. 모든 개발 시작시 어떤 요구사항인지, 궁극적으로 원하는 것이 무엇인지 파악하는데 중점을 둡니다.  </p><p>자바가 쉽게 사장되진 않겠지만, 계속 무언가 변화하고 있습니다.<br>자바 8 의 람다.<br>자바 9 의 모듈화.<br>자바 10 의 var.</p><p>변화하는 것에 따라가지 못하면서, 근시적인 유료화에 불만을 가지지 않고 나아가야겠습니다.</p><p>참고로, </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version &quot;1.8.0_121&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version &quot;10.0.2&quot; 2018-07-17</span><br><span class="line">Java(TM) SE Runtime Environment 18.3 (build 10.0.2+13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.2+13, mixed mode)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openjdk version &quot;10.0.1&quot; 2018-04-17</span><br><span class="line">OpenJDK Runtime Environment (build 10.0.1+10)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 10.0.1+10, mixed mode)</span><br></pre></td></tr></table></figure><p>openJDK 는 openjdk라고 뜨고, OracleJDK 는 Java(TM)이라고 뜹니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><p><a href="http://dev.zepinos.com/phame/post/view/2/oraclejdk_의_유료화_그래서_java_는_망했다/" rel="external nofollow noopener noreferrer" target="_blank">OracleJDK 의 유료화, 그래서 Java 는 망했다?</a></p></li><li><p><a href="http://dev.zepinos.com/phame/post/view/3/oraclejdk_%EC%9C%A0%EB%A3%8C%ED%99%94_faq/" rel="external nofollow noopener noreferrer" target="_blank">OracleJDK 유료화 FAQ</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>아키텍트의 종류와 역할</title>
      <link href="/2018/08/2018-07-10-Architect/"/>
      <url>/2018/08/2018-07-10-Architect/</url>
      
        <content type="html"><![CDATA[<p>아키텍쳐를 설계 하는 사람은 아키텍트(Architect)라고 합니다.<br>이 아키텍트는 아키텍쳐 설계 프로세스에서 정의한 각 아키텍쳐에 대해서 아키텍쳐를 설계하는 역할들이 정의됩니다.</p><p>계층 구조를 제외하면 아키텍쳐는 5가지로 분리되는데, <a href="http://bcho.tistory.com/667" rel="external nofollow noopener noreferrer" target="_blank">참조</a> Business Architecture, Application Architecture, Solution Architecture, Data Architecture로 분리되며, 아키텍트 역시 이 5개 분야에 걸쳐서 총 5개의 역할로 정의됩니다.</p><h2 id="Application-Architect-AA"><a href="#Application-Architect-AA" class="headerlink" title="Application Architect (AA)"></a>Application Architect (AA)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">프레임워크, 공통설계자</span><br></pre></td></tr></table></figure><p>특정 어플리케이션의 구축에 대한 표준 가이드 및 아키텍쳐 구조를 담당합니다.  </p><p>팀 규모에 따라 대규모 팀인 경우 각 개발팀마다 AA를 배치하고,<br>소규모팀인 경우에는 프로젝트 전체팀에 대해서 애플리케이션 아키텍쳐 설계를 담당하게 됩니다.  </p><p>간혹 SA와 AA를 혼동할 수 있지만, SA는 각각의 독립적인 Application간의 종속성이 발생하는 것에 대한 설계를 하는 것기고 AA는 독립적인 Application의 세부 설계를 담당하게 됩니다.</p><blockquote><p>결론 : 업무단과 내부로직 설계(인터페이스 및 업무처리에 필요한 모듈 설계 및 제작)</p></blockquote><h2 id="Data-Architect-DA"><a href="#Data-Architect-DA" class="headerlink" title="Data Architect (DA)"></a>Data Architect (DA)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">데이터 구조 설계</span><br></pre></td></tr></table></figure><p>프로젝트 전체팀테 대해서 데이타 아키텍쳐 설계를 담당합니다.<br><a href="http://dataprofessional.tistory.com/127" rel="external nofollow noopener noreferrer" target="_blank">[번역글] 데이터 아키텍트(Data Architect)의 삶</a> 을 참고하자면,<br>데이터 아키텍트는 회사의 잠재적인 데이터 소스(내부 및 외부)를 평가한 후 통합하고 중앙 집중화하며, 보호 및 관리하는 계획을 설계하여, 적시에 적절한 장소에서 중요한 정보에 접근할 수 있도록 합니다.</p><ul><li>IT 팀 및 경영진과 협업하여 업계 요구사항을 해결하는 데이터 전략을 수립</li><li>아키텍처를 구현하는 데 필요한 데이터 목록을 구축</li><li>데이터를 획득하기 위한 새로운 기회를 연구</li><li>현행 데이터 관리 기술을 식별하고 평가</li><li>데이터가 조직에서 어떻게 흐르는지에 대한 가변적인 양단간 비전을 창조</li><li>데이터베이스 구조에 대한 데이터 모델을 개발</li><li>데이터베이스 아키텍처 및 응용 프로그램(예: 대규모 관계형 데이터베이스)을 설계하고 문서화하며 구성하고 배포</li><li>기술적 기능(예: 확장성, 보안, 성능, 데이터 복구, 안정성 등)을 통합</li><li>데이터 정확성 및 접근 가능성 보장을 위한 조치를 구현</li><li>데이터 관리 시스템의 성능을 지속적으로 모니터링, 조정 및 보고</li><li>기존의 웨어하우스 구조에 새로운 시스템을 혼합시킴</li><li>데이터베이스 개발 표준을 작성하고 시행</li><li>모든 데이터 아키텍처 산출물 및 절차에 대한 공동 저장소를 관리</li></ul><blockquote><p>결론: 전체 데이터에 대한 구조적 설계를 담당.</p></blockquote><h2 id="Global-Architect-GA"><a href="#Global-Architect-GA" class="headerlink" title="Global Architect (GA)"></a>Global Architect (GA)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">아키텍쳐 설계</span><br></pre></td></tr></table></figure><p>일반적인 프로젝트 팀 구조에서는 잘 존재하지 않는 역할입니다.<br>EA의 경우 사내에서 진행중인 모든 프로젝트에 대해서 관여하며, 비지니스 전략 측면에서 접근을 하다보니 경영진과의 커뮤니케이션이나 의사 결정 과정에 참여가 많아지기 때문에 실제 아키텍쳐 설계 과정에 디테일하게 참여하기가 어렵고, 때로는 기술의 이해수준이 아주 디테일 하지 않은 경우가 많습니다.<br>그럴때, GA라는 역할을 둬서 SA,TA,DA,AA에 대한 통제 권한 부여하고 기술 중심의 System Architecture의 설계 하도록 합니다.<br>프로젝트 팀의 PM/PL의 관계를 EA/GA 관계로 보면 됩니다.<br>EA는 비지니스를 포함한 외부 대응이나 큰 그림에 신경 쓰고, GA는 기술 위주의 아키텍쳐 설계에 집중합니다.</p><blockquote><p>결론 : SA,TA,DA,AA에 대한 통제</p></blockquote><h2 id="Technical-Architect-TA"><a href="#Technical-Architect-TA" class="headerlink" title="Technical Architect (TA)"></a>Technical Architect (TA)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Infra Architect</span><br></pre></td></tr></table></figure><p>업무시스템을 운영할 환경을 구성하는 하드웨어, 소프트웨어, 네트워크를 정의합니다.<br>EA 또는 SA가 3-Tier 모델을 정의하면,<br>각각의 Tier 사이에 물리적인 네트워크의 구조를 TA가 담당하게 되는 거 같습니다.</p><p>프로젝트중 발생할만한 기술적 이슈(Business, Database Data 제외)에 대한 Support하는게 주된 업무로 보입니다.</p><blockquote><p>결론 : 프로젝트 전체팀에 대한 하드웨어 및 네트워크 아키텍쳐를 설계</p></blockquote><h2 id="Solution-Architect-SA"><a href="#Solution-Architect-SA" class="headerlink" title="Solution Architect (SA)"></a>Solution Architect (SA)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">특정 솔루션 아키텍쳐 설계</span><br></pre></td></tr></table></figure><p>SA는 특정 솔루션에 대한 Architecture를 설계계합니다.<br>SA가 하는 업무가 EA와 겹치는 부분이 있을 수도 있지만, EA가 전체 구조에 대한 설계라면 SA는 특정 분야에 대한 세부설계를 담당한다고 할 수 있으며, 그렇기 때문에 EA보다는 특정 영역에 대해서 전문적인 지식이 필요합니다.</p><blockquote><p>결론 : SA의 경우 프로젝트 내에 개발팀이 있을때, 해당 솔루션을 사용하는 모든 팀에 대한 아키텍쳐 설계를 담당</p></blockquote><p>그리고 그 외에는,</p><h2 id="Enterprise-Architect-EA"><a href="#Enterprise-Architect-EA" class="headerlink" title="Enterprise Architect (EA)"></a>Enterprise Architect (EA)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Business Architecture를 포함한 전체 아키텍쳐 설계에 대한 책임을 집니다.<br>비지니스 이해를 바탕으로 전체 아키텍쳐에 대한 큰 설계를 담당하며, 비지니스에 대한 이해를 바탕으로 장기적인 IT 전략 수립을 담당합니다.</p><p>EA의 특징중의 하나는, EA의 경우 단일 프로젝트 뿐만 아니라, 해당 회사의 앞으로의 비지니스 전략에 맞춰서 향후 모든 프로젝트에 대한 아키텍쳐에 대한 책임을 지며,<br>SA,AA,TA,DA에 대한 통제 권한을 가지고 아키텍트 팀을 운용합니다.<br>가끔 CIO(최고 정보 책임자)와 혼동하는 경우가 있는데, CIO는 회사 내부의 IT 전략을 수립하고, IT 포트폴리오를 정의하고 수행한다는 관점에서 EA와 유사한 면이 있으나, 기술적인 면에서는 CIO와 EA의 부분이 겹칠 수 있으나 경영적인 측면에서는 다르다고 합니다.<br>CIO는 결정적으로 예산 집행권과 인사권을 가지고 있으며 설계 보다는 경영과 관리에 목적을 두는 반면, EA는 아키텍쳐 설계를 그 목적으로 합니다.</p><blockquote><p>결론 : 전체 아키텍처 설계에 대한 책임을 집니다.</p></blockquote><h2 id="Business-Architect-BA"><a href="#Business-Architect-BA" class="headerlink" title="Business Architect (BA)"></a>Business Architect (BA)</h2><p>일반적으로 역할을 구분하지는 않지만, EA의 경우 기술적인 측면과 비즈니스적인 측면에 대한 이해도가 모두 높아야 합니다.<br>하지만 현실적으로 두 가지에 대한 이해도가 높은 사람이 극히 드물기 때문에 EA는 좀더 기술적 측면에 집중하고 BA로 하여금 비즈니스적 측면을 고려할 수 있도록 역할을 분담하고 있습니다.</p><blockquote><p>비즈니스 측면에 대한 설계를 담당</p></blockquote><h2 id="quality-assurance-QA"><a href="#quality-assurance-QA" class="headerlink" title="quality assurance (QA)"></a>quality assurance (QA)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">품질보증</span><br></pre></td></tr></table></figure><p>주로 프로그램이나 문서의 검수를 합니다. 대부분 로직이나 내용보다는 룰(규정)을 지켰는지 봅니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://bcho.tistory.com/668" rel="external nofollow noopener noreferrer" target="_blank">아키텍트의 종류와 역할</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>newspaper/0.2.6</title>
      <link href="/2018/08/2018-07-24-newspaper/"/>
      <url>/2018/08/2018-07-24-newspaper/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">175.125.19.92 - - [23/Jul/2018:00:45:24 +0900] &quot;GET /servlet/xxxx HTTP/1.1&quot; 200 433 &quot;-&quot; &quot;newspaper/0.2.6&quot; 57ms</span><br></pre></td></tr></table></figure><p>특정아이피에서 이상한 USER-AGENT 값이 지속적으로 유입되고 있습니다.<br>보통의 USER-AGENT 의 경우에는,  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Mozilla/5.0 (Linux; Android 7.1.1; SM-N950N Build/NMF26X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/62.0.3202.84 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/159.0.0.38.95;]&quot;</span><br></pre></td></tr></table></figure><p>이런 형태로 해당 유입패턴을 가지고 웹, 모바일을 구분하거나</p><p>모바일에서도,<br>삼성인지, 아이폰인지 분석하는 용도로 잘 사용합니다.</p><p>근데 해당 ua(user-agent)값에 떡하니,<br>“newspaper/0.2.6”란 값이 들어오며,<br>해당 패턴들이 부정유입,<br>들어와서는 안되는 예전 데이터들로 파악되어,<br>추측컨데 크롤링이나 bot 으로 판단이 되었습니다.</p><p>실제, 해당 녀석이 무엇인지 검색을 해보기 위해,<br>newspaper로 검색해보니 파이썬 크롤링관련 내용이 검색이 되었으며,</p><p>해당 github의 <a href="https://github.com/codelucas/newspaper/blob/master/newspaper/configuration.py" rel="external nofollow noopener noreferrer" target="_blank">66라인</a>을 보니</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.browser_user_agent = &apos;newspaper/%s&apos; % __version__</span><br></pre></td></tr></table></figure><p>위와 같이 별도의 설정이 없으면 “newspaper/0.2.6” 라는 ua값이 찍히도록 되어있는 것을 확인했습니다.</p><p>해당 IP는 바로 차단을 해야할 것으로 보이며, ua에 대한 체크로직을 추가했습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://newspaper.readthedocs.io/en/latest/" rel="external nofollow noopener noreferrer" target="_blank">Newspaper3k</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tar.gz 파일 압축 푸는 방법</title>
      <link href="/2018/08/2018-07-09-tar_gzip/"/>
      <url>/2018/08/2018-07-09-tar_gzip/</url>
      
        <content type="html"><![CDATA[<h2 id="TAR-와-GZ-으로-압축되어있는-파일을-압축-푸는-법"><a href="#TAR-와-GZ-으로-압축되어있는-파일을-압축-푸는-법" class="headerlink" title="TAR 와 GZ 으로 압축되어있는 파일을 압축 푸는 법"></a>TAR 와 GZ 으로 압축되어있는 파일을 압축 푸는 법</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r-- 1 root root   59886 2018-06-30 00:40 xxx.errorlog.log.2018-06-28.bak.tar.gz</span><br></pre></td></tr></table></figure><p>해당 파일을 분석할 일이 생겨 분석을 하려고 압축을 풀려고 했으나,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[WAS-05:root]/home/logs/log4j/backup&gt;#find . -name &quot;*.tar.gz&quot; -exec tar zxvf &#123;&#125; \;</span><br><span class="line">tar: 이것은 tar 아카이브처럼 보이지 않습니다</span><br><span class="line">tar: 다음 헤더로 건너 뜀</span><br><span class="line">tar: Exiting with failure status due to previous errors</span><br></pre></td></tr></table></figure><p>압축이 풀리지 않았습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[WAS-05:root]/home/logs/log4j/backup&gt;#tar -zxf ./xxx.errorlog.log.2018-06-27.bak.tar ./temp.log</span><br><span class="line">tar: ./temp.log: 아카이브에 없음</span><br><span class="line">tar: Exiting with failure status due to previous errors</span><br><span class="line">[WAS-05:root]/home/logs/log4j/backup&gt;#tar -zxf ./xxx.errorlog.log.2018-06-27.bak.tar</span><br><span class="line">[WAS-05:root]/home/logs/log4j/backup&gt;#ll</span><br><span class="line">합계 38528</span><br></pre></td></tr></table></figure><p>알고 있는 방법을 다 동원했는데, 여전히 압축이 풀리지 않았습니다.</p><p>그러다가 문득 떠오른 생각이 혹이 이 파일 tar로 압축한 걸 다시 gzip 으로 압축한건가?</p><p>……</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[WAS-05:root]/home/logs/log4j/backup&gt;#gzip -d ./xxx.errorlog.log.2018-06-28.bak.tar.gz</span><br></pre></td></tr></table></figure><p>풀립니다…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[WAS-05:root]/home/logs/log4j/backup&gt;#tar -zxf ./xxx.errorlog.log.2018-06-28.bak.tar</span><br></pre></td></tr></table></figure><p>역시 잘 풀립니다.</p><p>어떻게 보면 쉬운 문제을 수도 있는데, 계속 tar 와 아카이브 문제라고만 생각하면 쉽게 풀리지 않을거 같아 올립니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JVM heap memory 설정 변경 값</title>
      <link href="/2018/08/2018-07-02-JVM_HEAP_MEMORY/"/>
      <url>/2018/08/2018-07-02-JVM_HEAP_MEMORY/</url>
      
        <content type="html"><![CDATA[<h2 id="jmap-heap-9485"><a href="#jmap-heap-9485" class="headerlink" title="jmap -heap 9485"></a>jmap -heap 9485</h2><p>실제 서버에서 jmap 을 사용하여 heap 메모리 영역을 분석합니다.  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep tomcat</span><br></pre></td></tr></table></figure><p>로 현재 프로세스를 확인하여 9485 process ID인 것을 확인했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Attaching to process ID 9485, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.112-b15</span><br><span class="line"></span><br><span class="line">using parallel threads in the new generation.</span><br><span class="line">using thread-local object allocation.</span><br><span class="line">Concurrent Mark-Sweep GC</span><br><span class="line"></span><br><span class="line">Heap Configuration:</span><br><span class="line">   MinHeapFreeRatio         = 40</span><br><span class="line">   MaxHeapFreeRatio         = 70</span><br><span class="line">   MaxHeapSize              = 6438256640 (6140.0MB)</span><br><span class="line">   NewSize                  = 1073020928 (1023.3125MB)</span><br><span class="line">   MaxNewSize               = 1073020928 (1023.3125MB)</span><br><span class="line">   OldSize                  = 5365235712 (5116.6875MB)</span><br><span class="line">   NewRatio                 = 5</span><br><span class="line">   SurvivorRatio            = 1024</span><br><span class="line">   MetaspaceSize            = 21807104 (20.796875MB)</span><br><span class="line">   CompressedClassSpaceSize = 1073741824 (1024.0MB)</span><br><span class="line">   MaxMetaspaceSize         = 17592186044415 MB</span><br><span class="line">   G1HeapRegionSize         = 0 (0.0MB)</span><br><span class="line"></span><br><span class="line">Heap Usage:</span><br><span class="line">New Generation (Eden + 1 Survivor Space):</span><br><span class="line">   capacity = 1072037888 (1022.375MB)</span><br><span class="line">   used     = 1071054848 (1021.4375MB)</span><br><span class="line">   free     = 983040 (0.9375MB)</span><br><span class="line">   99.90830174838% used</span><br><span class="line">Eden Space:</span><br><span class="line">   capacity = 1071054848 (1021.4375MB)</span><br><span class="line">   used     = 1071054848 (1021.4375MB)</span><br><span class="line">   free     = 0 (0.0MB)</span><br><span class="line">   100.0% used</span><br><span class="line">From Space:</span><br><span class="line">   capacity = 983040 (0.9375MB)</span><br><span class="line">   used     = 0 (0.0MB)</span><br><span class="line">   free     = 983040 (0.9375MB)</span><br><span class="line">   0.0% used</span><br><span class="line">To Space:</span><br><span class="line">   capacity = 983040 (0.9375MB)</span><br><span class="line">   used     = 0 (0.0MB)</span><br><span class="line">   free     = 983040 (0.9375MB)</span><br><span class="line">   0.0% used</span><br><span class="line">concurrent mark-sweep generation:</span><br><span class="line">   capacity = 5365235712 (5116.6875MB)</span><br><span class="line">   used     = 3631971624 (3463.7180557250977MB)</span><br><span class="line">   free     = 1733264088 (1652.9694442749023MB)</span><br><span class="line">   67.69453979210373% used</span><br><span class="line">46179 interned Strings occupying 5111864 bytes.</span><br></pre></td></tr></table></figure><p>옵션은 예전 <a href="https://youngclown.github.io/2018/05/JVM-OPTION">JVM_OPT 제거 관련</a>에서 제외하지 않은,   다른 서버를 기반으로 테스트 했습니다.</p><p>제가 관리하는 서버와는 다른 서버로,<br>실제 옵션은 다음과 같습니다. [JVM_OPT 제거 관련]글과 동일한 옵션입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;-verbosegc -server -Xms6144m -Xmx6144m -XX:NewRatio=5  -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:+UseConcMarkSweepGC -XX:MaxTenuringThreshold=0 -XX:CMSInitiatingOccupancyFraction=75 -Djava.security.egd=file:/dev/urandom -Dscouter.config=/usr/local/tomcat7/conf/scouter.conf -Duser.timezone=GMT+09:00 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/tomcat7/logs/memory_err.log&quot;</span><br></pre></td></tr></table></figure><p>NewRatio=5 이므로, 실제 메시지가 5로 분배되며 그로 인해 1/(5+1)로 나누기 때문에,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OldSize = 5365235712 (5116.6875MB)</span><br><span class="line">NewSize = 1073020928 (1023.3125MB)</span><br></pre></td></tr></table></figure></p><p>전체 힙 사이즈의 크기 지정만큼 New 영역의 크기 지정 또한 중요하며,<br>XX:NewRatio 옵션을 이용해 전체 힙 크기 중 New 크기의 비율을 지정하거나 XX:NewSize 옵션을 사용해 원하는 크기만큼의 New 영역 크기를 지정하는 것이 좋다고 하는데,<br>New 비율이 그다지 높지 않고, 아직까지 해당 서버는 static 서버의 비율이 조금 높습니다.<br>(예전 서블릿 api 구조로 만들어진 서버.)</p><p>현재 우리 서버는 자바 1.8을 사용하고 있습니다.</p><p>에 Java8 부터 Permanent 영역에 대한 설정</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-XX:PermSize=350m / 기동시 Perm사이즈</span><br><span class="line">-XX:MaxPermSize=400m /최대사이즈</span><br></pre></td></tr></table></figure><p>두 가지가 사라지고</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-XX:MaxMetaspaceSize=</span><br><span class="line">-XX:MetaspaceSize=</span><br></pre></td></tr></table></figure><p>가 등장했다고 하는데요.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MetaspaceSize = 21807104 (20.796875MB)</span><br></pre></td></tr></table></figure><p>Perm 영역에 대한 관리 문제(Out of Memory와 GC 성능)로 Perm+Native 영역을 통합해서,<br>Metaspace 영역으로 바뀌었다고 하는데, 결과적으로<br>PermGen 영역이 삭제되어 heap 영역에서 사용할 수 있는 메모리가 늘어났으며,<br>PermGen 영역을 삭제하기 위해 존재했던 여러 복잡한 코드들이 삭제 되고 PermGen영역을 스캔 하기 위해 소모되었던 시간이 감소되어 GC 성능이 향상 되었다고 합니다.</p><p>물론, 대부분의 솔류션이 Spring 프레임웍으로 변경되면서 무분별한 static 사용이 줄어들었기 때문에, OOM 이 발생하는 거는 요근래 보기 힘들어졌지만, 해당 솔류션은 아직도 서블릿 API 이므로…</p><p>여튼, JAVA_OPTS을 적용하여, CMG 라든가 ratio 라든가 이런 부분이 적용이 되었습니다.<br>그리고 SurvivorRatio 나 MetaspaceSize 는 자동으로 적용이 되고요.</p><p>확인을 위해 제쪽에 적용된 셋팅(모든 설정은 지우고 default 처리)로 변경해봤습니다.</p><h2 id="jmap-heap-3880"><a href="#jmap-heap-3880" class="headerlink" title="jmap -heap 3880"></a>jmap -heap 3880</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">jmap -heap 3880</span><br><span class="line">Attaching to process ID 3880, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.112-b15</span><br><span class="line"></span><br><span class="line">using thread-local object allocation.</span><br><span class="line">Parallel GC with 13 thread(s)</span><br><span class="line"></span><br><span class="line">Heap Configuration:</span><br><span class="line">   MinHeapFreeRatio         = 0</span><br><span class="line">   MaxHeapFreeRatio         = 100</span><br><span class="line">   MaxHeapSize              = 6438256640 (6140.0MB)</span><br><span class="line">   NewSize                  = 2145910784 (2046.5MB)</span><br><span class="line">   MaxNewSize               = 2145910784 (2046.5MB)</span><br><span class="line">   OldSize                  = 4292345856 (4093.5MB)</span><br><span class="line">   NewRatio                 = 2</span><br><span class="line">   SurvivorRatio            = 8</span><br><span class="line">   MetaspaceSize            = 21807104 (20.796875MB)</span><br><span class="line">   CompressedClassSpaceSize = 1073741824 (1024.0MB)</span><br><span class="line">   MaxMetaspaceSize         = 17592186044415 MB</span><br><span class="line">   G1HeapRegionSize         = 0 (0.0MB)</span><br><span class="line"></span><br><span class="line">Heap Usage:</span><br><span class="line">PS Young Generation</span><br><span class="line">Eden Space:</span><br><span class="line">   capacity = 2112356352 (2014.5MB)</span><br><span class="line">   used     = 2112356352 (2014.5MB)</span><br><span class="line">   free     = 0 (0.0MB)</span><br><span class="line">   100.0% used</span><br><span class="line">From Space:</span><br><span class="line">   capacity = 16777216 (16.0MB)</span><br><span class="line">   used     = 9126896 (8.704086303710938MB)</span><br><span class="line">   free     = 7650320 (7.2959136962890625MB)</span><br><span class="line">   54.40053939819336% used</span><br><span class="line">To Space:</span><br><span class="line">   capacity = 16777216 (16.0MB)</span><br><span class="line">   used     = 0 (0.0MB)</span><br><span class="line">   free     = 16777216 (16.0MB)</span><br><span class="line">   0.0% used</span><br><span class="line">PS Old Generation</span><br><span class="line">   capacity = 4292345856 (4093.5MB)</span><br><span class="line">   used     = 3228912792 (3079.331199645996MB)</span><br><span class="line">   free     = 1063433064 (1014.1688003540039MB)</span><br><span class="line">   75.22489800039077% used</span><br><span class="line">43424 interned Strings occupying 4727664 bytes.</span><br></pre></td></tr></table></figure><p>CMG 설정에 의해 강제로 Old Generation 이 75% 넘으면 강제 GC가 발생하도록 되어있었는데요.<br>75%가 넘어도 강제 GC를 발생시키지 않습니다.<br>Ratio 도 5 의 비율에서 2의 비율로 변경되었고, 그로인해, MaxNewSize 와 NewSize 비율도 자동으로 갱신되었습니다.  </p><p>제가 관리하는 솔류션은, static을 거의 줄이고, new 객체로 전환시켜놓은것이 많다보니,<br>ratio option 을 안거는게 더 효율이 있었는데,<br>해당 솔류션은 사용한것과 사용하지 않은 것의 차이점이 크지 않았습니다.<br>제쪽은 작업 후 Full GC 와 GMC 가 사라졌는데, GMC가 사라지긴했지만, 그건 옵션을 제거해서 사라진 것이고 Full GC는 여전히 발생했습니다.</p><p>결국 큰 실익이 없다하여 예전 셋팅값으로 돌아갔습니다. 솔류션의 개발자들의 무분별한 static 변수들을 제거한 후에야,<br>재도전을 해볼 수 있을 거 같습니다.  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL error 1130: Host &#39;XXX&#39; is not allowed to connect to this MySQL server</title>
      <link href="/2018/08/2018-07-09-MYSQL_1130/"/>
      <url>/2018/08/2018-07-09-MYSQL_1130/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL-Server-8-0-11"><a href="#MySQL-Server-8-0-11" class="headerlink" title="MySQL Server 8.0.11"></a>MySQL Server 8.0.11</h2><p>Starting Server 에서 에러 발생</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Retry 8: Attempting to connect to Mysql@localhost:3306 with user root with no password...</span><br><span class="line">MySQL error 1130: Host &apos;ymkim&apos; is not allowed to connect to this MySQL server</span><br><span class="line">Waiting 3 seconds before the next connection attempt...</span><br><span class="line">Retry 9: Attempting to connect to Mysql@localhost:3306 with user root with no password...</span><br><span class="line">MySQL error 1130: Host &apos;ymkim&apos; is not allowed to connect to this MySQL server</span><br><span class="line">Waiting 3 seconds before the next connection attempt...</span><br><span class="line">Retry 10: Attempting to connect to Mysql@localhost:3306 with user root with no password...</span><br><span class="line">MySQL error 1130: Host &apos;ymkim&apos; is not allowed to connect to this MySQL server</span><br><span class="line">Failed to connect to MySQL Server 8.0.11 after 10 attempts.</span><br><span class="line">Ended configuration step: Starting Server</span><br></pre></td></tr></table></figure><p>Host 를 ymkim 으로 설정한 적이 없는데, not allowd to connect to this MySQL server 에러가 발생했습니다.</p><p>실제 설치한 경로에는 정상적으로 mysql 이 설치되었으며,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql -u root -p -h localhost -P 3306</span><br><span class="line">Enter password: ****</span><br><span class="line">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br></pre></td></tr></table></figure><p>로그인하려면 실패를 합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;netstat -na</span><br><span class="line"></span><br><span class="line">활성 연결</span><br><span class="line"></span><br><span class="line">  프로토콜  로컬 주소           외부 주소              상태</span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:3306           0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:12025          0.0.0.0:0              LISTENING</span><br><span class="line">~~~~~~~~~~~~~ 중략 ~~~~~~~~~~~~~~~~~~~~~~~~~</span><br></pre></td></tr></table></figure><p>netstat 로 확인해보면 설치후 3306이 잘 떠있는것도 확인할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql -uroot -p -h 0.0.0.0 -ptest  3306</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 2003 (HY000): Can&apos;t connect to MySQL server on &apos;0.0.0.0&apos; (10049)</span><br><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql -uroot -p -h ymkim  -ptest  3306</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 1130 (HY000): Host &apos;ymkim&apos; is not allowed to connect to this MySQL server</span><br><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql -uroot -p -h localhost  -ptest  3306</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br><span class="line"></span><br><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql -uroot -p -h 192.168.100.11  -ptest  3306</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 1130 (HY000): Host &apos;ymkim&apos; is not allowed to connect to this MySQL server</span><br><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql -uroot -p -h 127.0.0.1  -ptest  3306</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql -uroot -p -h localhost  -ptest  3306</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql</span><br><span class="line">ERROR 1045 (28000): Access denied for user &apos;ODBC&apos;@&apos;localhost&apos; (using password: NO)</span><br><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin&gt;mysql -uroot</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 31</span><br><span class="line">Server version: 8.0.11 MySQL Community Server - GPL</span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.</span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>… 그냥 mysql -uroot 로 접속하면 설치된 서버라 바로 접속이 되는 데 뻘짓을 했던 거 같습니다.</p><p>그리고 가장 큰 문제는!!!!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><p>해당 파일의 내용에,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># localhost name resolution is handled within DNS itself.</span><br><span class="line">192.168.100.11localhost</span><br></pre></td></tr></table></figure><p>localhost 를 Internet Protocol Version 4(TCP/IPv4) 속성에 설정한 IP주소를 사용하고 있었던 부분에서 Mysql 이 제대로 인식을 못했던 부분으로,<br>해당 부분을</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1localhost</span><br></pre></td></tr></table></figure><p>해당 host 값을 localhost 를 127.0.0.1 로 변경 하면 정상적으로 서버 설치가 되는 걸 확인할 수 있었습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis CLUSTER nodes.conf 파일 확인하며 장애 대응.</title>
      <link href="/2018/08/2018-06-28-CLUSTER_NODES/"/>
      <url>/2018/08/2018-06-28-CLUSTER_NODES/</url>
      
        <content type="html"><![CDATA[<h2 id="CLUSTER-NODES"><a href="#CLUSTER-NODES" class="headerlink" title="CLUSTER NODES"></a><a href="https://redis.io/commands" rel="external nofollow noopener noreferrer" target="_blank">CLUSTER NODES</a></h2><p>lod 현재 상황은 cluster nodes 라는 명령어를 통해 보일 수 있습니다.<br>CLUSTER NODES는 클러스터에 참여하고 있는 노드의 정보를 보는 명령으로,<br>접속한 서버가 가지고 있는 클러스터에 속한 다른 노들의 정보입니다.</p><p><img src="/images/20180709clusternode.png" alt="clusternodeImg">{: width=”100%”}</p><ol><li>node-id : 노드를 유일하게 구분할 수 있는 ID며, 40개 문자로 구성되면 변경되지 않습니다.</li><li>ip:port : 노드의 주소로 IP와 Port 입니다.</li><li>flags : master, slave, fail?, fail, handshake, noaddr, noflags가 있고, 명령을 실행한 노드에 myself 라고 표시된다고 합니다.</li><li>master : 슬레이브일 때 마스터 노드 ID가 표시되며, 마스터일 때는 “-“이 표시됩니다.</li><li>ping-sent : myself가 다른 노드에 ping을 보낸 시각(Unix timestamp milliseconds)입니다.<br>주의할 것은 7000번이 7001번에게 Ping을 보냈으면 ping-sent가 7000번에 기록되는 것이 아니고 7001번에 기록된다고 합니다.<br>Ping-sent 시각은 Pong이 오면 지워지므로 이 시각은 아직 Pong 오지 않았을 아주 짧은 시간만 볼 수 있다고 합니다.<br>따라서 대부분의 경우 0으로 나온며, Myself는 이 값이 항상 0입니다.</li><li>pong-recv : Pong을 받은 마지막 시각(Unix timestamp milliseconds)을 의미합니다.<br>7000번이 7001번으로부터 Pong을 받으면 7000번이 가지고 있는 7001번 데이터에 기록되며, Myself는 이 값이 항상 0입니다.</li><li>config-epoch : The configuration epoch (or version) of the current node (or of the current master if the node is a slave).   Each time there is a failover, a new, unique, monotonically increasing configuration epoch is created.   If multiple nodes claim to serve the same hash slots, the one with higher configuration epoch wins.</li><li>link-state : 클러스터 버스로 연결된 상태를 나타냅니다.<br>connected 또는 disconnected 라고 합니다.</li><li>slot : 마지막 항목은 할당된 슬롯 정보입니다.<br>슬롯이 할당된 마스터 노드에 범위로 표시됩니다.<br>슬레이브나 슬롯이 할당되지 않은 마스터는 표시되지 않습니다.</li></ol><h2 id="Redis-CLUSTER-nodes-conf-파일"><a href="#Redis-CLUSTER-nodes-conf-파일" class="headerlink" title="Redis CLUSTER nodes.conf 파일"></a>Redis CLUSTER nodes.conf 파일</h2><p>서버에서 [CLUSTERDOWN The cluster is down] Error 가 발생하기 시작했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ERROR][2018/06/28 16:04:31] c.m.d.r.RedisExecutor$RedisCommonPattern [86]</span><br><span class="line">###### ERROR LOG ######</span><br><span class="line">CLASS_NAME : Protocol.java / LINE : 115 / MESSAGE : redis.clients.jedis.exceptions.JedisClusterException: CLUSTERDOWN The cluster is down</span><br><span class="line">CLASS_NAME : Protocol.java / LINE : 151 / MESSAGE : redis.clients.jedis.exceptions.JedisClusterException: CLUSTERDOWN The cluster is down</span><br><span class="line">###### END ERROR LOG ######</span><br></pre></td></tr></table></figure><p>SCOUTER 에서 사용하고 있는 ip 와는 다른 클러스터 ip 가 보이며, time out이 발생하는 현상이었습니다.<br>어플리케이션에서는 해당 IP를 호출하는 부분이 적혀 없었기에,</p><p>위의 서술한 cluster nodes 를 검색해보니, SCOUTER 에 찍혔던 ip 와 같은 클러스터 ip가 찍히는 것을 확인할 수 있었습니다.</p><p>원인은 별도의 검증계 서버를 구축하기 위해 레디스를 구축하던 과정에서, 뭔가 grouping 이 가능한 동일 id를 설정하면서, 해당 ip 까지 동일한 클러스터로 판단하여, 클러스터링된것으로 보이며,</p><p>급한 이슈 해결을 해야하므로, 레디스를 다시 밀어버리고, 재설치하는 방법으로 해결되었습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Exception in thread HttpServlet NoClassDefFoundError</title>
      <link href="/2018/08/2018-06-29-IntelliJ_Provided/"/>
      <url>/2018/08/2018-06-29-IntelliJ_Provided/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: javax/servlet/http/HttpServlet&quot;</span><br></pre></td></tr></table></figure><p>psvm 으로 main을 만들어 사용할 때,</p><p>Intellij 에서만 HttpServlet 을 못찾는 에러가 발생합니다.<br>이클립스라든가 IntelliJ 내부의 JUnit 을 사용했을 때는 정상적으로 동작합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.0.1&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>보통, javax.servlet-api 는 서버에서는 tomcat 에 존재하므로,<br>dependency의 scope를 provided로 적용해두고 있습니다.</p><p>그런데, main에서 호출할시에는 tomcat 과는 별개의 동작이므로, 외부에서 이 라이브러리가 제공되는 선언시, NoClassDefFoundError 가 발생하는 것입니다.</p><p>결국 IntelliJ 설정 중,<br><img src="/images/20180629Provided.PNG" alt="provided">{: width=”100%”}<br>로 인해 발생한 문제로 확인이 되었습니다.</p><p>Include dependencies with “Provided” scope 를 체크하면, 정상적으로 동작합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>BEA-001128_Connection for pool &#39;DB&#39; closed.</title>
      <link href="/2018/08/2011-03-22-DBPOOL/"/>
      <url>/2018/08/2011-03-22-DBPOOL/</url>
      
        <content type="html"><![CDATA[<ol><li>실제 여유 용량이 5% 남음</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;BEA-310002&gt; &lt;5% of the total memory in the server is free&gt;</span><br><span class="line">Description : Free memory in the server has changed</span><br><span class="line">Action : no action required</span><br></pre></td></tr></table></figure><ol start="2"><li>구성에 따라서 예정된 데이터 정리 작업을 실행함</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Description : Scheduling data retirement tasks as per configuration</span><br><span class="line">Action : no action required</span><br><span class="line"></span><br><span class="line">&lt;BEA-320140&gt; &lt;Scheduling data retirement tasks as per configuration.&gt;</span><br></pre></td></tr></table></figure><p>3.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Description : Processed configuration and scheduled data retirement tasks.</span><br><span class="line">Action : no action required</span><br><span class="line">&lt;BEA-320143&gt; &lt;Scheduled 0 data retirement tasks as per configuration.&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>DB 가 connection closed 처리됨.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;BEA-001128&gt; &lt;Connection for pool &quot;DB&quot; closed.&gt;</span><br></pre></td></tr></table></figure><p>&lt;중략&gt;</p><p>해당 문제는 대략 1분~2분 사이에 잠깐의 PoolDisable 현상이 나는 골치아픈 문제였습니다.</p><p>워낙 접속하는 클라이언트가 많다보니 1분 정도의 PoolDisable 현상에서도 2천~9천건 가까운 에러가 발생하는데,<br>해당 문제는 DB 과부하로 5분 정도의 지연 현상이 생겼고,<br>그때, DB의 transaction 과 웹로직의 Shrink Frequency 와 뭔가 맞지 않는 설정이 있지 않은가 의심했습니다.</p><p>서버의 웹로직의 Shrink Frequency 는 300초 즉 5분으로 설정되어있는데, 해당 시간이 지나면 끊고나서 재접속시키고 있습니다.</p><p>결과적으로 DeadLock 이 발생하였고,<br>Shrink Frequency 의 설정값 5분을 초과하면서 DeadLock 이 떨어지기 전에 PoolDisable이 발생한 것으로 추측하며,<br>해당 옵션을 수정하였습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://forums.oracle.com/forums/thread.jspa?threadID=928446" rel="external nofollow noopener noreferrer" target="_blank">BEA Weblogic AS 9.2 close pool connections</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>POPUP_OPNER</title>
      <link href="/2018/08/2009-04-09-client_opner/"/>
      <url>/2018/08/2009-04-09-client_opner/</url>
      
        <content type="html"><![CDATA[<h2 id="자식창에서-부모창의-파일업로드-기능"><a href="#자식창에서-부모창의-파일업로드-기능" class="headerlink" title="자식창에서 부모창의 파일업로드 기능"></a>자식창에서 부모창의 파일업로드 기능</h2><p>클라이언트의 승낙 없이는 클라이언트의 자원을 함부로 사용할 수 없습니다.<br>파일업로드의 경우 클라이언트의 사용자가 직접 입력하지 않고<br>스크립트를 사용한다던지 하는 것은 보안차단되어 있습니다.</p><p>현재 팝업창에서 파일업로드가 되면서 DB에 저장되는 형식을 가지고 있는데<br>다른 부분은 OPNER 로 빼서 팝업에 넘겨주는 것이 가능하나,<br>파일업로드의 경우 OPNER 에서 처리하지 않고<br>POPUP 창까지 클라이언트가 올리려던 경로를 기억해 둔 다음,<br>POPUP 창에서 처리하려고 할 경우 지금 기억하고 있는 것이 클라이언트가 집적 마우스로 선택해서 올리기 위한 자의적인 파일인지,<br>코더가 악의적으로 하드내의 특정 파일을 빼내려고 경로를 잡은 건지 알 방법이 없기에,<br>원칙적으로 이러한 코딩이 보안 설정되어있는 것으로 압니다.<br>이를 해결하기 위해선, 클라이언트의 사용자 승낙(예를 들어, ActiveX의 설치 과정)을 받아 클라이언트에 해당 파일을 업로드하도록 만들어진 프로그램을 설치해야만 그런 기능이 가능할 것입니다.<br>혹은 우선 OPNER 에서 실지로 파일을 임시 폴더로 업로드 한 뒤에,<br>메일 발송을 할 경우에 경로에 있는 임시 파일을 실제 파일 경로로 옮기는 것도 가능은 할 거 같습니다.  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>serialVersionUID 선언</title>
      <link href="/2018/06/2018-06-27-serialVersionUID/"/>
      <url>/2018/06/2018-06-27-serialVersionUID/</url>
      
        <content type="html"><![CDATA[<p>@SuppressWarnings(“serial”) 선언한 class 에서 에러가 발생했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">java.io.InvalidClassException: com.openrtb.api.dto.xxx; local class incompatible: stream classdesc serialVersionUID = -8253581617857313489, local class serialVersionUID = -5676156168200907805</span><br><span class="line">at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:616)</span><br><span class="line">at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1630)</span><br><span class="line">at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)</span><br><span class="line">at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1781)</span><br><span class="line">at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1353)</span><br><span class="line">at java.io.ObjectInputStream.readObject(ObjectInputStream.java:373)</span><br><span class="line">at java.util.ArrayList.readObject(ArrayList.java:791)</span><br><span class="line">at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1058)</span><br><span class="line">at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1909)</span><br><span class="line">at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1808)</span><br><span class="line">at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1353)</span><br><span class="line">at java.io.ObjectInputStream.readObject(ObjectInputStream.java:373)</span><br></pre></td></tr></table></figure><p>개발하면서 @SuppressWarnings(“serial”) 선언한 클래스에, 타개발자가 나중에 사용할 특정 변수를 추가하면서, JVM 에서 발급해주는 serialVersionUID가 변경되면서 발생한 문제.</p><p>해당 서비스는 혼자 관리하기 때문이라는 안일하게 SuppressWarnings을 걸어놓았는데… ㅠㅜ</p><p>class 가 내부 클래스에서 처리하면 문제가 없었지만, redis 를 사용하고 있었고, 해당 nosql 에 해당 클래스의 객체 정보를 바이너리화 하여 저장하고 있었기 때문에 조금의 실수라도 바로 문제가 발생할 수 밖에 없었던 겁니다!!!!!!</p><p>JVM에 자동으로 변경된 Default 시리얼 번호와, redis에 바이너리로 저장한 class의 시리얼 번호가 틀리면서 문제가 발생했습니다.</p><p>serialVersionUID 는 직렬화에 사용되는 고유 아이디인데, 다른 대부분의 redis 사용하는 객체클래스에는 적용해놓고, 이 녀석만 @SuppressWarnings(“serial”)을 선언해놓았더군요.</p><p>잠시 배포 중단을 할 수 밖에 없었습니다.</p><p>해당 클래스에 @SuppressWarnings(“serial”)을 선언할 때는,<br>해당 객체가 더이상 변경될 이유가 없고, 내가 관리하는 부분이니, 누군가 수정하지 않을 것이니 문제없겠지 하고 작업했던 걸로 기억합니다.</p><p>정말 안일했고, 권장하는 방법을 무시하면 안된다는 것을 다시 한번 깨닫습니다.</p><p>예전에 봤던 글의 결론을 첨부합니다.</p><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>자바 직렬화는 장점이 많은 기술입니다만 단점도 많습니다.<br>문제는 이 기술의 단점은 보완하기 힘든 형태로 되어 있기 때문에 사용 시 제약이 많습니다.<br>그래서 이 글을 적는 저는 직렬화를 사용할 때에는 아래와 같은 규칙을 지키려고 합니다.  </p><ol><li>외부 저장소로 저장되는 데이터는 짧은 만료시간의 데이터를 제외하고 자바 직렬화를 사용을 지양합니다.  </li><li>역직렬화시 반드시 예외가 생긴다는 것을 생각하고 개발합니다.</li><li>자주 변경되는 비즈니스적인 데이터를 자바 직렬화을 사용하지 않습니다.</li><li>긴 만료 시간을 가지는 데이터는 JSON 등 다른 포맷을 사용하여 저장합니다.</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ATOM 의 Github 설정 및 Git commit</title>
      <link href="/2018/06/2018-06-26-ATOM_Setting/"/>
      <url>/2018/06/2018-06-26-ATOM_Setting/</url>
      
        <content type="html"><![CDATA[<p>Github blog를 만들 때, 지금 <a href="https://atom.io/" rel="external nofollow noopener noreferrer" target="_blank">ATOM Editor</a>을 사용 중이다.</p><p>기본적으로 Markdown preview 기능을 제공해주기 때문에 (ctrl + shift + m : 단축키) 미리보기 기능이 좋아, 사용 중이다.</p><p>github 연동이라든가, 브런치 및 여러가지 기능을 쓰려면 IntelliJ가 편하나, Github blog만 관리할 경우에는 Atom이 매우 편했다.</p><p>물론 사람마다 다 다르겠지만, 나의 경우는 IntellJ 나 비쥬얼 스튜디오 2017의 경우 프리뷰 기능을 제공은 해주나, Atom 처럼 거의 html 을 완벽하게 구현해주지는 못하는 느낌이 들어서 그렇다.<br>(아마 Atom 자체가 html, js, javascript 가 지원되는 에디터이기 때문일 거 같다.)</p><p>인터넷에서 처음 Atom 사용시 git-clone 을 패키지 설치하면 편하다는 글을 보았다.</p><p>패키지에서 git-clone, git-plus 를 다운받았는데,<br>어떤 글에는 markdown preview 로 다운받으라는 글도 있었다.</p><p>Atom 이 계속 업글되면서 default pakage 에 포함되어있는 것들도,<br>예전 글에서는 install pakage 로 등록해야하는 것 같다.</p><p>git-clone 또한, 그냥 ctrl + shift + p 를 눌러,<br>커맨드 창을 호출하여 Git clone 을 치면, 나오는 Github 에서 제공하는 clone 을 쓰는 것이 더 편한 느낌이 든다.</p><p>git-plus 기능 또한, 우측 버튼을 눌러 메뉴를 띄어 처리할 때 말고는 슈퍼검색(command line)을 눌러(ctrl+shift+p)서 git tab 을 검색해 띄우는 git 관련 툴이 조금씩 손에 익으니 더 편하게 되는거 같다.</p><h2 id="markdown-preview"><a href="#markdown-preview" class="headerlink" title="markdown preview"></a>markdown preview</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl + shift + m</span><br></pre></td></tr></table></figure><h2 id="git-commit-push-pull-등등"><a href="#git-commit-push-pull-등등" class="headerlink" title="git commit, push, pull 등등"></a>git commit, push, pull 등등</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl+shift+p &gt; git tab</span><br></pre></td></tr></table></figure><h2 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl+shift+p &gt; git clone</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ProxyApi 처리 방안 및 고민</title>
      <link href="/2018/06/2018-06-20-Proxy-Path/"/>
      <url>/2018/06/2018-06-20-Proxy-Path/</url>
      
        <content type="html"><![CDATA[<p>강의 준비를 하느라 일일 커밋을 못하고 있는 상황이라,<br>작년 여름에 있었던 재미난 일을 적습니다.</p><p>전 연동 관련하여, 이미지 캐싱 기능을 사용하기 위해,<br>CDN 회사 중 한곳에게 이미지 캐싱을 위한 프록시 서버를 오청했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://img.xxx.com/?src=이미지주소</span><br></pre></td></tr></table></figure><p>형태로 요청하면, 해당 CDN 회사는 하루동안의 해당 이미지를 캐싱하는 것인데,<br>자체 개발하는 공수 및 서버 증설 비용보다, 프록시 서버를 두어 이용하는 것이 가격대비 높기 때문에 결정되었습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://zzzzz.com/images/upload/./repo/targetDir/p/AM/460x640/AMMP3WA9775A_118_01.png</span><br></pre></td></tr></table></figure><p>특정 광고주 서버에서 위와같이 /./ 형태로 이미지를 수집하여, 노출시킬때,<br>이미지를 그냥 호출하면 자동으로 /./ 를 없애주면서 이미지가 정상적으로 떠야하는데,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://img.xxx.com/?src=http://zzzzz.com/images/upload/./repo/targetDir/p/AM/460x640/AMMP3WA9775A_118_01.png</span><br></pre></td></tr></table></figure><p>프록시 서버를 통해 요청했을 경우에는 엑박이 발생하여 담당자에게 문의해보았습니다.<br>담당자의 대답은,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">URI 에 &quot;./&quot; 이 포함되어 요청되는 경우. 해당 client application (Web browser, web query, etc) 에서 &quot;./&quot; 을 제거하여 요청합니다.</span><br><span class="line"></span><br><span class="line">즉, 서버측에서 제거해주는게 아닙니다. 그리고 param 에 포함된 값 &quot;./&quot;은 browser 에서 제거해주지 않습니다.</span><br><span class="line"></span><br><span class="line">가능하다면 request 시 ./ 이 없는 param value 로 사용 해 주시길 바랍니다.</span><br><span class="line">param value 에서 &quot;./&quot; 을 무조건 제거 해야 하는지도 확인 바랍니다.</span><br></pre></td></tr></table></figure><p>클라이언트의 어플리케이션 문제랍니다. 이런걸 사용자 이슈라고 하지요.<br>우선 전화로 이야기를 드렸습니다.</p><p>해당 이미지를 보내주는 광고주가 상대경로로 이미지를 잡아서 제공해주는 것으로 보이니,<br>정상적인 상황이며, 이것은 브라우져의 어플리케이션 문제가 아니므로,</p><p>CDN 프록시 서버에서 대응해주셔야한다는 이야기를 반복했지만,</p><p>이야기가 안통했습니다.<br>테스트한 사람의 브라우져 문제고, 사용자 이슈이므로, 프록시 서버에서 대응 해줄 수 없으므로,<br>프록시 서버에 이미지를 보낼때 ‘./‘ 를 제거해서 보내달라고 합니다.</p><hr><p>개발자는 개발적인 이야기 말고는 언변에서 약하다는 것을 다시 한번 느끼며,<br>코딩을 시작했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">public class ProxyApi extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = -1501736936092164738L;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">throws ServletException, IOException &#123;</span><br><span class="line">String imgUrl = request.getParameter(&quot;imgUrl&quot;);</span><br><span class="line"></span><br><span class="line">response.setContentType(&quot;image/jpeg&quot;);</span><br><span class="line">double len = 0;</span><br><span class="line">byte[] buffer = new byte[1024];</span><br><span class="line">BufferedOutputStream outs = null;</span><br><span class="line">InputStream inputStream = null;</span><br><span class="line">URL url = null;</span><br><span class="line">// out.flush(); // 미리 에러나 여러가지 상황 때문에 flush 시킨다.</span><br><span class="line">try &#123;</span><br><span class="line">url = new URL(imgUrl); // 요청 url</span><br><span class="line">inputStream = url.openStream();</span><br><span class="line">outs = new BufferedOutputStream(response.getOutputStream());</span><br><span class="line">while ((len = inputStream.read(buffer)) != -1) &#123;</span><br><span class="line">outs.write(buffer, 0, (int) len);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (MalformedURLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">if (outs != null)</span><br><span class="line">outs.close();</span><br><span class="line">if (inputStream != null)</span><br><span class="line">inputStream.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>개발자는 말로 싸우면 안되는 것을 느낍니다.<br>쉽고 빠르게 서블릿 API를 만들어 개인서버에 뛰웠습니다.</p><p>그리고 문의글을 남겼습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">안녕하세요.</span><br><span class="line">개발팀의 XXXX입니다.</span><br><span class="line"></span><br><span class="line">제 개인서버에 단순히 이미지를 프록시하는 기능을 만들어 테스트 해보았습니다.</span><br><span class="line"></span><br><span class="line">http://ttttt/test/ProxyApi?imgUrl=http://zzzzz.com/images/upload/./repo/targetDir/p/AF/460x640/AFMP3EB9882A_001_05.png</span><br><span class="line"></span><br><span class="line">잘 뜹니다.</span><br><span class="line"></span><br><span class="line">client application (Web browser, web query, etc) 에서 &quot;./&quot; 을 제거하는 것과 별개로,</span><br><span class="line"></span><br><span class="line">단순히 ./ 는 상대경로로 해당 광고주의 같은 경로의 이미지를 가져오기 위해 사용된 것이므로,</span><br><span class="line"></span><br><span class="line">/ : 루트</span><br><span class="line">./ : 현재 위치</span><br><span class="line">../ : 현재 위치의 상단 폴더</span><br><span class="line"></span><br><span class="line">를 의미하여 해당 경로의 이미지를 가져오는 것으로 보입니다.</span><br><span class="line"></span><br><span class="line">그러므로, 브라우져와는 상관없는 이슈로, 다시 한번 확인해주시기 바랍니다.</span><br></pre></td></tr></table></figure><p>만약, 전화로 니가 맞네, 내가 맞네 서로 핑퐁하다가 하루를 보내기에 그때 당시 너무나 바쁘고 멘탈이 나갔기 때문에 오히려 빨리 처리해야겠다 싶어 개발을 하여 증명했던 것인데,<br>다른 이슈보다 더 빨리 클리어했던 걸로 기억이 납니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">안녕하세요.</span><br><span class="line"></span><br><span class="line">해당건은 &quot;./&quot; 에 대한 문제로 보였으나 실제 zzzzz.com 에서 Request 에 포함되는 일부 Header 에 대하여 필터링 하고 있습니다.</span><br><span class="line"></span><br><span class="line">CDN 에서 External Origin 으로 보내는 일부 Request custom header 가 해당 hfashionmall 에서 필터링 되고 있었습니다.</span><br><span class="line"></span><br><span class="line">필터되는 Header 모두 Origin 요청시 제거되도록 하였으며, 모두 정상 응답 되고 있습니다.</span><br><span class="line"></span><br><span class="line">혼선을 드려 죄송합니다.</span><br><span class="line"></span><br><span class="line">감사합니다.</span><br></pre></td></tr></table></figure><p>지금도, 가끔가다가 나는 모르겠고, 어찌되었건 니네 문제니까 해결해라는 식의 담당자를 만나게 되어 그대로 이슈가 허공에 증발하는 경우가 있기 때문에, 어찌되었건 도메인 주도에 의한 개발일이라는 것은 참 힘든 것을 느낍니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>net.sf.json.JSONObject 와 com.google.gson.Gson 비교</title>
      <link href="/2018/06/2018-06-07-GSON/"/>
      <url>/2018/06/2018-06-07-GSON/</url>
      
        <content type="html"><![CDATA[<h2 id="JSONObject-사용"><a href="#JSONObject-사용" class="headerlink" title="JSONObject 사용"></a>JSONObject 사용</h2><p>OpenRTB 연동시 body 에 json 형태로 오는 데이터를 읽을 때 JSONObject를 사용합니다.</p><p>3년전 전체 솔류션에 대한 검증을 할 때,<br>총 3개의 JSON을 사용하는 라이브러리가 존재했으며,<br>그 중 가장 건드리기 어려운 레거시 코드에서 사용하는 JSONObject를 제외하고,<br>나머지를 전부 JSONObject으로 변경하는 작업을 하였습니다.</p><p>해당 작업을 진행한 이유는,<br>라이브러리를 무분별하게 사용하지 않고,<br>소스에 대한 수정과 객체에 대한 직관성을 높이는 게 좋아보였기 때문에,<br>개인적인 독단으로 일을 저질렀던 건데, 그 때 당시에는 레거시 코드를 못건드리다보니 속도와 성능에 대해서 확인하지 못했던 부분이 있습니다.</p><h2 id="문제점"><a href="#문제점" class="headerlink" title="문제점"></a>문제점</h2><p>OpenRTB 시스템은 100 ms 안에 응답하는 것을 목표로 합니다.<br>이번 pinpoint 로 검증해본 결과 JSONObject의 경우 간혈적으로 지연이 발생했습니다.</p><p>그래서, 실제 서로간의 입찰요청(Bid Request) 와 입찰(Bid Try)를 비교하여, 해당 데이터의 속도를 1000만건 돌려보았습니다.<br>Gson 의 경우 해당 데이터가 완료되는 데 35초 가량 걸린 반면,<br>기존의 JSONObject의 경우 73초 가량이 더 걸리는 것으로 확인되었습니다.</p><p>다른 라이브러리를 가지고 여러가지 경우의 수를 확인했을 때 GSON 이 가장 좋은 것으로 파악이 되었으며,<br>결론적으로 여러 라이브러리의 평균을 인터넷으로 찾아보는 것도 좋지만,<br>자신의 솔류션에 맞춰서 사용해야한다는 것을 다시금 느꼈습니다.</p><p>2018-06-18 일 기준<br>현재 전체 속도가 10ms ~ 15ms 로 매우 안정적으로 변경되었으며,<br>간혈적으로 300ms ~ 500ms 로 띄는 현상이 Json-lib 에서 발생하지 않는 것을 확인했습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://djkeh.github.io/articles/The-fastest-way-to-parse-json-data-to-java-kor/" rel="external nofollow noopener noreferrer" target="_blank">JSON 데이터를 자바로 파싱하는 가장 빠른 방법</a></li><li><a href="http://www.yunsobi.com/blog/646" rel="external nofollow noopener noreferrer" target="_blank">java json 라이브러리 별 parser 속도 비교.</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>비개발자도 Atom Text Editor를 사용하여 github 에 jekyll 과 makdown 문법으로 blog를 만들어 Google Analytics와 Google Adsense 까지 활용</title>
      <link href="/2018/06/2018-06-04-ATOM/"/>
      <url>/2018/06/2018-06-04-ATOM/</url>
      
        <content type="html"><![CDATA[<!--# 비개발자도 Atom Text Editor를 사용하여 github 에 jekyll 과 makdown 문법으로 blog를 만들어 Google Analytics와 Google Adsense 까지 활용--><p><a href="https://youngclown.github.io/2018/05/FASTCAMPUS">개발자 커리어 컨퍼런스</a>를 듣고,<br>자기가 가지고 있는 지식을 공유하는 것 또한 자신이 아는 것을 정리하는 데 도움이 되는 하나의 방법이라는 이야기를 듣고,<br>사내강사를 신청합니다.</p><h2 id="부제-세중-github-Copy-amp-Paste-하기"><a href="#부제-세중-github-Copy-amp-Paste-하기" class="headerlink" title="부제 : 세중 github Copy &amp; Paste 하기"></a>부제 : 세중 github Copy &amp; Paste 하기</h2><h2 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h2><ol><li>노트북</li><li>wifi 속도를 위해 미리 download 받아 오기!<ul><li>노트북에 ATOM download(145mb) : <a href="https://atom.io/" rel="external nofollow noopener noreferrer" target="_blank">링크</a></li><li>노트북에 git download(38.7mb) : <a href="https://git-scm.com/download" rel="external nofollow noopener noreferrer" target="_blank">링크</a></li></ul></li><li>git 에 사용할 계정아이디 고민하기 : <a href="https://github.com/" rel="external nofollow noopener noreferrer" target="_blank">링크</a></li><li>자신에 알맞는 지킬 테마 고민하기 : <a href="http://jekyllthemes.org/" rel="external nofollow noopener noreferrer" target="_blank">링크</a><br>(강의시 획일화하기 위해 <a href="https://sejoung.github.io" rel="external nofollow noopener noreferrer" target="_blank">세중 github</a> 를 fork 받을 예정입니다.)</li></ol><h2 id="1일차"><a href="#1일차" class="headerlink" title="1일차"></a>1일차</h2><ul><li>시작하며(20분)</li><li>git 설명(40~1시간)</li><li>github 계정 생성(5분)</li><li>jekyll 설명(10분)</li><li>jekyll thema 설명(5분), 어차피 세중 github fork!!, star 주는법!</li></ul><h2 id="2일차"><a href="#2일차" class="headerlink" title="2일차"></a>2일차</h2><ul><li>Atom 설치(5분)</li><li>Atom 설명(20분)</li><li><p>git 설치(10분)<br>설치후</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\bymin&gt;git config --global user.email &apos;useremail&apos;</span><br><span class="line">C:\Users\bymin&gt;git config --global user.name &apos;username&apos;</span><br></pre></td></tr></table></figure></li><li><p>jekyll thema fork(20~30분) : <a href="https://sejoung.github.io" rel="external nofollow noopener noreferrer" target="_blank">세중 github</a> 를 fork</p></li></ul><h2 id="3일차"><a href="#3일차" class="headerlink" title="3일차"></a>3일차</h2><ul><li>jekll markdown 설명(20분)</li><li>git commit, push(git config username 등등 설정하기) 20~30분</li><li>git blog 완성 20~30분</li><li>Google Analytics 계정 생성 및 스크립트 발급 10분 (회원가입)</li></ul><h2 id="4일차"><a href="#4일차" class="headerlink" title="4일차"></a>4일차</h2><ul><li>최종적으로 자신의 github blog를 posting 하는 방법 설명 (10~20분)</li><li>Google Analytics 유입 확인 및 설명 (10~20분)</li><li>Google Adsense 생성 및 스크립트 설치 등록 (10~20분)</li></ul><h1 id="Git-이-뭔가요"><a href="#Git-이-뭔가요" class="headerlink" title="Git 이 뭔가요?"></a>Git 이 뭔가요?</h1><p>기트, 깃 이이라고 부름. 분산 형상 관리 시스템.</p><ul><li>리눅스 개발 커뮤니티에서 리눅스커널 프로젝트를 위해 자체 개발하며 시작됨<ul><li>리눅스의 아버지라 불리는 리누스 토발즈가 만든 완벽한 분산 형상 관리 시스템</li></ul></li><li>라이선스: GPLv2, LGPL2.1<ul><li>GPLv2 : GNU General Public License<ul><li>컴퓨터 프로그램을 어떤 목적으로든지 사용할 수 있다</li><li>컴퓨터 프로그램의 복사를 언제나 프로그램의 코드와 함께 판매 또는 무료로 배포할 수 있다</li><li>컴퓨터 프로그램의 코드를 용도에 따라 결정할 수 있다</li><li>변경된 컴퓨터 프로그램 역시 프로그램의 코드와 함께 자유로이 배포할 수 있다</li></ul></li><li>LGPL2.1 : Lesser General Public License<ul><li>LGPL로 배포되는 library를 수정하는 경우 → 이를 다시 LGPL로 공개</li><li>LGPL library를 바탕으로 수정된 library를 만들 경우<ul><li>파일 수정 시 수정했다는 사실과 수정일자를 명시</li><li>library 전체를 다시 LGPL로 공개</li><li>library에 포함된 모든 함수는 프로그램의 도움 없이도 수행 가능해야 함.</li></ul></li></ul></li></ul></li><li>스냅샷 스타일의 버전 정보 저장</li><li>무결성 검사는 SHA-1 해시 체크섬</li><li>파일은 다음 3가지 상태 중 하나<ul><li>Committed: 로컬DB에 저장됨</li><li>Modified: 수정파일이 로컬DB에 커밋되지 않음</li><li>Staged: 수정파일이 곧 커밋예정</li></ul></li><li>프로젝트 폴더의 3가지 단계<ul><li>Working Driectory: 파일 수정 공간</li><li>Staging Area: 곧 커밋예정 정보 저장</li><li>.git directory (Repository): 영구적 스냅샷 저장</li></ul></li></ul><h2 id="목표"><a href="#목표" class="headerlink" title="목표"></a>목표</h2><ul><li>빠른 속도</li><li>단순한 구조</li><li>비선형적인 개발 (수천 개의 동시다발 브랜치)</li><li>완벽한 분산</li><li>Linux 커널 같은 대형 프로젝트에도 유용할 것 (속도, 데이터 크기 측면)</li></ul><h2 id="장점"><a href="#장점" class="headerlink" title="장점"></a>장점</h2><ul><li>로컬 저장소를 보유하는 분산 환경이 가능하기 때문에 offline 개발이 많다면 유리합니다.</li><li>git 기반의 Open Source 개발의 참여가 가능합니다.</li><li>Github를 사용 할 수 있습니다.</li></ul><h2 id="단점"><a href="#단점" class="headerlink" title="단점"></a>단점</h2><ul><li>다른 형상관리 시스템에 비해 복잡하기 때문에 진입 장벽이 높습니다.</li></ul><h2 id="1일차-1"><a href="#1일차-1" class="headerlink" title="1일차"></a>1일차</h2><p>github 계정 <a href="https://github.com/" rel="external nofollow noopener noreferrer" target="_blank">생성</a>하기</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GitHub은 가장 큰 Git 저장소 호스트입니다.</span><br><span class="line">수백만 개발자가 모여서 수백만 프로젝트를 수행하는 중추기도 합니다.</span><br><span class="line">Git 저장소를 GitHub에 만들어 운영하는 비율이 높습니다.</span><br><span class="line">많은 오픈 소스 프로젝트는 GitHub을 이용해서 Git 호스팅, 이슈 트래킹, 코드 리뷰, 등등의 일을 합니다.</span><br><span class="line">Git을 많이 사용하다 보면 Git 프로젝트 자체에는 참여하지 않더라도 GitHub을 꼭 써야 하는 상황이 오거나 스스로 쓰고 싶어질 것입니다.</span><br></pre></td></tr></table></figure><hr><h1 id="Github-란-무엇인가"><a href="#Github-란-무엇인가" class="headerlink" title="Github 란 무엇인가?"></a>Github 란 무엇인가?</h1><p>기트허브, 깃허브, 깃헙 이라고 합니다.</p><ul><li>Git 웹호스팅 중 하나입니다.</li><li>소스코드 호스팅서비스의 일종입니다.</li><li>공개용은 무료, 비공개용은 유료.</li><li>버전관리 + 협업을 위한 공간.</li><li>소셜 코딩 공간.</li><li>Git 기반 개발자 네트워크.</li><li>Git 기반 오픈소스 SNS.</li></ul><h2 id="소스코드-호스팅서비스"><a href="#소스코드-호스팅서비스" class="headerlink" title="소스코드 호스팅서비스?"></a>소스코드 호스팅서비스?</h2><p>.io 도메인</p><ul><li>국가코드 최상위도메인(ccTLD)의 하나</li><li>영국령 인도양 지역(Indian Ocean Territory)에 할당되어 있습니다.</li><li>1997년 도입되었으며, 웹앱, 컴퓨터과학 분야에서 “입출력(Input/Output))”이라는 의미로 선호되고 있습니다.</li><li>2013년, GitHub 프로젝트 페이지 도메인을 username.github.io 로 제공(웹호스팅)하게되었습니다.</li></ul><h2 id="소셜-코딩-공간-–-퍼블리셔-개발자를-위한-참고-사항"><a href="#소셜-코딩-공간-–-퍼블리셔-개발자를-위한-참고-사항" class="headerlink" title="소셜 코딩 공간(?) – (퍼블리셔 개발자를 위한 참고 사항)"></a>소셜 코딩 공간(?) – (퍼블리셔 개발자를 위한 참고 사항)</h2><table><thead><tr><th style="text-align:left">웹사이트명</th><th style="text-align:center">주소</th></tr></thead><tbody><tr><td style="text-align:left">CodePen</td><td style="text-align:center"><a href="http://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">http://codepen.io</a></td></tr><tr><td style="text-align:left">CSS Deck</td><td style="text-align:center"><a href="http://cssdeck.com" rel="external nofollow noopener noreferrer" target="_blank">http://cssdeck.com</a></td></tr><tr><td style="text-align:left">dabblet</td><td style="text-align:center"><a href="http://dabblet.com" rel="external nofollow noopener noreferrer" target="_blank">http://dabblet.com</a></td></tr><tr><td style="text-align:left">CodeMirror</td><td style="text-align:center"><a href="http://codemirror.net" rel="external nofollow noopener noreferrer" target="_blank">http://codemirror.net</a></td></tr><tr><td style="text-align:left">Liveweave</td><td style="text-align:center"><a href="http://liveweave.com" rel="external nofollow noopener noreferrer" target="_blank">http://liveweave.com</a></td></tr><tr><td style="text-align:left">Plunker</td><td style="text-align:center"><a href="http://plnkr.co" rel="external nofollow noopener noreferrer" target="_blank">http://plnkr.co</a></td></tr><tr><td style="text-align:left">JSFiddle</td><td style="text-align:center"><a href="http://jsfiddle.net" rel="external nofollow noopener noreferrer" target="_blank">http://jsfiddle.net</a></td></tr><tr><td style="text-align:left">SOLOLEARN</td><td style="text-align:center"><a href="https://www.sololearn.com/Codes/" rel="external nofollow noopener noreferrer" target="_blank">https://www.sololearn.com/Codes/</a></td></tr><tr><td style="text-align:left">JS Bin</td><td style="text-align:center"><a href="http://jsbin.com" rel="external nofollow noopener noreferrer" target="_blank">http://jsbin.com</a></td></tr></tbody></table><h2 id="그렇다면-기획자는-–-기획자-참고-사항"><a href="#그렇다면-기획자는-–-기획자-참고-사항" class="headerlink" title="그렇다면 기획자는? – (기획자 참고 사항)"></a>그렇다면 기획자는? – (기획자 참고 사항)</h2><p><a href="http://germweapon.tistory.com/301" rel="external nofollow noopener noreferrer" target="_blank">훌륭한 기획자가 되려면 먼저 뛰어난 블로거가 되라</a></p><ul><li>IT트렌드에 관심을 갖게 됩니다.</li><li>글을 쓰며 자연스레 공부가 됩니다.</li><li>글쓰기 실력이 향상됩니다.</li><li>CSS와 개발을 이해할 수 있습니다.</li><li>기획자에게 블로그는 최고의 테스트베드 입니다.</li><li>취업 등의 커리어 관리에 도움이 됩니다.<ul><li>블로그로 본인의 전문성도 높일 수 있는데다 좋은 곳으로 이직할 기회도 생길 수 있습니다.</li></ul></li><li>꼭 git 이 아니더라도, 좋은 기획자가 되기 위해 블로그를 운영!!!?<br><a href="http://germweapon.tistory.com/" rel="external nofollow noopener noreferrer" target="_blank">참고주소</a></li></ul><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>그냥 어렵게 생각하지 않고, git이라는 특정 명령어를 사용하는 github 블로그라고 생각합시다.</p><h2 id="jekyll-설명"><a href="#jekyll-설명" class="headerlink" title="jekyll 설명"></a>jekyll 설명</h2><p>지킬(Jekyll)은 개발자/연구자들이 가장 좋아하는 브랜드(?) 중 하나인 깃허브(Github)에서 개발한 사이트 개발 툴입니다.<br>지킬은 정적 사이트이며, 정적 사이트의 단점과 장점은 다음과 같습니다.</p><p>Static website의 장점  </p><ul><li>개발하기가 쉽고 개발 비용도 쌉니다.</li><li>용량이 적어 호스트 비용이 쌉니다.</li></ul><p>Static website의 단점</p><ul><li>사이트를 업데이트 하기 위해선 전문 지식이 필요합니다.</li><li>일반 유저가 접근하기 쉽지 않습니다.</li><li>컨텐츠가 고립될 수 있습니다.</li></ul><p>지킬은 정적 사이트이기 때문에 PHP 언어 등을 이용한 서버 소프트웨어 없이<br>HTML, CSS 등의 정적파일들 만으로 사용자의 컴퓨터에서 사이트 생성이 가능합니다.<br>따라서 매우 빠르고, 가볍습니다.</p><p>특히 지킬은 Markdown이라는 온라인 문서 편집 표준 양식을 따르는데,<br>위키, 깃허브 ReadMe 파일 등을 작성하듯 글을 작성할 수 있습니다.<br>따라서 Markdown에 익숙한 사용자라면 기존 블로그보다 오히려 글 작성에 편안함을 느낄 수도 있으며,<br>반대로, 지킬의 Markdown 문법을 읽혀두면, 위키 같은 마크다운 문법을 사용하는 서비스에서도 손쉽게 사용할 수 있습니다.</p><p>지킬은 일반 블로그들 처럼 웹에디터에서 글을 작성하는 방식이 아닌,<br>Markdown과 같은 정적파일들을 미리 생성한 후 업로드(또는 서브밋! commit, push….)하는 방식을 취하기 때문에, 일반인들에겐 매번 코드를 서브밋해야하는 것이 번거롭고 어렵게 느껴질 수 있겠지만,<br>오히려 개발자/연구자들에겐 이것이 더욱 재미있을 수 있습니다.</p><h2 id="jekyll-thema-선택"><a href="#jekyll-thema-선택" class="headerlink" title="jekyll thema 선택  "></a>jekyll thema 선택  </h2><p><a href="http://jekyllthemes.org/" rel="external nofollow noopener noreferrer" target="_blank">지킬 테마 사이트 선택</a><br>해당 사이트에서 자신이 원하는 테마를 fork 받아 사용하면됩니다.</p><h2 id="2일차-1"><a href="#2일차-1" class="headerlink" title="2일차"></a>2일차</h2><h1 id="Atom"><a href="#Atom" class="headerlink" title="Atom?"></a>Atom?</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">아톰은 코딩, 디버그, 컴파일, 배포 등을 모두 수행하는</span><br><span class="line">통합개발툴(IDE, Integrated Development Environment)은 아닙니다.</span><br><span class="line">오직 codding만을 위한 text editor 입니다.</span><br><span class="line"></span><br><span class="line">GitHub에서 제작하였으며,</span><br><span class="line">Sublime Text처럼 패키지들을 개별적으로 설치하거나 삭제할 수 있고,</span><br><span class="line">심지어 Atom의 코어기능도 패키지들로 구성되어 있어 이들에 대해서도 on/off할 수 있는 등,</span><br><span class="line">커스터마이징의 자유도가 매우 높습니다.</span><br><span class="line">‘이런 기능이 있으면 좋겠다’</span><br><span class="line">싶은 것들은 검색만 잘 하면 얼추 비슷한 패키지를 찾을 수 있을 만큼 패키지 제작 참여가</span><br><span class="line">활발히 이뤄지고 있습니다.</span><br></pre></td></tr></table></figure><hr><p><a href="https://atom.io/" rel="external nofollow noopener noreferrer" target="_blank">다운로드</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">아톰(Atom) 일반적으로 웹 디자인을 할 때 많이 사용됩니다.</span><br><span class="line">아톰은 깃허브(GitHub)와 연동해서 편하게 다른 사람들과 함께 개발을 할 수 있습니다.</span><br><span class="line">사실 처음에 설정하는 과정만 귀찮지 한 번 하고 나면 함께 개발하는 과정이</span><br><span class="line">굉장히 편해지기 때문에 미리 하는 방법을 익혀 놓으시는 게 좋습니다.</span><br></pre></td></tr></table></figure></p><hr><h1 id="아쉬운점"><a href="#아쉬운점" class="headerlink" title="아쉬운점"></a>아쉬운점</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">오픈 소스이고, 플러그인으로 기능을 쉽게 확장할 수 있으며, 윈도우즈, 리눅스, macOS를 모두 지원하며, HTML, CSS, JavaScript와 같은 웹 기술로 화면을 구현했기 때문에 웹 페이지를 편집하듯이 UI를 제어할 수 있는 특징이 있습니다. 실제로도 웹 관련 스크립트 언어를 작성할 때 많이 사용됩니다.</span><br><span class="line"></span><br><span class="line">텍스트 에디터치고는 실행 속도가 다소 느리며, 소스 파일의 용량이 좀 크다 싶으면 Sublime Text에 비해 자주 뻗어버리는 문제가 있긴합니다.</span><br><span class="line">이 때문인지 최근에는 Visual Studio Code로 넘어가는 경우도 많아졌습니다.</span><br><span class="line"></span><br><span class="line">깃허브에서 만든게 ATOM 이라는 단순한 이유 때문에 이걸 사용합니다.</span><br></pre></td></tr></table></figure><h1 id="Atom-설치-후-package-추가-방법"><a href="#Atom-설치-후-package-추가-방법" class="headerlink" title="Atom 설치 후 package 추가 방법"></a>Atom 설치 후 package 추가 방법</h1><p><a href="http://stevenjsmin.tistory.com/162" rel="external nofollow noopener noreferrer" target="_blank">단축키 모음</a> 사이트<br>맥과 윈도우의 차이는 ctrl 키와 command 키 이 두개의 차이라고 생각하고,<br>나머지는 같다라고 생각하고 사용하면 편합니다.<br>대부분은 Command Palette 이라고 하는 기능을 써서 불러와서 사용하므로,<br>커맨드패널!! 매우 유용한 명령어. [컨트롤(커맨드) + 쉬프트 + P] !!</p><h2 id="package-설치하는-법"><a href="#package-설치하는-법" class="headerlink" title="package 설치하는 법"></a>package 설치하는 법</h2><p>단축키<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">윈도우의 경우 : 컨트롤 + 쉬프트 + P -&gt; 입력후 install packages 입력후 엔터</span><br><span class="line">맥의 경우 : 커맨드 + 쉬프트 + P -&gt; 입력후 install packages 입력후 엔터</span><br></pre></td></tr></table></figure></p><p>직접 경로<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File &gt; Settings &gt; install</span><br></pre></td></tr></table></figure></p><p>github 을 위해 설치해야하는 최소 패키지</p><p>꼭 필요한 것은 아니며, 기본 설정으로도 충분히 처리 가능함.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- git-plus  : 우측 마우스 버튼을 눌러 메뉴 호출시 git 관련 메시지 확인가능.</span><br><span class="line">- git-clone  : github의 내용을 download 받음.</span><br></pre></td></tr></table></figure></p><h2 id="jekyll"><a href="#jekyll" class="headerlink" title="jekyll"></a>jekyll</h2><p>평범한 텍스트 파일을 정적 웹사이트 또는 블로그로 변신!<br>간단한 지킬에 대한 소개 <a href="https://jekyllrb-ko.github.io/" rel="external nofollow noopener noreferrer" target="_blank">사이트</a></p><hr><h2 id="Markdown-Preview-package"><a href="#Markdown-Preview-package" class="headerlink" title="Markdown Preview package"></a>Markdown Preview package</h2><p>This is a <a href="https://atom.io/packages/markdown-preview" rel="external nofollow noopener noreferrer" target="_blank">link</a></p><p>Show the rendered HTML markdown to the right of the current editor using ctrl-shift-m.</p><ul><li>Ctrl-Shift-M<ul><li>현재 편집기의 오른쪽에 렌더링 된 HTML markdown을 표시</li></ul></li></ul><p>atom 이 설치될때 자동으로 같이 설치되어있습니다.<br>atom 이라는 작은 코어에 얼마만큼 여러가지 플로그인(패키지)가 붙어있는지 설명가능한 부분입니다.</p><hr><ul><li>파일명으로 찾아 열기<ul><li>Ctrl+T 및 Ctrl+B를 누르면 나오는 Fuzzy Finder</li></ul></li></ul><hr><p>3일차</p><h1 id="마크다운-Markdown-사용법"><a href="#마크다운-Markdown-사용법" class="headerlink" title="마크다운(Markdown) 사용법"></a>마크다운(Markdown) 사용법</h1><p>마크다운 문법에 대해 간략하게 설명.</p><h2 id="제목-Heading"><a href="#제목-Heading" class="headerlink" title="제목(Heading)"></a>제목(Heading)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">문서를 작성할 때 가장 기본이 되는 제목은 HTML의 &lt;h1&gt;~&lt;h6&gt; 태그와 유사합니다.</span><br><span class="line">#의 개수에 따라 글자의 크기가 달라집니다. #은 &lt;h1&gt;, ###은 &lt;h3&gt; ######은 &lt;h6&gt;</span><br></pre></td></tr></table></figure><h1 id="Heading"><a href="#Heading" class="headerlink" title="Heading"></a>Heading</h1><h3 id="Heading-1"><a href="#Heading-1" class="headerlink" title="Heading"></a>Heading</h3><h6 id="Heading-2"><a href="#Heading-2" class="headerlink" title="Heading"></a>Heading</h6><hr><h2 id="인용-Blockquotes"><a href="#인용-Blockquotes" class="headerlink" title="인용(Blockquotes)"></a>인용(Blockquotes)</h2><p>인용은 &gt;를 넣어서 작성합니다.<br>인용안에 인용은 &gt;&gt; 를 넣어 작성합니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit</span><br><span class="line">&gt;&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit</span><br></pre></td></tr></table></figure></p><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit</p><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit</p></blockquote></blockquote><hr><h1 id="리스트"><a href="#리스트" class="headerlink" title="리스트"></a>리스트</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 또는 -를 사용해서 순서가 없는 리스트를 작성할 수 있습니다.</span><br><span class="line">tab 또는 2칸 띄어쓰기를 통해 중첩된 항목을 작성할 수 있습니다.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* Frontend</span><br><span class="line">  * HTML</span><br><span class="line">  * CSS</span><br><span class="line">  * JavaScript</span><br><span class="line">    * Vue.js</span><br><span class="line"></span><br><span class="line">- Frondend</span><br><span class="line">  - HTML</span><br><span class="line">  - CSS</span><br><span class="line">  - JavaScript</span><br><span class="line">    - Vue.js</span><br></pre></td></tr></table></figure><ul><li>Frontend<ul><li>HTML</li><li>CSS</li><li>JavaScript<ul><li>Vue.js</li></ul></li></ul></li></ul><ul><li>Frondend<ul><li>HTML</li><li>CSS</li><li>JavaScript<ul><li>Vue.js</li></ul></li></ul></li></ul><hr><h2 id="순서가-있는-리스트-Ordered-List"><a href="#순서가-있는-리스트-Ordered-List" class="headerlink" title="순서가 있는 리스트(Ordered List)"></a>순서가 있는 리스트(Ordered List)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1. HTML</span><br><span class="line">2. CSS</span><br><span class="line">3. JavaScript</span><br><span class="line">* * *</span><br><span class="line">1. HTML</span><br><span class="line">1. CSS</span><br><span class="line">1. JavaScript</span><br><span class="line">* * *</span><br><span class="line">1. Frontend</span><br><span class="line">    1. HTML</span><br><span class="line">    2. CSS</span><br><span class="line">    3. JavaScript</span><br><span class="line">        1. Vue.js</span><br><span class="line">2. Backend</span><br></pre></td></tr></table></figure><ol><li>HTML</li><li>CSS</li><li>JavaScript</li></ol><hr><ol><li>HTML</li><li>CSS</li><li>JavaScript</li></ol><hr><ol><li>Frontend<ol><li>HTML</li><li>CSS</li><li>JavaScript<ol><li>Vue.js</li></ol></li></ol></li><li>Backend</li></ol><hr><h2 id="수평선-Horizontal-Rules"><a href="#수평선-Horizontal-Rules" class="headerlink" title="수평선(Horizontal Rules)"></a>수평선(Horizontal Rules)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">문단과 문단 사이를 나눌 때 등 사용되는 수평선은 HTML의 &lt;hr /&gt;과 같이 동작합니다.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">- - -</span><br></pre></td></tr></table></figure><hr><hr><hr><hr><hr><h2 id="강조-Emphasis"><a href="#강조-Emphasis" class="headerlink" title="강조(Emphasis)"></a>강조(Emphasis)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTML의 &lt;em&gt;과 같은 동작을 하는 강조는 *, _가 있고 &lt;strong&gt;은 **와 __를 사용합니다.</span><br><span class="line">취소선은 ~~을 사용합니다.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*강조*한 텍스트  </span><br><span class="line">__강조__한 텍스트  </span><br><span class="line">**강조**한 텍스트  </span><br><span class="line">~~취소~~한 텍스트</span><br></pre></td></tr></table></figure><p><em>강조</em>한 텍스트<br><strong>강조</strong>한 텍스트<br><strong>강조</strong>한 텍스트<br><del>취소</del>한 텍스트</p><h1 id="이미지-삽입-Images"><a href="#이미지-삽입-Images" class="headerlink" title="이미지 삽입(Images)"></a>이미지 삽입(Images)</h1><hr><p>이미지는 역시 HTML의 <img>태그와 동일하게 작동합니다. 대체 택스트를 삽입할 수 있으며, 링크 또는 로컬의 이미지파일을 연결할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![대체 텍스트](/경로/example.jpg)  </span><br><span class="line">![megacat](https://octodex.github.com/images/megacat-2.png)</span><br><span class="line">&lt;img src=&quot;https://octodex.github.com/images/megacat-2.png&quot; width=&quot;200px&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/index-octonaut-4e00f2f8624e8075ff8aa84b51e3a446.svg" alt="대체 텍스트"><br><img src="https://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/index-octonaut-4e00f2f8624e8075ff8aa84b51e3a446.svg" width="200px"></p><h2 id="작업-목록"><a href="#작업-목록" class="headerlink" title="작업 목록"></a>작업 목록</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- [x] 완료 아이템</span><br><span class="line">- [ ] 아직 미완료 아이템</span><br></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox" checked> 완료 아이템</li><li style="list-style: none"><input type="checkbox"> 아직 미완료 아이템</li></ul><h2 id="이모티콘"><a href="#이모티콘" class="headerlink" title="이모티콘"></a>이모티콘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www.emoji-cheat-sheet.com 참조</span><br><span class="line">:+1: :tada: :octocat:</span><br></pre></td></tr></table></figure><p><a href="http://www.emoji-cheat-sheet.com" rel="external nofollow noopener noreferrer" target="_blank">www.emoji-cheat-sheet.com</a> 참조<br>:+1: :tada: :octocat:</p><hr><h2 id="Tables-삽입"><a href="#Tables-삽입" class="headerlink" title="Tables 삽입"></a>Tables 삽입</h2><p><table><tr><td>hellow</td><td>world</td></tr></table><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| test | Test |</span><br><span class="line">| ---- : ------- |</span><br><span class="line">| hellow | world |</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Left-Aligned  | Center Aligned  | Right Aligned |</span><br><span class="line">| :------------ |:---------------:| -----:|</span><br><span class="line">| col 3 is      | some wordy text | $1600 |</span><br><span class="line">| col 2 is      | centered        |   $12 |</span><br><span class="line">| zebra stripes | are neat        |    $1 |</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">Left-Aligned</th><th style="text-align:center">Center Aligned</th><th style="text-align:right">Right Aligned</th></tr></thead><tbody><tr><td style="text-align:left">col 3 is</td><td style="text-align:center">some wordy text</td><td style="text-align:right">$1600</td></tr><tr><td style="text-align:left">col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td style="text-align:left">zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><p>위와같은 기본적인 마크다운 문법을 알고 있으면, 기본적인 기능은 끝났다고 보여집니다.</p><h1 id="atom에서-git사용기"><a href="#atom에서-git사용기" class="headerlink" title="atom에서 git사용기"></a>atom에서 git사용기</h1><hr><h2 id="git-plus설치합니다"><a href="#git-plus설치합니다" class="headerlink" title="git plus설치합니다."></a>git plus설치합니다.</h2><ul><li>atom 프로그램을 실행한다.</li><li>file → settings → install → install packages 에서 ‘git plus’를 검색합니다.</li><li>git plus를 설치합니다.</li><li>사용 방법<ul><li>ctrl+shift+h 를 누르면 git bash처럼 명령어를 칠수 있습니다.<br>(마우스 우측 버튼을 누르고 git 명령어를 사용할 수 있습니다.)</li></ul></li></ul><p>명령어 add or commit를 누르면 오른쪽에 새로운 창이 뜨면서 add시킨 파일에 관해 summary할 수 있는 부분이 나옵니다.<br>summary 작성 후 ctrl+s 하면, 해당 메시지가 자동으로 저장됩니다.<br>github에서 commit시키는 것과 같습니다.<br>명령어 push를 누릅니다.<br>push가 성공적으로 이루어지면 페이지 하단에 어디에 저장이 되었는지 확인 됩니다.</p><h1 id="Jekyll-에-대한-구조-설명"><a href="#Jekyll-에-대한-구조-설명" class="headerlink" title="Jekyll 에 대한 구조 설명"></a>Jekyll 에 대한 구조 설명</h1><p>등장 배경</p><ul><li>웹 사이트의 발전: static -&gt; dynamic</li><li><p>static  </p><ul><li>DB 통신 없이 html, css 등의 정적 파일의 text를 바로 전달.</li><li>단순해서 빠르지만 자체 기능이 부족하고, 콘텐츠 수정이 힘듭니다.</li></ul></li><li><p>dynamic</p><ul><li>DB와 연동하여 댓글, 좋아요 등 다양한 기능이 가능</li><li>콘텐츠 수정, 추가가 용이</li></ul></li><li><p>개인 블로그나 간단한 사이트의 경우 필요로 하는 기능이 많지 않고, 대표적인 추가 기능들(댓글, form, 글 검색 등)이 각각 서비스화되면서(disqus, wufoo, typeform, google 등등) 정적 사이트로 블로그를 만들더라도 원하는 대부분의 기능을 충족할 수 있게 됩니다.</p></li><li>Jekyll 창시자가 GitHub의 창업자이자 전 CEO인 Tom Preston-Werner 라서 GitHub에서 호스팅도 제공하고 GitHub Pages에서도 자주 사용되는 등의 연결고리가 있음<br>(현재는 Parker Moore(GitHub 직원)가 리딩)</li><li>Jekyll은 ruby 언어 기반이지만 엔진을 커스텀해서 사용할 것이 아니라면 루비 문법을 알 필요는 없으며,<br>웹디자인에 관심이 있다면, <a href="http://nomad.works/study/server/jekyll/syntax/" rel="external nofollow noopener noreferrer" target="_blank">기본문법</a> 정도만 알면 무리없이 사용 가능.</li></ul><hr><h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>Jekyll내의 모든 설정은 _config.yml을 통해서 관리합니다.<br>환경설정을 관리한다고 생각하시면 됩니다.<br>선택한 테마에서 데모를 위해 설정되어 있는 내용을 블로그를 위해 별도의 추가 수정을 하시면됩니다.</p><h2 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h2><p>링크를 위한 소셜아이콘의 추가와 간단한 문구가 담긴 Footer를 위해 footer.html를 아래와 같이 수정합니다.</p><hr><p>3일차 마지막 시간에는 미리 가입하여 스크립트를 BLOG에 삽입.</p><ol><li>구글 애널리틱스에 가입합니다<br><a href="https://analytics.google.com/" rel="external nofollow noopener noreferrer" target="_blank">https://analytics.google.com/</a><br>(TIP: 회사에서 쓸 용도라면 회사 개인 메일계정 말고, ‘<a href="mailto:smartstudy@smartstudy.com" rel="external nofollow noopener noreferrer" target="_blank">smartstudy@smartstudy.com</a>’처럼 회사 공식 계정으로 가입하시기 바랍니다. 소유권 이전이 되지 않는다는 설이 있기 때문입니다.)</li></ol><ol start="2"><li>가입하고 새 컨테이너를 만듭니다.<br>설치하면 바로 ‘추적 코드’가 나오는데, 이는 관리 &gt; 추적 정보 &gt; 추적 코드에서도 다시 볼 수 있습니다.<br>이 코드를 사이트 소스코드 바로 위에 붙여넣으시면 됩니다. 추적하고 싶은 모든 페이지에 첨부되어 있어야 합니다.<br>footer 에 등록함.</li></ol><p>4일차</p><h1 id="Why-Google-Analytics"><a href="#Why-Google-Analytics" class="headerlink" title="Why Google Analytics?"></a>Why Google Analytics?</h1><p>이번에 오픈한 우리 쇼핑몰엔 어떤 사람들이 많이 들어올까요. 남자가 많을까요, 여자가 많을까요?<br>예상외로 30대가 많이 들어온다면 마케팅의 방향이 달라지지 않을까요.<br>또 사이트에 들어와 가장 먼저 누르는 곳은 어디일까요, 3페이지에 위치해 있는데 메인에 노출되어 있는 상품보다 잘 팔린다면 그 제품을 어떻게 해야할까요?</p><p>이를 위하여 고객의 행동 패턴과 전자상거래 기록을 수집하는 툴 중 하나가 ‘Google Analytics‘입니다. 사이트 소스코드에 간단히 설치해두면, 구글 애널리틱스 홈페이지에 들어가 구글이 사용자 행태를 분석해 모아둔 데이터를 볼 수 있습니다.</p><h1 id="Google-Analytics란-무엇인가"><a href="#Google-Analytics란-무엇인가" class="headerlink" title="Google Analytics란 무엇인가?"></a>Google Analytics란 무엇인가?</h1><p>GA는 ‘문지기‘입니다. store.pinkfong.com 사이트 코드에 GA 코드 조각을 모두 붙여두면 접속한 사람들이 하는 행태를 모두 기록해 GA 서버에 보냅니다.</p><p>뿐만 아니라 접속한 사람들의 나이, 성별, 그리고 이 페이지에서 평균 몇 분 머물렀는지도 알 수 있습니다.</p><p>또한 여러 가지 조합을 통하여</p><ol><li>모바일 접속자인가 데스크톱 접속자인가?</li><li>신규 방문자인가 재방문자인가?</li><li>이번 달 무슨 상품이 가장 많이 팔렸는가?</li><li>카테고리 목록에서 가장 많이 클릭되는 버튼은?</li><li>페이스북에 올린 링크 중 무엇이 가장 도달률이 높은가?</li><li>몇시에 가장 활발히 접속하는가?</li><li>무슨 광고배너가 가장 인기가 많지?</li><li>구매자는 어떤 결제 스텝에서 가장 이탈률이 높은가?</li></ol><p>등의 무궁무진한 통계들을 알 수 있습니다.</p><p>결국 블로그나 홈페이지를 운영할 때, 실제적으로 얼마나 많은 사람들이 오고, 어떤 페이지를 보고 얼마나 페이지뷰가 있는지, 블로그나 홈페지를 방문하는 사람들을 분석할 수 있는 구글에서 제공하고 있는 분석툴이라고 생각하시면 됩니다.</p><h2 id="애드센스와-애널리틱스-연결-하기"><a href="#애드센스와-애널리틱스-연결-하기" class="headerlink" title="애드센스와 애널리틱스 연결 하기"></a>애드센스와 애널리틱스 연결 하기</h2><p>구글 애드센스(Google Adsense)를 달고 광고를 하면서 블로그를 하는 분들은 꼭 가입해서 분석하는걸 추천합니다.</p><p>애널리틱스 설정에서 애드센스와 연결하려는 사이트를 선택하고, 속성에 있는 애드센스 연결을 클릭합니다.<br>애드센스 서비스를 선택하고, 계속을 클릭합니다.</p><p>어떤 글에서 얼마나 수익이 났는지 알려주는 보고서는 [행동 – 게시자 – 게시자 페이지]를 보면,<br>글 별로 노출 수, 클릭수, 수익, RPM 등을 볼 수 있습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PINPOINT로 원인 분석</title>
      <link href="/2018/06/2018-06-04-PINPOINT/"/>
      <url>/2018/06/2018-06-04-PINPOINT/</url>
      
        <content type="html"><![CDATA[<h3 id="TCP-로-DB-문제-확인하기-3"><a href="#TCP-로-DB-문제-확인하기-3" class="headerlink" title="TCP 로 DB 문제 확인하기 - 3"></a>TCP 로 DB 문제 확인하기 - 3</h3><p><a href="https://github.com/scouter-project/scouter/blob/master/README_kr.md" rel="external nofollow noopener noreferrer" target="_blank">SCOUTER</a> 는 어플리케이션 성능 모니터링 툴로 오픈소스 APM 입니다.<br>해당 현상을 분석하기 위해 저번주에 계속 모니터링 한 경과 최종적으로 3가의 의심스러운 패턴을 찾을 수 있었는데,</p><ol><li>Protocol.read 시에 지연이 발생.</li><li>DB에서 지연이 발생.</li><li>레디스의 데이러를 JSON Mapper 를 통해 객체를 할 때 지연이 발생.</li></ol><p>SCOUTER 에서 지연되는 내역이 다음과 같이 나왔는데, 해당 현상에 대해서는 확신을 할 수없어,<br>또다른 APM 인 네이버 <a href="http://naver.github.io/pinpoint/" rel="external nofollow noopener noreferrer" target="_blank">pinpoint</a>로 분석하고자 했습니다.</p><p>설치하는 방법은 <a href="https://github.com/naver/pinpoint/blob/master/quickstart/README.md" rel="external nofollow noopener noreferrer" target="_blank">QuickStart</a>를 참고했습니다.</p><p>예전에 서버에 바로 올렸다가, 1분마다 8기가의 데이터가 쌓이는 공포를 겪었기 때문에, 반영하는 모든 log4j.xml 의 DEBUG를 ERROR 로 변경하였습니다.<br>혹시 나중에 또 필요할 수 있어 간단하게 설정한 내역을 정리합니다.</p><h2 id="JAVA-설치"><a href="#JAVA-설치" class="headerlink" title="JAVA 설치"></a>JAVA 설치</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line">export JAVA_6_HOME=/usr/lib/jvm/java-1.6.0</span><br><span class="line">export JAVA_7_HOME=/usr/lib/jvm/java-1.7.0</span><br><span class="line">export JAVA_8_HOME=/usr/lib/jvm/java-1.8.0</span><br><span class="line">export JAVA_9_HOME=/usr/lib/jvm/java-1.9.0</span><br></pre></td></tr></table></figure><p>하단에 JAVA_6_HOME 및 추가된 jdk 경로 설정합니다.<br>jdk 가 없을 시 download 하거나 yum install 로 설치합니다. 수정 후 꼭 ssh 재접속해야합니다.<br>실제로 가이드 문서에는 jdk 9 (JAVA_9_HOME) 을 넣으라는 글이 없었는데, 해당 버젼이 없으면, 에러가 나네요.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[INFO] -------------------------------------------------------------</span><br><span class="line">[ERROR] COMPILATION ERROR : </span><br><span class="line">[INFO] -------------------------------------------------------------</span><br><span class="line">[ERROR] javac: invalid target release: 9</span><br><span class="line">Usage: javac &lt;options&gt; &lt;source files&gt;</span><br><span class="line">use -help for a list of possible options</span><br></pre></td></tr></table></figure><p>jdk9 가 없어 도중에 에러가 납니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[DEBUG] Goal:          org.apache.maven.plugins:maven-enforcer-plugin:1.4.1:enforce (enforce-pinpoint-build-requirements)</span><br><span class="line">[DEBUG] Style:         Regular</span><br><span class="line">[DEBUG] Configuration: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;fail default-value=&quot;true&quot;&gt;true&lt;/fail&gt;</span><br><span class="line">  &lt;failFast default-value=&quot;false&quot;&gt;$&#123;enforcer.failFast&#125;&lt;/failFast&gt;</span><br><span class="line">  &lt;ignoreCache default-value=&quot;false&quot;&gt;$&#123;enforcer.ignoreCache&#125;&lt;/ignoreCache&gt;</span><br><span class="line">  &lt;mojoExecution default-value=&quot;$&#123;mojoExecution&#125;&quot;/&gt;</span><br><span class="line">  &lt;project default-value=&quot;$&#123;project&#125;&quot;/&gt;</span><br><span class="line">  &lt;rules&gt;</span><br><span class="line">    &lt;requireMavenVersion&gt;</span><br><span class="line">      &lt;version&gt;3.2&lt;/version&gt;</span><br><span class="line">    &lt;/requireMavenVersion&gt;</span><br><span class="line">    &lt;requireJavaVersion&gt;</span><br><span class="line">      &lt;version&gt;1.7&lt;/version&gt;</span><br><span class="line">    &lt;/requireJavaVersion&gt;</span><br><span class="line">    &lt;requireEnvironmentVariable&gt;</span><br><span class="line">      &lt;variableName&gt;JAVA_6_HOME&lt;/variableName&gt;</span><br><span class="line">    &lt;/requireEnvironmentVariable&gt;</span><br><span class="line">    &lt;requireEnvironmentVariable&gt;</span><br><span class="line">      &lt;variableName&gt;JAVA_7_HOME&lt;/variableName&gt;</span><br><span class="line">    &lt;/requireEnvironmentVariable&gt;</span><br><span class="line">    &lt;requireEnvironmentVariable&gt;</span><br><span class="line">      &lt;variableName&gt;JAVA_8_HOME&lt;/variableName&gt;</span><br><span class="line">    &lt;/requireEnvironmentVariable&gt;</span><br><span class="line">    &lt;requireEnvironmentVariable&gt;</span><br><span class="line">      &lt;variableName&gt;JAVA_9_HOME&lt;/variableName&gt;</span><br><span class="line">    &lt;/requireEnvironmentVariable&gt;</span><br><span class="line">  &lt;/rules&gt;</span><br><span class="line">  &lt;session default-value=&quot;$&#123;session&#125;&quot;/&gt;</span><br><span class="line">  &lt;skip default-value=&quot;false&quot;&gt;$&#123;enforcer.skip&#125;&lt;/skip&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">[DEBUG] -----------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>JAVA_9_HOME 가 필수적으로 필요했는데, 해당 내용이 없어서, pom.xml 을 변경하려다가 그냥 jdk 9 를 설치해버렸습니다.</p><h2 id="MAVEN-설치"><a href="#MAVEN-설치" class="headerlink" title="MAVEN 설치"></a>MAVEN 설치</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://maven.apache.org/download.cgi 에서 최신 maven 다운로드</span><br><span class="line">설치 경로에서 tar xvf apache-maven-3.5.0-bin.tar.gz</span><br></pre></td></tr></table></figure><p>MAVEN 홈페이지에 가서, maven 을 설치합니다. 저는 그냥 최신 버젼 설치했습니다.<br>maven 로 yum install 로 설정하려고 했는데 기존 설치되어있는 거랑 뭔가 안맞아서, 강제로 환경설정을 셋팅했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># vi /etc/profile.d/maven.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line">MAVEN_HOME=/설치경로/apache-maven-3.5.0 /usr/local/maven/bin/mvn</span><br><span class="line">PATH=$MAVEN_HOME/bin:$PATH</span><br><span class="line">export PATH MAVEN_HOME</span><br><span class="line">export CLASSPATH=.</span><br></pre></td></tr></table></figure><p>쉘스크립트 작성후, 해당 쉘스크립트에 실행권한을 부여했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># chmod +x /etc/profile.d/maven.sh</span><br><span class="line"># source /etc/profile.d/maven.sh</span><br></pre></td></tr></table></figure><p>설치여부 확인<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost apache-maven-3.5.3]# mvn -version</span><br><span class="line">Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-25T04:49:05+09:00)</span><br><span class="line">Maven home: /home/pinpoint/apache-maven-3.5.3</span><br><span class="line">Java version: 1.8.0_161, vendor: Oracle Corporation</span><br><span class="line">Java home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.x86_64/jre</span><br><span class="line">Default locale: ko_KR, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;3.10.0-693.17.1.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure></p><h2 id="GIT-설치"><a href="#GIT-설치" class="headerlink" title="GIT 설치"></a>GIT 설치</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@localhost pinpoint]# git --version</span><br><span class="line">git version 1.8.3.1</span><br><span class="line">[root@localhost pinpoint]# java -version</span><br><span class="line">openjdk version &quot;1.8.0_161&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_161-b14)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.161-b14, mixed mode)</span><br><span class="line">[root@localhost pinpoint]#</span><br></pre></td></tr></table></figure><p>git 은 그냥 귀찮아서 yum install 로 설치했습니다.</p><h2 id="설치-완료-후"><a href="#설치-완료-후" class="headerlink" title="설치 완료 후 "></a>설치 완료 후 </h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mvnw install -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure><p>해당 파일을 설치합니다.</p><p>저는 서버에 설치된 파일과, 클라이언트 서버가 틀리므로, quickstart 폴더의 agent 폴더를 다운받아, 클라이언트 서버에 해당 파일을 올립니다.<br>물론 log4j.xml 의 모든 내용은 DEBUG -&gt; ERROR, INFO -&gt; ERROR 로 바꿉니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./quickstart/lib/log4j.xml</span><br></pre></td></tr></table></figure><p>해당 파일의 내용을 수정합니다.<br>[QuickStart]에서 알려준 대로, 순서대로 실행합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">quickstart/bin/start-hbase.sh</span><br><span class="line">quickstart/bin/init-hbase.sh</span><br><span class="line">quickstart/bin/start-collector.sh</span><br><span class="line">quickstart/bin/start-web.sh</span><br></pre></td></tr></table></figure><p><a href="http://host:28080" rel="external nofollow noopener noreferrer" target="_blank">http://host:28080</a> 로 해당 web 페이지가 정상적으로 뜨는지 확인합니다.</p><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>scouter 의 hook_method_patterns 로 분석하였던 내용과 비슷한 내용이 pinpoint 에도 나왔습니다.</p><blockquote><p>레디스의 Json 형태의 String을 Json 라이브러리를 통해 객체화 하는 대서 200 (ms) 의 지연이 간혈적으로 발생. </p></blockquote><table><thead><tr><th style="text-align:left">Method</th><th style="text-align:center">Gap(ms)</th><th style="text-align:right">Class</th><th style="text-align:right">Api</th></tr></thead><tbody><tr><td style="text-align:left">toJSON(Object object, JsonConfig jsonConfig)</td><td style="text-align:center">211</td><td style="text-align:right">JSONSerializer</td><td style="text-align:right">JSON-LIB</td></tr></tbody></table><hr><blockquote><p>mysql 의 excute 에서 미약한 지연 발생 </p></blockquote><table><thead><tr><th style="text-align:left">Method</th><th style="text-align:center">Gap(ms)</th><th style="text-align:right">Class</th><th style="text-align:right">Api</th></tr></thead><tbody><tr><td style="text-align:left">execute()</td><td style="text-align:center">139</td><td style="text-align:right">PreparedStatement</td><td style="text-align:right">MYSQL(xxxx)</td></tr></tbody></table><hr><blockquote><p>레디스에서 해당 데이터를 읽을 때 지연이 발생</p></blockquote><table><thead><tr><th style="text-align:left">Method</th><th style="text-align:center">Argument</th><th style="text-align:right">Gap(ms)</th><th style="text-align:right">Class</th><th style="text-align:right">Api</th></tr></thead><tbody><tr><td style="text-align:left">exists(String key)</td><td style="text-align:center">write: 0ms, read: 587ms</td><td style="text-align:right">585</td><td style="text-align:right">Jedis</td><td style="text-align:right">REDIS</td></tr></tbody></table><hr><p>위 3가지 항목으로 우선적으로 redis 서버를 증설 및 분리했습니다.<br>분리됨에 따라 레디스에서 해당 데이터를 읽을 때 지연이 발생하는 현상에 대한 해결은 어느정도 된 것으로 파악됩니다.<br>이제 Redis 에 해당 데이터를 write 할떄, Json 이 아니라 Object를 바이너리화하여 바로 넣고 사용하는 형태로 변경하는 작업을 진행하고자 합니다.</p><p>변경할 작업은 다음과 같습니다.</p><ol><li>JSONObject를 그냥 Object 로 바이너리로 레디스 저장.</li><li>kakao 에 맞는 성능의 별도의 JSON-Lib 적용 <a href="http://www.yunsobi.com/blog/646" rel="external nofollow noopener noreferrer" target="_blank">참고 주소</a></li><li>레디스 및 ehcache 시간 및 기능 변경</li></ol><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://javaworld.co.kr/81" rel="external nofollow noopener noreferrer" target="_blank">Pinpoint QuickStart</a></li><li><a href="http://dev2.prompt.co.kr/33" rel="external nofollow noopener noreferrer" target="_blank">Naver Pinpoint 소개 및 설치</a></li><li><a href="http://jamcode.tistory.com/31" rel="external nofollow noopener noreferrer" target="_blank">Pinpoint agent</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PINPOINT quickstart 설치시 유의했던 점</title>
      <link href="/2018/06/2018-06-05-PINPOINT_INSTALL/"/>
      <url>/2018/06/2018-06-05-PINPOINT_INSTALL/</url>
      
        <content type="html"><![CDATA[<h2 id="외부-인터넷이-막혀있는-환경"><a href="#외부-인터넷이-막혀있는-환경" class="headerlink" title="외부 인터넷이 막혀있는 환경"></a>외부 인터넷이 막혀있는 환경</h2><p>해당 서버에는 내부 IP는 허용하나 외부 IP를 차단한 경우로,<br>quickstart의 s<br>tart-collector,<br>start-web,<br>start-testapp 스크립트 모두 mvnw를 통해 실행되도록 되어 있어,<br>mvn 실행하도록 수정해서 처리해합니다.</p><p>start-collector.sh 예)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pid=`nohup $&#123;bin&#125;/../../mvnw -f $COLLECTOR_DIR/pom.xml clean package tomcat7:run -D$IDENTIFIER -Dmaven.pinpoint.version=$version &gt; $LOGS_DIR/$LOG_FILE 2&gt;&amp;1 &amp; echo $!`</span><br><span class="line">-&gt;</span><br><span class="line">pid=`nohup mvn -f $COLLECTOR_DIR/pom.xml clean package tomcat7:run -D$IDENTIFIER -Dmaven.pinpoint.version=$version &gt; $LOGS_DIR/$LOG_FILE 2&gt;&amp;1 &amp; echo $!`</span><br></pre></td></tr></table></figure></p><h2 id="log4j-LOG-수정"><a href="#log4j-LOG-수정" class="headerlink" title="log4j LOG 수정"></a>log4j LOG 수정</h2><p>quickstart 시 생성되는 모든 log4j.xml 은 debug 옵션으로 보여지게 되어있습니다.<br>그걸 그대로 agent 및 서버에서 동작시키면, 1분에 8기가의 데이터가 쌓이는 아주 놀라운 경험을 할수 있었습니다.<br>해당 옵션을 자신의 상황에 맞게 수정하시면 됩니다.<br>저는 단순한 지연현상을 찾기 위해서, DEBUG &gt; ERROR, INFO &gt; ERROR 로 변경하였습니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./agent/lib/log4j.xml</span><br><span class="line">./web/src/main/resources/log4j.xml</span><br></pre></td></tr></table></figure></p><p>형태의 모든 xml 을 수정 했습니다.<br>혹시 몰라 logs 폴더 또한 /data/ 폴더로 심볼릭 링크를 걸었습니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./quickstart/hbase/hbase/logs</span><br><span class="line">./quickstart/logs</span><br></pre></td></tr></table></figure></p><p>추가적으로 필요하면 hbase 에 대한 data 용량도 확인하는 것이 좋을 거 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./quickstart/data</span><br></pre></td></tr></table></figure><p>테스트 시 특정 서버의 경우 하루에 5G까지 쌓이는 경우를 봐서, 초기화 관련된 부분도 고민해봐야할 거 같습니다.<br>우선은 scouter를 대체하는 용도는 아니었기 때문에, 여기까지만 정의했습니다.  </p><h2 id="jdk-버젼-추가"><a href="#jdk-버젼-추가" class="headerlink" title="jdk 버젼 추가"></a>jdk 버젼 추가</h2><p>하단에 JAVA_6_HOME 및 추가된 jdk 경로 설정합니다.<br>jdk 가 없을 시 download 하거나 yum install 로 설치합니다.<br>수정 후 꼭 ssh 재접속해야합니다.<br>실제로 가이드 문서에는 jdk 9 (JAVA_9_HOME) 을 넣으라는 글이 없었는데, 해당 버젼이 없으면, 에러가 납니다.  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line">export JAVA_6_HOME=/usr/lib/jvm/java-1.6.0</span><br><span class="line">export JAVA_7_HOME=/usr/lib/jvm/java-1.7.0</span><br><span class="line">export JAVA_8_HOME=/usr/lib/jvm/java-1.8.0</span><br><span class="line">export JAVA_9_HOME=/usr/lib/jvm/java-1.9.0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SCOUTER 로 원인 분석</title>
      <link href="/2018/05/2018-05-28-TCPREDIS/"/>
      <url>/2018/05/2018-05-28-TCPREDIS/</url>
      
        <content type="html"><![CDATA[<h3 id="TCP-로-DB-문제-확인하기-2"><a href="#TCP-로-DB-문제-확인하기-2" class="headerlink" title="TCP 로 DB 문제 확인하기 - 2"></a>TCP 로 DB 문제 확인하기 - 2</h3><p>서버가 튀는 순간 SCOUTER 를 사용하여, 해당 클래스의 위치를 찾습니다.</p><p><a href="https://github.com/scouter-project/scouter/blob/master/scouter.document/use-case/Method-Profiling_kr.md" rel="external nofollow noopener noreferrer" target="_blank">hook_method_patterns</a><br>를 참고하여 찾습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hook_method_patterns=net.sf.ehcache.*.*,redis.clients.jedis.*.*</span><br></pre></td></tr></table></figure><p>redis와 ehcache 문제로 접근하고자 해당 클래스와 그 클래스의 모든 클래스를 찾도록 했습니다.<br>위와같은 명령을 날렸을 때 다음과 같은 메시지가 출력되었습니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    -    [000227] 20:42:33.042        0      0  JedisCluster#exists() [293ms] -- redis.clients.jedis.JedisCluster.exists(Ljava/lang/String;)Ljava/lang/Boolean;</span><br><span class="line">[000227] [000228] 20:42:33.042        0      0   JedisClusterCommand#run() [293ms] -- redis.clients.jedis.JedisClusterCommand.run(Ljava/lang/String;)Ljava/lang/Object;</span><br><span class="line">[000228] [000229] 20:42:33.042        0      0    JedisFactory#activateObject() [0ms] -- redis.clients.jedis.JedisFactory.activateObject(Lorg/apache/commons/pool2/PooledObject;)V</span><br><span class="line">[000228] [000230] 20:42:33.042        0      0    JedisCluster$4#execute() [293ms] -- redis.clients.jedis.JedisCluster$4.execute(Lredis/clients/jedis/Jedis;)Ljava/lang/Object;</span><br><span class="line">[000230] [000231] 20:42:33.042        0      0     JedisCluster$4#execute() [293ms] -- redis.clients.jedis.JedisCluster$4.execute(Lredis/clients/jedis/Jedis;)Ljava/lang/Boolean;</span><br><span class="line">[000231] [000232] 20:42:33.042        0      0      Jedis#exists() [293ms] -- redis.clients.jedis.Jedis.exists(Ljava/lang/String;)Ljava/lang/Boolean;</span><br><span class="line">[000232] [000233] 20:42:33.042        0      0       BinaryClient#isInMulti() [0ms] -- redis.clients.jedis.BinaryClient.isInMulti()Z</span><br><span class="line">[000232] [000234] 20:42:33.042        0      0       Client#exists() [0ms] -- redis.clients.jedis.Client.exists(Ljava/lang/String;)V</span><br><span class="line">[000234] [000235] 20:42:33.042        0      0        BinaryClient#exists() [0ms] -- redis.clients.jedis.BinaryClient.exists([[B)V</span><br><span class="line">[000235] [000236] 20:42:33.042        0      0         BinaryClient#connect() [0ms] -- redis.clients.jedis.BinaryClient.connect()V</span><br><span class="line">[000236] [000237] 20:42:33.042        0      0          Connection#isConnected() [0ms] -- redis.clients.jedis.Connection.isConnected()Z</span><br><span class="line">[000235] [000238] 20:42:33.042        0      0         Protocol#sendCommand() [0ms] -- redis.clients.jedis.Protocol.sendCommand(Lredis/clients/util/RedisOutputStream;Lredis/clients/jedis/Protocol$Command;[[B)V</span><br><span class="line">[000232] [000239] 20:42:33.043        1      0       Protocol#read() [292ms] -- redis.clients.jedis.Protocol.read(Lredis/clients/util/RedisInputStream;)Ljava/lang/Object;</span><br><span class="line">[000228] [000240] 20:42:33.335      292      0    Jedis#close() [0ms] -- redis.clients.jedis.Jedis.close()V</span><br><span class="line">~~~~~~~~~~~~~~~~~~ 중략</span><br><span class="line">    -    [000253] 20:42:33.568      232      0  Cache#put() [0ms] -- net.sf.ehcache.Cache.put(Lnet/sf/ehcache/Element;)V</span><br></pre></td></tr></table></figure></p><p>ehcache의 경우 T-GAP이 발생했으나, 실질적인 ehcahe 는 0ms 이므로, 그 앞단의 뭔가가 지연이 된 것으로 보이며,<br>우선은 바로 나온 redis 에 대해 확인하고자 했습니다.<br>결국 ehcache 보다 jedis에 지연이 되는 건이 많은 것을 확인하고, 해당 내용을 조금더 상세하게 확인하고자 호출을 변경하였습니다.<br>RedisInputStream 의 read 를 사용하는 부분을 보기 위해 Java의 io 쪽까지 포함한 hook_method를 셋팅했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hook_method_patterns=java.io.InputStream.*,redis.clients.util.RedisInputStream.*,redis.clients.util.RedisOutputStream.*,java.io.OutputStream.*</span><br></pre></td></tr></table></figure><p>해당 메소드를 체크했을 때 결과적으로 다음과 같은 지연이 발생했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-    [000017] 11:32:33.820        0      0  RedisInputStream#readByte() [220ms] -- redis.clients.util.RedisInputStream.readByte()B</span><br><span class="line">-    [000018] 11:32:34.040      220      0  RedisInputStream#readLongCrLf() [0ms] -- redis.clients.util.RedisInputStream.readLongCrLf()J</span><br></pre></td></tr></table></figure><p>혹시 몰라 java.io.InputStream.* 를 적용했으나 상속받은 RedisInputStream Method 만 scouter xLog에 나왔습니다.<br>RedisOutputStream 은 빠르나, read 발생할때 지연되는 것을 확인할 수 있었습니다.</p><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>불필요한 레디스 삭제 및, 클러스터 서버 추가, 레디스 사용을 최소화할 방안 고민으로 결론이 났습니다.<br>실제로, 레디스는 대부분을 GET, SET 을 json 형태로 저장하는 용도로만 사용하고 있으며,<br>해당 HGET Key field 는 (Time complexity: O(1)) 로 복잡도 자체가 1:1 인데, read 하는데 지연이 발생하는 부분은 확인이 필요하나,<br>실서버에서의 이슈를 계속 확인하기 위해 내버려둘 수 없어, 언발의 오줌누기 스킬을 써야할 거 같습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TCP 로 원인 분석</title>
      <link href="/2018/05/2018-05-28-TCPPARAMETER/"/>
      <url>/2018/05/2018-05-28-TCPPARAMETER/</url>
      
        <content type="html"><![CDATA[<h3 id="TCP-로-DB-문제-확인하기-1"><a href="#TCP-로-DB-문제-확인하기-1" class="headerlink" title="TCP 로 DB 문제 확인하기 - 1"></a>TCP 로 DB 문제 확인하기 - 1</h3><p>서버가 튀는 순간 DB의 ESTABLISHED 상태를 점검하였다.</p><h2 id="사용한-명령어"><a href="#사용한-명령어" class="headerlink" title="사용한 명령어"></a>사용한 명령어</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[dream-WAS-03:root]/root&gt;#netstat -tonp | grep &apos;.250:3306&apos;</span><br></pre></td></tr></table></figure><p>db는 MariaDB 를 사용하고 있고, 현재 확인하는 것은 마스터 서버의 insert 구문으로 인한  TCP  ESTABLISHED 상태였습니다.<br>치솟기(뒤기) 전에는 CLOSE_WAIT 가 24~27 정도를 유지하고 있다가, 튀기 바로 직전에 0~1로 변경됩니다.<br>치솟는 순간 250번 DB의 커넥션이 전부 ESTABLISHED 상태로 변경되는 것까지 눈으로 확인했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tcp      196      0 xx.xxx.x.x:54330            192.168.2.250:3306          ESTABLISHED 22388/java          keepalive (6587.96/0/0)</span><br><span class="line">tcp        7      0 xx.xxx.x.x:38082            192.168.2.250:3306          ESTABLISHED 22388/java          keepalive (5745.34/0/0)</span><br><span class="line">tcp        0      0 xx.xxx.x.x:50672            192.168.2.250:3306          ESTABLISHED 22388/java          keepalive (7039.22/0/0)</span><br><span class="line">tcp        0      0 xx.xxx.x.x:50670            192.168.2.250:3306          ESTABLISHED 22388/java          keepalive (7039.17/0/0)</span><br><span class="line">tcp        0      0 xx.xxx.x.x:50642            192.168.2.250:3306          ESTABLISHED 22388/java          keepalive (7038.88/0/0)</span><br><span class="line">tcp        0      0 xx.xxx.x.x:51210            192.168.2.250:3306          ESTABLISHED 22388/java          keepalive (7043.51/0/0)</span><br><span class="line">tcp        0      0 xx.xxx.x.x:50488            192.168.2.250:3306          ESTABLISHED 22388/java          keepalive (7037.79/0/0)</span><br><span class="line">tcp        0     57 xx.xxx.x.x:38166            192.168.2.250:3306          ESTABLISHED 22388/java          on (0.19/0/0)</span><br><span class="line">tcp        0      0 xx.xxx.x.x:50688            192.168.2.250:3306          ESTABLISHED 22388/java          keepalive (7039.35/0/0)</span><br><span class="line">tcp        0     11 xx.xxx.x.x:57636            192.168.2.250:3306          ESTABLISHED 20882/java          on (0.20/0/0)</span><br><span class="line">tcp        0    667 xx.xxx.x.x:56624            192.168.2.250:3306          ESTABLISHED 20882/java          on (0.19/0/0)</span><br><span class="line">~~~~~ 중략 ~~~~~~~~~~</span><br></pre></td></tr></table></figure><p>처음에는 ESTABLISHED 상태가 커넥션 풀 갯수만큼 차면서 당연히 db가 밀리거나 lock 이 걸릴 것으로 판단했으나,<br>실질적인 DBA는 db가 안정적이라고 하여, 혹시 네트워크 커넥션에 관련된 문제인지 확인하고자 하였습니다.</p><p>현재 DB는 3분마다 자동으로 커넥션이 끊도록 셋팅되어있다고 하였습니다.</p><h2 id="사용한-명령어-1"><a href="#사용한-명령어-1" class="headerlink" title="사용한 명령어"></a>사용한 명령어</h2><p>해당 명령은 250 마스터 서버의 3306 포트를 1초 간격으로 숫자를 카운트 하는 명령어를 사용하여,<br>로그를 분석하고자 하였습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[dream-WAS-03:root]/root&gt;#while true; do date; netstat -an | grep &apos;.250:3306&apos; | grep ESTABLISHED | wc -l; sleep 1; done</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">2018. 05. 28. (월) 16:15:39 KST</span><br><span class="line">88</span><br><span class="line">2018. 05. 28. (월) 16:15:49 KST</span><br><span class="line">99</span><br><span class="line">2018. 05. 28. (월) 16:16:02 KST</span><br><span class="line">88</span><br><span class="line">2018. 05. 28. (월) 16:16:13 KST</span><br><span class="line">88</span><br><span class="line">2018. 05. 28. (월) 16:16:22 KST</span><br><span class="line">99</span><br><span class="line">2018. 05. 28. (월) 16:16:34 KST</span><br><span class="line">97</span><br><span class="line">2018. 05. 28. (월) 16:16:45 KST</span><br><span class="line">89</span><br><span class="line">~~~~~ 중략 ~~~~~~~~~~</span><br></pre></td></tr></table></figure><p>실제 요청콜에 의해 99를 치다가, 88로 내려갔다 다시 치는 현상이 반복되었습니다.</p><p>실제 server.xml 에서, minimumIdle=”100”, maximumPoolSize=”100” 으로 되어있으며, 해당 셋팅을 한 이유는,<br>minmunIdle 와 maximumPoolSize의 수를 같게 하여, 항상 커넥션을 유지하게 하기 위한 설정으로 알고 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;Resource name=&quot;dreamdb&quot; auth=&quot;Container&quot;</span><br><span class="line">     factory=&quot;com.zaxxer.hikari.HikariJNDIFactory&quot;</span><br><span class="line">     type=&quot;javax.sql.DataSource&quot;</span><br><span class="line">     minimumIdle=&quot;50&quot;</span><br><span class="line">     maximumPoolSize=&quot;50&quot;</span><br><span class="line">     maxLifetime=&quot;3600000&quot;</span><br><span class="line">     connectionTimeout=&quot;3000&quot;</span><br><span class="line">     dataSourceClassName=&quot;com.mysql.jdbc.jdbc2.optional.MysqlDataSource&quot;</span><br><span class="line">     dataSource.cachePrepStmts=&quot;true&quot;</span><br><span class="line">     dataSource.prepStmtCacheSize=&quot;250&quot;</span><br><span class="line">     dataSource.prepStmtCacheSqlLimit=&quot;2048&quot;</span><br><span class="line">     registerMbeans=&quot;true&quot;</span><br><span class="line">     poolName=&quot;dreamdb&quot;</span><br><span class="line">     dataSource.logger=&quot;com.mysql.jdbc.log.StandardLogger&quot;</span><br><span class="line">     dataSource.logSlowQueries=&quot;false&quot;</span><br><span class="line">     dataSource.dumpQueriesOnException=&quot;false&quot;</span><br><span class="line">     dataSource.user=&quot;xxxx&quot;</span><br><span class="line">     dataSource.password=&quot;xxxx&quot;</span><br><span class="line">     dataSource.url=&quot;jdbc:mysql://mpstdbm1:3306/xxxxx?autoReconnect=true&quot;</span><br><span class="line">     validationQuery=&quot;SELECT 1&quot;</span><br><span class="line">     validationInterval=&quot;240000&quot;</span><br><span class="line">     testWhileIdle=&quot;true&quot; /&gt;</span><br></pre></td></tr></table></figure><p>해당 설정값으론 SELECT 1을 계속 연결하여, 커넥션을 유지할 것으로 판단하였으나,<br>실제로는 3분간격으로 CLOSE WAIT 가 발생하는 것으로 보입니다.</p><h2 id="원인은"><a href="#원인은" class="headerlink" title="원인은?"></a>원인은?</h2><p>DB 쪽에서 강제적으로 3분 간격으로 커넥션을 끊는다고 합니다.</p><h2 id="결론…"><a href="#결론…" class="headerlink" title="결론…"></a>결론…</h2><p>DB 쪽 이슈라고만 하기에는,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">while true; do date; netstat -an | grep &apos;.250:3306&apos; | grep ESTABLISHED | wc -l; sleep 1; done</span><br></pre></td></tr></table></figure></p><p>해당 명령어를 호출할 때 sleep 을 1초에 걸렸음에도 12~14초가 걸리도록 서버에 지연이 있는 상태였으므로,<br>전반적인 다른 부분을 파악해야하는 걸로 결론이 났습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://meetup.toast.com/posts/53" rel="external nofollow noopener noreferrer" target="_blank">리눅스 서버의 TCP 네트워크 성능을 결정짓는 커널 파라미터 이야기 - 1편</a></li><li><a href="http://meetup.toast.com/posts/54" rel="external nofollow noopener noreferrer" target="_blank">리눅스 서버의 TCP 네트워크 성능을 결정짓는 커널 파라미터 이야기 - 2편</a></li><li><a href="http://meetup.toast.com/posts/55" rel="external nofollow noopener noreferrer" target="_blank">리눅스 서버의 TCP 네트워크 성능을 결정짓는 커널 파라미터 이야기 - 3편</a></li></ul><p>문제를 분석하는데 많은 도움을 받았습니다.</p><p>[리눅스 서버의 TCP 네트워크 성능을 결정짓는 커널 파라미터 이야기 - 1편]을 통해 위의 설정으로 실제 tcp 메모리가 얼마만큼을 사용하는지 확인해봤습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[dream-WAS-03:root]/root&gt;#sysctl net.ipv4.tcp_mem</span><br><span class="line">net.ipv4.tcp_mem = 306729640897286134592</span><br></pre></td></tr></table></figure><p>min / pressure / max 값을 지정할 수 있다고 하는데, 현재 우리 서버의 메모리는 32기가로 참고한 내용에 별 문제 없음을 확인할 수 있었습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[dream-WAS-03:root]/root&gt;#sysctl fs.file-nr</span><br><span class="line">fs.file-nr = 598403251359</span><br></pre></td></tr></table></figure><p>세 값은 각각 현재 열려 있는 파일의 수, 현재 열려 있으나 사용되지 않는 파일의 수, 열 수 있는 파일의 최대 개수를 뜻합니다.<br>물론 시스템 전체에 대한 수치입니다. 라고 [리눅스 서버의 TCP 네트워크 성능을 결정짓는 커널 파라미터 이야기 - 2편]을 통해 알 수 있었습니다.</p><p>이것도 문제가 없습니다. 예전에 이미 Too many open files 에러로 인해 설정을 변경했던 겁니다!</p><p>[리눅스 서버의 TCP 네트워크 성능을 결정짓는 커널 파라미터 이야기 - 3편]에서 볼때,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[dream-WAS-03:root]/root&gt;#sysctl net.ipv4.tcp_max_tw_buckets</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 262144</span><br></pre></td></tr></table></figure></p><p>TIME_WAIT 상태의 소켓은 위 설정된 값 보다 많아질 수 없다고 합니다.<br>이미 이 설정값 만큼의 TIME_WAIT 상태의 소켓이 있다면, TIME_WAIT 상태로 전이되어야 할 소켓은 더이상 대기하지 않고 파괴(destroy)되어 버린다고 하네요.<br>이것도 문제가 없을 같습니다.  </p><p>다음은 레디스에 대해 분석합니다.</p><hr><h1 id="참조-1"><a href="#참조-1" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://docs.likejazz.com/close-wait/" rel="external nofollow noopener noreferrer" target="_blank">CLOSE_WAIT 문제 해결</a></li><li><a href="http://docs.likejazz.com/time-wait/" rel="external nofollow noopener noreferrer" target="_blank">TIME_WAIT 상태란 무엇인가</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>contains 을 쓸 것인가? indexOf 를 쓸 것인가?</title>
      <link href="/2018/05/2018-05-18-CONTAININDEX/"/>
      <url>/2018/05/2018-05-18-CONTAININDEX/</url>
      
        <content type="html"><![CDATA[<p>IntelliJ 에서 자주 애용하는 (indexOf(s) &gt; -1) 을 contains(s) 로 바꾸라는 가이드(ctrl+f1)를 준다.<br>가이드를 주면서 보여주는 메시지는 다음과 같다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Reports any String.indexOf() expressions which can be replaced with a call to the String.contains() method available in Java 5 and newer.</span><br><span class="line">This inspection only reports if the project or module is configured to use a language level of 5.0 or higher.</span><br></pre></td></tr></table></figure><h2 id="고찰"><a href="#고찰" class="headerlink" title="고찰"></a>고찰</h2><p>과연 String.indexOf 와 contains 의 속도는 어떻게 될지,<br>궁금하여, 실제 적용된 소스를 별도의 Test Class 로 분리하여 확인해보았다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String text = &quot;,힙업,&#123;중략&#125;,탱키니,비치웨어,&quot;; // 대략 2000단어의 하나의 문장</span><br><span class="line">long startTime = System.currentTimeMillis(); // 시작시간</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; 10000000; i++) &#123;</span><br><span class="line">if(text.contains(&quot;,크리비아,&quot;)) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;완료 : &quot; + (System.currentTimeMillis() - startTime) / 1000.000);</span><br></pre></td></tr></table></figure><p>성인 keyword 를 체크하는 로직인데 별도의 property 로 관리하는 로직을 테스트를 위해 하드코딩으로 호출하도록 해봤다.<br>indexOf로 테스트했을 때 1억건을 돌리는 데, 평균적으로 0.020~0.025 초가 발생하였다.</p><p>contains로 테스트 했을 때는 평균적으로 0.030~0.035 초가 발생하였다.</p><h2 id="원인은"><a href="#원인은" class="headerlink" title="원인은?"></a>원인은?</h2><p>실제 contains 을 decomplie 해보면, 다음과 같은 소스가 보인다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public boolean contains(CharSequence var1) &#123;</span><br><span class="line">return this.indexOf(var1.toString()) &gt; -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>결국 contains 은 indexOf를 예쁘게 포장한 method 라는 것…..</p><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Using indexOf() to test for the presence of an object in a list can be cumbersome. Using the contains() method leads to clearer code.</span><br></pre></td></tr></table></figure><p><a href="https://blog.jetbrains.com/idea/2007/04/intellij-idea-7-milestone-1-better-code-inspections-intention-actions-and-more/" rel="external nofollow noopener noreferrer" target="_blank">참고주소</a> 를 통해 확인해보니, 실제론 소스를 읽기 편하게 하는 측면을 가진 java 5 이상에서만 발생하는 suggesion 이라고 한다.</p><p>가독성을 높일 것인지, 속도를 높일 것인지에 대해 고민해봐야겠다. 물론 해당 테스트는 local 에서 확인한 것으로, 실제 서버에서는 더 빠를 것이다..</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AutoResultMapAutoResultMap 에러</title>
      <link href="/2018/05/2018-05-17-AutoResultMap/"/>
      <url>/2018/05/2018-05-17-AutoResultMap/</url>
      
        <content type="html"><![CDATA[<!--# Perhaps JAVA_HOME does not point to the JDK 오류--><h2 id="문제-발생"><a href="#문제-발생" class="headerlink" title="문제 발생"></a>문제 발생</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[ERROR][2018/05/17 10:35:21] c.o.d.c.d.RTBDao$9 [217] selMobileAdInfo param ############# &gt; &#123;test=0, platformType=mobile, adGubun=xx, userId=xxx&#125; </span><br><span class="line">com.ibatis.common.jdbc.exception.NestedSQLException:   </span><br><span class="line">--- The error occurred in xxx.xml.  </span><br><span class="line">--- The error occurred while applying a result map.  </span><br><span class="line">--- Check the rtb.selMobileAdInfo-AutoResultMap.  </span><br><span class="line">--- Check the result mapping for the &apos;imageInfo&apos; property.  </span><br><span class="line">--- Cause: java.sql.SQLException: Column &apos;imageInfo&apos; not found.</span><br><span class="line">at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.executeQueryWithCallback(MappedStatement.java:208) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.executeQueryForList(MappedStatement.java:144) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.impl.SqlMapExecutorDelegate.queryForList(SqlMapExecutorDelegate.java:571) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.impl.SqlMapExecutorDelegate.queryForList(SqlMapExecutorDelegate.java:544) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl.queryForList(SqlMapSessionImpl.java:118) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.impl.SqlMapClientImpl.queryForList(SqlMapClientImpl.java:94) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">---중략---</span><br><span class="line">at java.lang.Thread.run(Thread.java:745) [na:1.8.0_112]</span><br><span class="line">Caused by: java.sql.SQLException: Column &apos;imageInfo&apos; not found.</span><br><span class="line">at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:959) ~[mysql-connector-java-5.1.37.jar:5.1.37]</span><br><span class="line">at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898) ~[mysql-connector-java-5.1.37.jar:5.1.37]</span><br><span class="line">at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887) ~[mysql-connector-java-5.1.37.jar:5.1.37]</span><br><span class="line">at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:862) ~[mysql-connector-java-5.1.37.jar:5.1.37]</span><br><span class="line">at com.mysql.jdbc.ResultSetImpl.findColumn(ResultSetImpl.java:1076) ~[mysql-connector-java-5.1.37.jar:5.1.37]</span><br><span class="line">at com.mysql.jdbc.ResultSetImpl.getString(ResultSetImpl.java:5206) ~[mysql-connector-java-5.1.37.jar:5.1.37]</span><br><span class="line">at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source) ~[na:na]</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_112]</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_112]</span><br><span class="line">at com.mysql.jdbc.MultiHostConnectionProxy$JdbcInterfaceProxy.invoke(MultiHostConnectionProxy.java:91) ~[mysql-connector-java-5.1.37.jar:5.1.37]</span><br><span class="line">at com.mysql.jdbc.FailoverConnectionProxy$FailoverJdbcInterfaceProxy.invoke(FailoverConnectionProxy.java:81) ~[mysql-connector-java-5.1.37.jar:5.1.37]</span><br><span class="line">at com.sun.proxy.$Proxy9.getString(Unknown Source) ~[na:na]</span><br><span class="line">at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java) ~[HikariCP-2.6.0.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.type.StringTypeHandler.getResult(StringTypeHandler.java:35) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.mapping.result.ResultMap.getPrimitiveResultMappingValue(ResultMap.java:619) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.mapping.result.ResultMap.getResults(ResultMap.java:345) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.mapping.result.AutoResultMap.getResults(AutoResultMap.java:47) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.execution.SqlExecutor.handleResults(SqlExecutor.java:384) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.execution.SqlExecutor.handleMultipleResults(SqlExecutor.java:300) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.execution.SqlExecutor.executeQuery(SqlExecutor.java:189) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.sqlExecuteQuery(MappedStatement.java:229) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.executeQueryWithCallback(MappedStatement.java:196) ~[ibatis-2.3.4.726p.jar:na]</span><br><span class="line">... 41 common frames omitted</span><br></pre></td></tr></table></figure><h2 id="문제에-대한-고찰"><a href="#문제에-대한-고찰" class="headerlink" title="문제에 대한 고찰 "></a>문제에 대한 고찰 </h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AutoResultMap 는 왜 발생했는가?</span><br><span class="line">캐싱은 왜 발생했는가?</span><br><span class="line">해당 캐싱을 그대로 유지할 것인가?</span><br></pre></td></tr></table></figure><h2 id="원인은"><a href="#원인은" class="headerlink" title="원인은?"></a>원인은?</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings</span><br><span class="line">        cacheModelsEnabled=&quot;true&quot;</span><br><span class="line">        enhancementEnabled=&quot;true&quot;</span><br><span class="line">        lazyLoadingEnabled=&quot;true&quot;</span><br><span class="line">        maxRequests=&quot;512&quot;</span><br><span class="line">        maxSessions=&quot;256&quot;</span><br><span class="line">        maxTransactions=&quot;64&quot;</span><br><span class="line">        useStatementNamespaces=&quot;true&quot;/&gt;</span><br></pre></td></tr></table></figure><p>cache 처리를 우선 true 로 해두었는데,<br>IBATIS 는 기본적으로 해당 쿼리에 대한 메타데이터(필드, 타입 등)를 캐시를 하며,<br>dynamicQuery 구문이 실행된 이후 그 결과의 컬럼 정보가 캐시되었고,<br>이후 다른 컬럼 정보를 포함한 쿼리가 dynamicQuery 로 실행되었을 때<br>캐시된 컬럼 정보로 값을 찾으려하다 오류가 나는 경우였음.</p><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;select xxxx remapResults=&quot;true&quot;&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><p>실제 setting 을 건드리면 모든 query 에 대한 검증을 해야하므로, 해당 쿼리가 dynamic 한 경우에는 remapResults 값을 true로 설정한다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://ohgyun.com/280" rel="external nofollow noopener noreferrer" target="_blank">iBATIS 동적 쿼리 수행 시 AutoResultMap 에러</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>개발자 커리어 컨퍼런스</title>
      <link href="/2018/05/2018-05-12-FASTCAMPUS/"/>
      <url>/2018/05/2018-05-12-FASTCAMPUS/</url>
      
        <content type="html"><![CDATA[<h2 id="이직을-꿈꾸는-개발자들에게-선배-개발자들이-진솔하게-전하는-개발자-이야기"><a href="#이직을-꿈꾸는-개발자들에게-선배-개발자들이-진솔하게-전하는-개발자-이야기" class="headerlink" title="이직을 꿈꾸는 개발자들에게 선배 개발자들이 진솔하게 전하는 개발자 이야기"></a>이직을 꿈꾸는 개발자들에게 선배 개발자들이 진솔하게 전하는 개발자 이야기</h2><p>개발자 커리어 컨퍼런스</p><ul><li>인사 담당자가 말하는 개발자 채용</li><li>개발자로서의 성장</li><li>한국 개발 커리어의 현실</li></ul><h2 id="개발자-되고-보니-끝이-아니더라"><a href="#개발자-되고-보니-끝이-아니더라" class="headerlink" title="개발자, 되고 보니 끝이 아니더라"></a>개발자, 되고 보니 끝이 아니더라</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">개발자로 커리어는 시작했지만, 연차가 쌓일수록 이직을 비롯해 누구에게 물어봐야 할지, 어디서 찾아야 할지 모르는 궁금증이 쌓여만 갑니다.</span><br><span class="line">5년차, 10년차, 20년차 개발자 연사님들이 각 연차별 어떤 고민을 하고 어떻게 해결해야 하는지 그 어디에서도 들을 수 없었던 개발자의 진솔한 이야기를 전달합니다.</span><br><span class="line">이직을 고민하고 있거나, 개발자의 성장과 방향성에 고민하고 있다면 이 컨퍼런스를 통해 해답을 찾을 수 있습니다.</span><br></pre></td></tr></table></figure><h2 id="Session-1-인사담당자가-말하는-개발자-채용"><a href="#Session-1-인사담당자가-말하는-개발자-채용" class="headerlink" title="Session 1. 인사담당자가 말하는 개발자 채용"></a>Session 1. 인사담당자가 말하는 개발자 채용</h2><p>발표주제 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">개발 실력과 원하는 회사에 입사하는 것은 다른 문제입니다.</span><br><span class="line">CTO/개발팀장들 보다도 가장 먼저 서류를 검토하고 인성면접을 진행하며 내 성과를 평가하는 인사팀이 개발자 채용, 평가에 대해 갖고 있는 솔직한 생각을 공개합니다.</span><br></pre></td></tr></table></figure></p><ul><li>인사 담당자가 바라본 개발자의 특징/특성</li><li>HR팀이 개발자에 요구하는 역량들</li><li>개발자의 커리어는 어떻게 성장시켜야 하는가?</li></ul><p>발표자 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">25년차 대기업 HR 총괄(임원급)</span><br></pre></td></tr></table></figure></p><p>발표내용 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">無!!!!!!!!!</span><br></pre></td></tr></table></figure></p><h2 id="Session-2-개발자-직장인-직업인"><a href="#Session-2-개발자-직장인-직업인" class="headerlink" title="Session 2. 개발자, 직장인? 직업인?"></a>Session 2. 개발자, 직장인? 직업인?</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">개발자로서 실력을 키워 성장하는 법과, 개발팀 직원으로서 좋은 인사고과를 받고 살아남아 승진하는 법은 다릅니다.</span><br><span class="line">개발 실력과 회사 생활 양쪽을 모두 신경써야하는 직장인 개발자를 위한 성장 꿀팁을 공개합니다.</span><br></pre></td></tr></table></figure><h2 id="Session-2-1-5년차-개발자"><a href="#Session-2-1-5년차-개발자" class="headerlink" title="Session 2-1 : 5년차 개발자"></a>Session 2-1 : 5년차 개발자</h2><p>발표자 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5년차 개발자 김범준</span><br><span class="line"></span><br><span class="line">&lt;개발과 업무의 경계에서&gt;</span><br><span class="line">개발이 즐거워서 개발을 시작했지만 회사생활을 하면 할수록 즐거웠던 개발이 업무로 느껴질 때가 있습니다. </span><br><span class="line">그 경계에서 어떻게 하면 두마리 토끼를 잡을 수 있는지 함께 생각해 봅시다</span><br></pre></td></tr></table></figure></p><p>경력 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (현) 레이니스트 [Rainist.,co.ltd] Software Engineer</span><br><span class="line">- (전) 투데잇당 Software engineer</span><br><span class="line">- (전) 두닷두Dodotdo에서 Software engineer</span><br><span class="line">- (전) OJWorld에서 Software engineer</span><br><span class="line">- Software Maestro 6기</span><br><span class="line">- Mash-Up 단장</span><br></pre></td></tr></table></figure></p><p>발표내용 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">잠깐 나갔다왔는데 끝나있었다. ㅠㅜ;</span><br></pre></td></tr></table></figure></p><h2 id="Session-2-2-10년차-개발자"><a href="#Session-2-2-10년차-개발자" class="headerlink" title="Session 2-2 : 10년차 개발자"></a>Session 2-2 : 10년차 개발자</h2><p>발표자 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">10년차 개발자 이경일</span><br><span class="line"></span><br><span class="line">발표내용 : </span><br><span class="line">&lt;어떻게 하면 추천받는 개발자가 될 수 있을까?&gt;</span><br><span class="line">: 개발자로 일하면서 우리 조직에 개발자를 추천 했던 혹은 다른 회사에 개발자를 추천드렸던 이야기와 개인적인 개발자 추천 기준을 공유합니다.</span><br></pre></td></tr></table></figure></p><p>경력 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (현) KAKAO Commerce platform Developer</span><br><span class="line">- (전) NAVER Main platform Developer</span><br><span class="line">- (전) CJ O Shopping Commerce platform Developer</span><br><span class="line">- (전) NHN i&amp;s, Technology Services Backend Server Developer</span><br><span class="line"></span><br><span class="line">발표 경력</span><br><span class="line">- OKKY – 개발자 커리어 관리 관련 발표</span><br><span class="line">- SpringCamp 2017 – Spring Cloud 관련 발표</span><br></pre></td></tr></table></figure></p><p>발표내용 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">회사는 항상 개발자가 부족하다고 한다.</span><br><span class="line">그러나, 막상 개발자는 자기가 갈 회사를 찾기 힘들다.</span><br><span class="line"></span><br><span class="line">모든 회사는  개발자를 채용하기 위해 매우 노력한다.</span><br><span class="line"></span><br><span class="line">1. 경력공채</span><br><span class="line">2. 지인(사내)추천</span><br><span class="line"></span><br><span class="line">회사에서 사람을 뽑는 방법은 2가지가 있다.</span><br><span class="line"></span><br><span class="line">그 중 지인 추천에 대해서 이야기하면,</span><br><span class="line">지인 추천을 받는 것 중에 특이하게 개발자가 아닌 사람들에게 추천을 받는 경우가 있다.</span><br><span class="line">그러므로 모든 일을 할때는 커뮤니케이션이 매우 중요하다.</span><br><span class="line">개발자가 아닌 사람을 이해시키는 토론 능력도 매우 중요하다.</span><br><span class="line">가끔 기획자와 사이가 안좋은 개발자들이 보이지만, 기획자를 통해 추천을 받는 경우도 존재하기 때문이다.</span><br><span class="line">모든 사람들과 좋은 관계를 가지는 것이 중요하다.</span><br><span class="line"></span><br><span class="line">당연한 일이지만, 모든 일에 최선을 다하여,</span><br><span class="line">자신의 서비스의 오너쉽, 전문성그리고 해당 도메인의 이해를 알고 있어 그것을 주변사람들에게 인정을 받는 개발자가 되면 된다.</span><br><span class="line"></span><br><span class="line">그러므로, 자신이 하고 했던 업무를 적극적으로 표현하는 것이 좋다.</span><br><span class="line"></span><br><span class="line">온라인에 자신을 표현할 수 있는 커뮤니케이션을 이용한다. (github, blog, facebook 등)</span><br><span class="line">물론 회사 내부의 소스를 함부로 올리지 않도록 지양해야한다.</span><br><span class="line"></span><br><span class="line">직접 자신이 세미나에 강사로 자신의 업무를 표현하는 것도 나쁘지 않다.</span><br><span class="line">컴퍼런스는 배우려 가는 것보다 지인을 만나러 갈수 있는 장을 만드는 것도 하나의 방법이다.</span><br><span class="line">온라인에서 발생했던 인맥을 오프라인 커뮤니케이션으로 되도록 한다. (세미나, study group 등)</span><br><span class="line"></span><br><span class="line">마지막으로 나에게 블랙리스크된 사람들이 존재한다.</span><br><span class="line">난 개발을 너무 잘하기 때문에 이거는 완벽하고 더이상 수정할 수 없어라고 옹고집적인 개발자는,</span><br><span class="line">절대 추천하지 않는다.</span><br></pre></td></tr></table></figure></p><h2 id="Session-2-3-20년차-개발자-CTO"><a href="#Session-2-3-20년차-개발자-CTO" class="headerlink" title="Session 2-3 : 20년차 개발자(CTO)"></a>Session 2-3 : 20년차 개발자(CTO)</h2><p>발표자 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">20년차 개발자 임세준</span><br><span class="line"></span><br><span class="line">발표내용 : </span><br><span class="line">&lt;관리자와 개발자&gt;</span><br><span class="line">: 향후 커리어를 관리자와 개발자 사이에서 고민하시는 분들을 위해 관리자와 개발자의 차이, 스타트업 CTO로서 그 둘 사이에서 어떤 고민들을 했는지를 이야기 합니다</span><br></pre></td></tr></table></figure></p><p>경력 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (현)드라마앤컴퍼니 Drama &amp; Company 개발그룹 / Group Leader</span><br><span class="line">- (전)LG U+ Smart SME 기술 책임자</span><br><span class="line">- (전)한국 Oracle SOA/IDM 제품의 Technical Consultant</span><br></pre></td></tr></table></figure></p><p>발표내용 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">개발자로서 CTO가 된 경험담을 이야기하자면, CTO는 도대체 뭐하는 거냐고 묻는 경우가 많다.</span><br><span class="line">개발을 좋아하고 CODDING 을 좋아하는 사람이 막상 CTO가 되었을 때,</span><br><span class="line">단순히 기술리더로써 기술적인 문제만을 해결하는 것이 아닌,</span><br><span class="line">기술 외적인 문제도 해결해야하는 책임이 생기게 되는 거 같다.</span><br><span class="line">물론, 그럼에도 불구하고 기술리더로써 기술적인 문제를 해결해야한다.</span><br><span class="line"></span><br><span class="line">개발적으로는 다음과 같은 문제를 해결해야한다.</span><br><span class="line">1. Understading problems</span><br><span class="line">2. managing the flow of ideas</span><br><span class="line">3. maintaining quality</span><br><span class="line"></span><br><span class="line">관리적으로는 다음과 같이 프로젝트 관리를 하여 해결해야한다.</span><br><span class="line">1. 태스크의 리스트 업 및 공수산정</span><br><span class="line">2. 태스크 작업 순서 및 계획 수립</span><br><span class="line">3. 프로젝트 진행시 발생하는 이슈 해결</span><br><span class="line"></span><br><span class="line">그 외의 조직적인 문제들도 해결해야한다.</span><br><span class="line">1. 구성원들이 더 높은 성과를 낼 수 있는 환경구축</span><br><span class="line">2. 개발 구성원의 이슈 해결 및 만족도 재고</span><br><span class="line">3. 구성원간의 모호한 R&amp;R 정립</span><br><span class="line"></span><br><span class="line">그렇게 문제들을 해결하면서 목표 달성을 위한 문화를 만들어야한다.</span><br><span class="line"></span><br><span class="line">목표 달성을 위한 개발 문화/프로세스를 만들어 해결한다.</span><br><span class="line">1. 업무 프로세스 : 스크럼, PP, 코드 리뷰</span><br><span class="line">2. 품질 관리 : 단위 테스트, QA 프로세스</span><br><span class="line">3. Risk taking : 신기술 도입 장려 vs 보수적 기술 도입</span><br><span class="line">이런 문화프로세스를 조직원들이 자동적으로 할 수 있도록 도와줘야한다.</span><br><span class="line"></span><br><span class="line">이런것들을 해결하는데 CTO로써 매우 노력을 해야한다.</span><br><span class="line"></span><br><span class="line">일정은 정해진 거 같은데, 우선은 해보자 하고 우겨넣으면,</span><br><span class="line">개발자들은 코드를 잘 짜자라는 마음보다 어떻게든 빨리 해결하자라는 마음을 가지게 된다.</span><br><span class="line">결과적으로 보기 싫은 CODDING가 양산되고,</span><br><span class="line">결과적으로 개발자들은 열씸히 해도 안되는 구나 하는 생각이 든다.</span><br><span class="line"></span><br><span class="line">프로젝트가 끝나도 보람이 되지 않는다.</span><br><span class="line">이런게 반복되면 결국 개발자들은 이직을 하게 된다.</span><br><span class="line"></span><br><span class="line">CTO는 이러한 문제점들에 대한 이슈 및 해결책들을 고민해서 해결해야한다.</span><br><span class="line"></span><br><span class="line">CTO가 되어서 기쁜점.</span><br><span class="line">- 더 크고 복잡하고 어려운 문제를 해결하고 있다.</span><br><span class="line">- 회사에 더 많이 기여하고 있다..</span><br><span class="line"></span><br><span class="line">슬픈점.</span><br><span class="line">- 코딩을 더 이상 할 수 없다</span><br><span class="line">- 문제 해결에 대한 스트레스가 크다</span><br></pre></td></tr></table></figure></p><p>Q&amp;A<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Q : 임세준 CTO님에게 질문드리고 싶습니다.</span><br><span class="line">만약 계속 개발자로서 여러 경험을 쌓고 커뮤니케이션 기술을 늘리고 커리어를 만들어가면,</span><br><span class="line">개발자의 최종 종착지가, CTO가 되거나, vp엔지니어가 되거나, 이야기 주신거 처럼 치킨을 굽거나 할거 같은데요.</span><br><span class="line"></span><br><span class="line">어느정도의 개발자가 모인 개발회사에서</span><br><span class="line">CTO가 없는 회사는 기술의 바다에서 선장 없이 헤매는 배라며 힘들게 cto를 모셔오는데,</span><br><span class="line">막상 개발자들끼리 저분이 CTO가 맞나? 그냥 연구소장이나 관리자같은데?</span><br><span class="line">이런 의문이 드는 거 같습니다.</span><br><span class="line"></span><br><span class="line">그런데, 보통의 회사에 CTO가 있어도 하는 일은 전체 개발 조직을 관리하고 여러 프로젝트의 진행을 챙기는 등의 관리 일을 많이 한고,</span><br><span class="line">또 경영자에게 보고를 하기 위한 보고서를 만드는데 시간을 쓰다보니,</span><br><span class="line">진짜 개발자가 원하는 기술을 챙기기란 시간적으로도 불가능하기 때문에 혹시 나도 치킨을 굽지 않고,</span><br><span class="line">계속 개발자로 버틴다면 저렇게 될까? 라고 체념하고 있는 부분인데,</span><br><span class="line"></span><br><span class="line">그런 촉박한 시간안에 개발적인 부분,</span><br><span class="line">Understading problems</span><br><span class="line">managing the flow of ideas</span><br><span class="line">maintaining quality</span><br><span class="line">이런 부분들에 대해서 어떻게 극복하셨는지가 궁금합니다.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A : 상황마다 CTO로써의 역활과 책임에 따라 다르게 행동해야 한다.</span><br><span class="line">가장 먼저 프로젝트 기술적으로 난이도가 있는지 먼저 판단하고,</span><br><span class="line">기술력 프로젝트 난이도 (별도의 시간을 두어서라도) 별로 해당 문제에 대한 처리를 해야한다.</span><br><span class="line"></span><br><span class="line">기술관점으로 우리가 풀어야할 문제? 해결? 목표? 이 세가지에 대한 명확한 정의를 우선한다.</span><br><span class="line">그리고 그 때 가장 최적의 아키텍쳐에 대한 논의와 아이디어 회의를 해당 개발조직과 충분한 논의를 거친다.</span><br><span class="line">담당자와의 효율적인 결론을 상황에 따른 기술난이도에 대한 집중도에 대한 문제를 우선적으로 처리한다.</span><br></pre></td></tr></table></figure></p><h2 id="Session-3-내가-보는-한국-개발-커리어의-현실"><a href="#Session-3-내가-보는-한국-개발-커리어의-현실" class="headerlink" title="Session 3. 내가 보는 한국 개발 커리어의 현실"></a>Session 3. 내가 보는 한국 개발 커리어의 현실</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">내가 개발자로서 언제까지 살아남을 수 있을까?</span><br><span class="line">핫한 기술 스택 열심히 배우면 이직/승진이 쉬워질까?</span><br><span class="line">앞으로도 수십년 개발자로서 사회생활을 해야하는 당신을 위한 동료 개발자들의 생생한 증언을 들어보세요.</span><br></pre></td></tr></table></figure><h2 id="Session-3-1-5년차-개발자"><a href="#Session-3-1-5년차-개발자" class="headerlink" title="Session 3-1 : 5년차 개발자"></a>Session 3-1 : 5년차 개발자</h2><p>발표자 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5년차 개발자 조은</span><br><span class="line"></span><br><span class="line">&lt;7년을 돌이켜 보며&gt;</span><br><span class="line">유수의 대기업, 스타트업, IT 기업을 거쳐 지금에 이른 개발자의 과거 경험을 공유하며 개발자의 커리어 패스에 대해 고민해 봅니다.</span><br></pre></td></tr></table></figure></p><p>경력 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (현) NAVER Front End Developer</span><br><span class="line">- (전) 우아한형제들 Front End Developer</span><br><span class="line">- (전) NHN Technology Services UI Developer</span><br><span class="line">- (전) SK Communications UI Developer</span><br></pre></td></tr></table></figure></p><p>발표내용 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">내 소개를 하자면, html &amp; css 잘하는 사람은 드물지만 잘할 수 있다는 (쉽다는) 사람은 무수히 존재하는 정체불명의 언어인 마크업 개발자다.</span><br><span class="line"></span><br><span class="line">크고 작은 컴퍼런스에 200개 정도 꾸준히 참여했으며,</span><br><span class="line">스터디도 지속적으로 했다.</span><br><span class="line">온라인으로 계속 인맥을 샇았으며 CTO도 알고, 실장도 알게 되었다.</span><br><span class="line">그로인해 추천이직으로 네이버에 들어가게 되었다.</span><br><span class="line">물론 추천이라고 쉽진않다. 매우 빡세게 시험을 보고 면접도 보고 하고 다할 정도의 자기자신의 스펙을 쌓아야한다.</span><br><span class="line"></span><br><span class="line">면접의 장점은 2가지가 있었다.</span><br><span class="line">1. 잘하는 점과 못하는 점을 알 수 있었다.</span><br><span class="line">- 면접을 자주 보는 것이 좋다.</span><br><span class="line">2. 앞으로 어디에 초점을 맞춰야할 지 알수있다.</span><br><span class="line">- 한 회사에 오래있으면, 정체(루즈)하게 된다. 같은 업무만 반복하게 되기 때문이다. 그런데 면접을 보게 되면, 어떤 부분이 부족하고 현재 회사에서 바라는 인재상에 대해 알게 된다.</span><br></pre></td></tr></table></figure></p><h2 id="Session-3-2-10년차-개발자"><a href="#Session-3-2-10년차-개발자" class="headerlink" title="Session 3-2 : 10년차 개발자 "></a>Session 3-2 : 10년차 개발자 </h2><p>발표자 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">10년차 개발자 최완복</span><br><span class="line"></span><br><span class="line">&lt;개발자 홀로서기&gt;</span><br><span class="line">지금은 인하우스 개발을 하고 있지만 커리어의 상당 부분을 프리랜서로 살아남는 데 보냈던 10년차 개발자의 야생 생존법을 공유합니다.</span><br></pre></td></tr></table></figure></p><p>경력 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (현)iOS 개발자, 하이퍼커넥트</span><br><span class="line">- (전)iOS 개발자, 프렌트립</span><br><span class="line">- 프리랜서 개발자 </span><br><span class="line"> ◾프렌트립, GE Healthcare, LG Hitach, 민트기술, 푸른밤, UNIST, 울산대병원, 조커팩 등</span><br><span class="line"> ◾9건 이상의 iOS &amp; OS X 개발 프로젝트 및 iOS 개발 컨설팅 / 교육 수행</span><br><span class="line">- (전)공동창업자 및 개발팀장, 슬리트</span><br></pre></td></tr></table></figure></p><p>발표내용 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">새로운 기술을 시스템에 바로 적용하는 것도 좋다. </span><br><span class="line">물론 책임은 본인이 지는 것이고, 실제 적용했다가  심각한 오류로 원복을 할 수도 있다.</span><br><span class="line"></span><br><span class="line">가르키는 것이 가장 최고의 학습법이다.</span><br><span class="line">사내/사외 발표를 가리지 않고 하는 것이 좋다.</span><br><span class="line"></span><br><span class="line">커뮤니티 활동은 매우 중요하다.</span><br><span class="line">새로운 신기술의 동향과 행사소식을 파악하는데 용이하다.</span><br><span class="line"></span><br><span class="line">컴퍼런스도 처음에는 좋은게 많았지만, 요근래 다양해지면서 좋은 행사를 골라가는 눈을 길러야한다.</span><br><span class="line"></span><br><span class="line">새로운 지식을 계속 도전하는 것이 현재 업무에 신기술을 적용하는 것이라고 했지만,</span><br><span class="line">그게 아니더라도 공부를 계속해야한다.</span><br><span class="line"></span><br><span class="line">프리랜서의 단점은 좋은 동료가 없다. 이 갭을 메꾸기 위한 커뮤니티 활동이다.</span><br></pre></td></tr></table></figure></p><h2 id="Session-3-3-20년차-개발자"><a href="#Session-3-3-20년차-개발자" class="headerlink" title="Session 3-3 : 20년차 개발자 "></a>Session 3-3 : 20년차 개발자 </h2><p>발표자 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">20년차 개발자 굿닥CTO 신현묵</span><br><span class="line"></span><br><span class="line">&lt;20년차 개발자로 살아남는 법&gt;</span><br><span class="line">20년 동안 개발자로 성장하려면 어떤 준비해야 할까. 개발자 20년 커리어 플랜을 세우는 법, 신현묵 CTO님으로부터 전해 듣습니다.</span><br></pre></td></tr></table></figure></p><p>경력 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 현) 케어랩스 CTO 현) (사)한국디지털헬스산업협회 상임이사</span><br><span class="line">- 저서 : 백세코딩</span><br><span class="line">- 스윗트래커 CTO, 와탭랩스 CBO, 로코즌 부사장/연구소장, 우리들의료재단/명지의료재단 IT담당이사</span><br><span class="line">- 자문) NHN Labs, 말랑스튜디오, 베스티안의료재단, RolandBerger, 인피니트헬스케어</span><br></pre></td></tr></table></figure></p><p>발표내용 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">20년까지 개발자가 먹고 살수있기는 힘들다. </span><br><span class="line">왜냐하면, 20년차 개발자가 할 수 있는 일은 3년차도 할 수 있기 때문이다.</span><br><span class="line">오히려 20년차가 하면, 손도 느리고, 허리 아프고 연봉만 높다.</span><br><span class="line"></span><br><span class="line">20년차 그 이상을 개발자로서 살아가려면 고참을 인정해줄 직군을 찾거나 방법을 찾아야한다.</span><br><span class="line">예를 들어 회사에 20년차 CTO인데 연봉이 7천만원? 그런데는 회사로서의 가치가 없다.</span><br><span class="line">직군을 인정 안해준다는 말이고, 그것을 개발자에 대한 대우로서 나타난다.</span><br><span class="line"></span><br><span class="line">10년차 넘었는데 개발자를 뽑는 곳은 많을 것이다.</span><br><span class="line">그러나, 20년차가 넘어서도 개발자를 하고 싶다면, 고참개발자를 인정하는 회사를 찾지 않으면 명예퇴직을 당할 수 밖에 없다.</span><br><span class="line"></span><br><span class="line">나이가 먹어가면서 계속 인건비가 올라간다고 착각하면 안된다.</span><br><span class="line">사람마다 다르며, 연봉 2억이 넘는 사람도 있고 1억도 안되는 사람도 있다.</span><br><span class="line">20년차 직장인? 20년차 코더? 20년차 사회인? 어떤 사람이 될 것인지 본인이 결정해야한다.</span><br><span class="line"></span><br><span class="line">20년차가 되기전에 경험해야할 것은 다음과 같다.</span><br><span class="line">1. 다양한 경험 (대기업 No. 대리 이상이 되면 꼰대 정신을 가진다.)</span><br><span class="line">2. peer 리뷰가 가능한 환경</span><br><span class="line">3. 뛰어난 동료</span><br><span class="line">4. 운 or 돈</span><br><span class="line"></span><br><span class="line">실제로 1년에 1억~2억정도 벌 수있는 개발자가 1.5명 정도 필요한 일은 의외로 많이 찾을 수 있다.</span><br><span class="line">그정도 시장은 개발자가 혼자 해도 된다.</span><br><span class="line">하지만 실제 연 10억 매출 이상의 일을 마켓분석은 창업의 영역이지, 개발자의 영역이 아니다.</span><br><span class="line">물론 혼자서 8억~12억 정도 매출을 발생하는 1인 개발자도 있긴하지만 그것은 운과 경험에 해당한다.</span><br></pre></td></tr></table></figure></p><p>Q&amp;A<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Q : 이직 시기는 언제 하면 되는가?</span><br><span class="line"></span><br><span class="line">A : </span><br><span class="line">5년차 개발자 조은의 생각</span><br><span class="line">1. 솔류션이 없는 것에 대한 불만이 있을 때!</span><br><span class="line">- 윗선에 이야기하고 고민도 하고 납득도 해주는데 이루어지지 않았을 때! (feat. 좌절감)</span><br><span class="line"></span><br><span class="line">20년차 CTO 신현묵의 생각</span><br><span class="line">1. 경영자가 삽질할 때</span><br><span class="line">2. 자신이 만든 솔류션이 정상동작하고, 자신이 할일이 없다고 생각할 때</span><br><span class="line">- 자신이 없어도 된다(할일이 없다)</span><br><span class="line"></span><br><span class="line">10년차 개발자 최완복의 생각</span><br><span class="line">1. 새로운 기술에 대한 욕망(?)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Q : 쥬니어와 시니어를 구분짓는 것은 뭐라 생각하느냐?</span><br><span class="line"></span><br><span class="line">A : </span><br><span class="line">10년차 개발자 최완복의 생각</span><br><span class="line">A급과 B급의 차이는 본인 업무 이외의 새로운 뭔가를 하느냐로 판단한다.</span><br><span class="line">물론 업무만해도 A급인 사람을 보긴했지만, 아직은 업무 이외의 뭔가를 하는 사람이라고 생각한다.</span><br><span class="line">쥬니어와 시니어를 가르는 것은 의사 결정과 책임이다.</span><br><span class="line"></span><br><span class="line">5년차 개발자 조은의 생각</span><br><span class="line">회사는 성과를 만드는 조직이고, 개발자는 성과를 내는데 명확하다.</span><br><span class="line">맡은 업무 및 목표를 &quot;잘&quot;만드는 것이다.</span><br><span class="line">&quot;잘&quot;이라는 기준은 애매하다.</span><br><span class="line">어렸을 떄는 빨리 짜는 게 &quot;잘&quot;이었는데,</span><br><span class="line">지금은 테스트도 &quot;잘&quot;하고, 설계도 &quot;잘&quot;하고, 탄탄하게 &quot;잘&quot; 만든다가 기준이 되는 거 같다.</span><br><span class="line"></span><br><span class="line">시니어를 초월하신 20년차 CTO 신현묵의 생각</span><br><span class="line">정말 띄어난 개발자는 탄력적이고 좋은 팀을 찾는 시각을 가진다.</span><br><span class="line">일을 하다보면 과다품질을 가진 사람들이 보인다.</span><br><span class="line">경력이 많으면 코드는 간결해진다. 과다 품질을 하는 사람은 주니어다.</span><br><span class="line">쓸데없는 프레임웍을 사용하는 중급자도 주니어다.</span><br><span class="line">우리팀, 우리 비즈니스, 우리 회사에 맞는 개발을 하는 정적기준을 찾는 자를 시니어라고 생각한다.</span><br></pre></td></tr></table></figure><h2 id="느낀점"><a href="#느낀점" class="headerlink" title="느낀점"></a>느낀점</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">세미나는 일방적인 연구자료에 대한 발표를 듣는 자리고,</span><br><span class="line">컴퍼런스는 의견교환, 회의같은거라 생각한다.</span><br><span class="line"></span><br><span class="line">당연히 개발자 커리어 컴퍼런스라 많은 의견을 나눌 수 있을 거라 생각했는데,</span><br><span class="line">시간적인 한계가 너무나 많았다.</span><br><span class="line"></span><br><span class="line">정말 시간이 너무 아쉬운 금쪽같은 시간이었다. </span><br><span class="line"></span><br><span class="line">이직하자. 더 많은 경험을 위해서.</span><br><span class="line">공부하자. 더 나은 경험을 위해서.</span><br><span class="line">컴퍼런스 &amp; 세미나를 많이 듣자. 새로운 시야를 위해서.</span><br><span class="line"></span><br><span class="line">이 컴퍼런스를 듣고 바뀐점(바꿀려고 노력하는 점)</span><br><span class="line">- github 시작. (기존 블로그 삭제 후 githubs 통합)</span><br><span class="line">- 너무 회사에 목숨걸지 않기. (내 개인의 삶의 소중함을 깨닫기.)</span><br><span class="line">- 소스는 간결하고 명료하게</span><br><span class="line">- 회사 업무 외적인일 찾기</span><br></pre></td></tr></table></figure><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><p><a href="https://sejoung.github.io/2018/05/fastcampus_dev_seminar_career" rel="external nofollow noopener noreferrer" target="_blank">김세중 SENSE</a></p></li><li><p><a href="http://dramancompany.com/" rel="external nofollow noopener noreferrer" target="_blank">dramancompany 임세중 CTO</a></p></li><li><p><a href="http://blog.leekyoungil.com/" rel="external nofollow noopener noreferrer" target="_blank">이경일님 블로그</a></p></li><li><p><a href="https://brunch.co.kr/@supims" rel="external nofollow noopener noreferrer" target="_blank">시니어를 넘어선 초월자 신현묵님 블로그</a></p></li><li><p><a href="http://www.fastcampus.co.kr/dev_seminar_career/?utm_source=page&amp;utm_medium=banner&amp;utm_campaign=dev_seminar_career&amp;utm_content=organic_content_180502" rel="external nofollow noopener noreferrer" target="_blank">끝난 개발자 커리어 컨퍼런스</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JVM_OPT 제거 관련</title>
      <link href="/2018/05/2018-05-10-JVM-OPTION/"/>
      <url>/2018/05/2018-05-10-JVM-OPTION/</url>
      
        <content type="html"><![CDATA[<p>현재 서버에 설정되어있는 jvm 옵션.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;-verbosegc -server -Xms6144m -Xmx6144m -XX:NewRatio=5  -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:+UseConcMarkSweepGC -XX:MaxTenuringThreshold=0 -XX:CMSInitiatingOccupancyFraction=75 -Djava.security.egd=file:/dev/urandom -Dscouter.config=/usr/local/tomcat7/conf/scouter.conf -Duser.timezone=GMT+09:00 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/tomcat7/logs/memory_err.log&quot;</span><br></pre></td></tr></table></figure><p>시작시 최소, 최대 메모리를 설정한 6144m 을 제외한 나머지 추가 옵션은</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-XX:NewRatio=5  -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:+UseConcMarkSweepGC -XX:MaxTenuringThreshold=0 -XX:CMSInitiatingOccupancyFraction=75</span><br></pre></td></tr></table></figure><p>총 6개 의 추가 옵션이 존재합니다.<br>위의 옵션은 Elasticsearch 설치시 적용된든 기본옵션이기도 합니다.</p><h2 id="1번-XX-NewRatio-5"><a href="#1번-XX-NewRatio-5" class="headerlink" title="1번. -XX:NewRatio=5"></a>1번. -XX:NewRatio=5</h2><p>해당 옵션은 추후 설명할 3번 항목때문에 설정된 것으로 보입니다.<br>제가 관리하는 프로젝트는 싱글 Thread 처리로 인해 부분 lock 이 발생함에 따라,<br>대부분의 DAO 커넥션을 위한 Dao 객체를 new 객체로 변환하였기 때문에,</p><p>newRatio 옵션을 default 로 처리하는 방안에 대해 고민하였습니다.<br>실제 NewRatio=5가 되면 new 영역은 전체 메모리의 1/6 밖에 되지 못함으로, 해당 기능에 대한 지연현상이 있을 수 있어, 해당 기능을 제거하는 것이 유리해보였습니다.</p><h2 id="2번-XX-UseParNewGC"><a href="#2번-XX-UseParNewGC" class="headerlink" title="2번. -XX:+UseParNewGC"></a>2번. -XX:+UseParNewGC</h2><p>Eden Space 를 multi thread 로 정리하는데 사용합니다.<br>Eden Space의 경우 새롭게 생성된 객체들을 의미하는데, 해당 객체들을 multi thread로 GC 처리한다는것을 의미합니다.<br>사용할 thread 수는 -XX:ParallelGCThreads 로 결정하는데 해당 옵션은 들어가있지 않으므로, 기본값인 CPU core 수로 처리됩니다.</p><ul><li>장점<ul><li>Scavenge GC(default Copying Collector) 처리 속도를 비약적으로 상승</li></ul></li><li>단점<ul><li>thread 수를 과하게 늘릴 경우 thread contention(경합) 에 의해 성능 저하가 발생</li></ul></li></ul><p>특히 서버당 여러 인스턴스를 띄워야하는 경우에 전체 VM에 대해 ParallelGCThreads 의 총합이 CPU core 수를 넘기지 않도록 별도 옵션처리로 총합에 대한 관리가 필요합니다.<br>현재는 각 서버마다 단일 인스턴스를 띄우기 때문에, 그대로 유지하는 것을 고민해봤으나, 추후 여러 인스턴스를 띄울 때 4개 이상의 JVM 을 사용될때 총합에 대한 별도 관리가 필요하여 삭제하는 것이 유리해보였습니다.</p><h2 id="3번-XX-UseConcMarkSweepGC"><a href="#3번-XX-UseConcMarkSweepGC" class="headerlink" title="3번. -XX:+UseConcMarkSweepGC"></a>3번. -XX:+UseConcMarkSweepGC</h2><p>객체가 일정 횟수 이상 Scavenge GC 에 살아남으면, To Space 에서 Old Generation 으로 승격됩니다.<br>이때 일정 횟수는 -XX:MaxTenuringThreshold 로 설정 가능한데, 해당 옵션을 0으로 주었기 때문에, eden의 모든 객체가 한번의 gc 주기에 생존하면 바로 old generation 으로 옮겨지게 됩니다.<br>그 때, Old Generation 을 위한 병렬 collercor를 -XX:+UseConcMarkSweepGC (이하 CMS)로 활성화가 가능합니다.</p><p>GC 과정을 4개의 phase 로 진행되며,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">initial marking &gt; concurrent marking &gt; second remarking &gt; concurrent sweeping</span><br></pre></td></tr></table></figure></p><p>순으로 진행되게 됩니다.</p><ul><li>장점<ul><li>Full GC 및 Out Of Memory Error 를 피하는 데 좋습니다.</li></ul></li><li>단점<ul><li>CPU 비용이 비싸다고 합니다.</li></ul></li></ul><p>concurrent marking phase 에서 하나 이상의 CPU core 가 할애되어야 하며, concurrent sweeping phase 에서 하나의 CPU core 가 할애되어야 한다고 합니다.<br>참고로, CMS 는 initial mark 와 remark phase 에서 stop-the-world pause 발생하기 때문에, -XX:+CMSParallelRemarkEnabled (remark 시 일시중단을 하지 않도록 함.) 와 같이 사용하길 권장하기에 해당 기능이 추가로 설정된 것으로 보입니다.</p><p>해당 CMS 는 4 CPU core 보다 더 많은 core 가 꽂힌 대형 시스템에서 OOME 를 주기적으로 경험하는 경우에만 사용하는 것이 좋다고 하며,<br>CMS 알고리즘이 효율적으로 동작하기 위해 -Xmn 은 전체 heap 의 1/4 로 설정하는 것이 좋다고 합니다. (이로인해 1번항목의 NewRatio=5 설정을 한 걸로 추정)<br>CMS 를 켜면 -XX:+UseParNewGC 가 같이 켜지므로, ParallelGCThreads 를 별도로 관리해 주어야 합니다. (현재 옵션에 없으므로 해당 서버의 cpu갯수)</p><h2 id="4번-XX-CMSInitiatingOccupancyFraction-75"><a href="#4번-XX-CMSInitiatingOccupancyFraction-75" class="headerlink" title="4번. -XX:CMSInitiatingOccupancyFraction=75"></a>4번. -XX:CMSInitiatingOccupancyFraction=75</h2><p>3번 항목에서 CMS를 설정하였을 경우에 보조하기 위해 처리한 것으로 보입니다.<br>Full GC가 빈번하게 발생하던 예전 모비온 환경에서, CMS로 Full GC를 제어하려고 한 것으로 보이고,<br>Old 영역이 너무 꽉 찾을때 CMS가 실행되면서, CMS 중에 CMS가 중단되고 Full GC등이 발생하는 경우를 제어하기 위해 적용한걸로 추정됩니다.</p><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>이 1,2,3,4번 항목 전부 전부 CMS 로 Full GC나 OOME를 제어하기 위해 만들어진 것으로 파악되었습니다.<br>서버 증설 및 서버 확장으로 인해 현재 Full GC 가 거의 없는 상황에선 필요하지 않은 옵션으로 보였기 때문에, 서버 1대에 해당 옵션을 제거한 후 테스트 하였으며,<br>성능이슈는 발생하지 않았습니다.</p><p>감사합니다.</p><p>적용한 서버와 적용하지 않은 서버와의 차이는 GC 발생율이 1/2로 줄은 것으로 최종 확인이 완료하여 전체 적용이 완료되었습니다.</p><p><img src="/images/20180510jvmoption_01.png" alt="이미지">{: width=”100%”}</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Connect Error: Can&#39;t connect to local MySQL server through socket &#39;/var/lib/mysql&#39;</title>
      <link href="/2018/04/2018-04-16-MySQL_ERROR/"/>
      <url>/2018/04/2018-04-16-MySQL_ERROR/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connect Error: Can&apos;t connect to local MySQL server through socket &apos;/var/lib/mysql/mysql.sock&apos; (111)</span><br></pre></td></tr></table></figure><h2 id="mysql-오류"><a href="#mysql-오류" class="headerlink" title="mysql 오류"></a>mysql 오류</h2><p>mysql로 localhost에 접속하려고 할 때, 다음과 같은 오류가 발생했습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot</span><br><span class="line">ERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/var/lib/mysql/mysql.sock&apos; (111)</span><br></pre></td></tr></table></figure><p>인터넷을 통해 해결방법을 찾아보았는데, root 계정으로 symbolic link 설정하라는 글을 봤습니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure></p><p>그렇게 했는데도 처리가 안됩니다.<br>여러가지 방법을 사용해봤는데, 데이터베이스가 전체적으로 깨진것으로 파악되며,<br>아예 전부 리셋하지 않으면 방법이 없어보입니다.</p><p>개인서버이며, mysql 에서 mariadb로 변환하면서 생긴 오류로 파악되어, 인터넷의 여러방법을 찾아봤지만, 해결책을 찾을 수 없었습니다.</p><p>어쩔 수없이, crontab -e 에 1분간 shell script 를 등록했습니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * sh /home/mysql_start.sh</span><br></pre></td></tr></table></figure></p><p>별도의 쉘스크립트를 생성하였고, 해당 스크립트는,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/service mysql start &gt;&gt; /home/mysql.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>1분마다 계속 mysql 을 start 시킵니다.<br>라이브 운영되는 서버라면 mariadb를 dump 하여 다시 마이그레이션처리를 해야할 이슈로 보입니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ_IDEA 기본 설정</title>
      <link href="/2018/04/2018-04-28-IntelliJ_IDEA/"/>
      <url>/2018/04/2018-04-28-IntelliJ_IDEA/</url>
      
        <content type="html"><![CDATA[<h1 id="인텔리제이-설정"><a href="#인텔리제이-설정" class="headerlink" title="인텔리제이 설정"></a>인텔리제이 설정</h1><p>플러그인</p><p>Camelcase : 카멜케이스 변환 플러그인</p><p>Java Method Reference Diagram :<br>기본적으로 Ctrl+ALt+U(윈도우기반 단축키 기준)을 하면 UML을 보여주는데 이 플러그인을 설치하면 메소드 레퍼런스도 볼 수 있음<br>UML을 볼때 연관 Class들을 source explorer 에서 선택한 상태에서 보면 유용합니다.</p><h2 id="Nyan-Progress-Bar-고양이-Progress-Bar"><a href="#Nyan-Progress-Bar-고양이-Progress-Bar" class="headerlink" title="Nyan Progress Bar : 고양이 Progress Bar"></a>Nyan Progress Bar : 고양이 Progress Bar</h2><p>ctrl + E : 최근 작업 소스</p><h2 id="shift-shift-만능-서치"><a href="#shift-shift-만능-서치" class="headerlink" title="shift + shift : 만능 서치"></a>shift + shift : 만능 서치</h2><p>windows</p><p>IDE_HOME\bin\<product>[bits][.exe].vmoptions</product></p><p>mac</p><h2 id="Applications-app-Contents-bin"><a href="#Applications-app-Contents-bin" class="headerlink" title="/Applications/.app/Contents/bin"></a>/Applications/<product>.app/Contents/bin</product></h2><p>SVN checkout 에러</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cannot load supported formats: Cannot run program &quot;svn&quot;: CreateProcess error=2, The system cannot find the file specified</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_Settings -&gt; Version Controll -&gt; Subversion -&gt; Use command line client</span><br></pre></td></tr></table></figure><p>위와 같은 내용을 체크 해제하라는 글을 봤는데, 2018.01 버전에서는 해당 옵션이 보이지않습니다.</p><p>결국 svn 설치를 하여 해결했습니다.<br><a href="https://sliksvn.com/pub/" rel="external nofollow noopener noreferrer" target="_blank">Slik-Subversion-1.9.7-x64.msi</a>설치합니다.</p><p>Version Control &gt; Subversion 의 경로를,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\SlikSvn\bin\svn.exe</span><br></pre></td></tr></table></figure></p><p>로 설정합니다.</p><h2 id="프로퍼티-에디터"><a href="#프로퍼티-에디터" class="headerlink" title="프로퍼티 에디터"></a>프로퍼티 에디터</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Settings -&gt; Editor -&gt; file encoding -&gt; Transparent native-to-ascii conversion 체크</span><br></pre></td></tr></table></figure><p><img src="/images/20180428intelliJ_idea.PNG" alt="이미지">{: width=”100%”}</p><h2 id="VM-파라미터"><a href="#VM-파라미터" class="headerlink" title="VM 파라미터"></a>VM 파라미터</h2><p>경로 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- 64bit : C:\Program Files\JetBrains\IntelliJ IDEA 2018.1.2\bin\idea64.exe.vmoptions</span><br></pre></td></tr></table></figure></p><p>VM 옵션<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-Xms256m</span><br><span class="line">-Xmx2048m</span><br><span class="line">-XX:ReservedCodeCacheSize=240m</span><br><span class="line">-XX:+UseConcMarkSweepGC</span><br><span class="line">-XX:SoftRefLRUPolicyMSPerMB=50</span><br><span class="line">-Duser.name=bymin</span><br><span class="line">-Dfile.encoding=UTF-8</span><br><span class="line">-ea</span><br><span class="line">-Dsun.io.useCanonCaches=false</span><br><span class="line">-Djava.net.preferIPv4Stack=true</span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:-OmitStackTraceInFastThrow</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding=UTF-8 는 꼭 해줘야합니다. 콘솔창 등에서 한글이 깨지지 않게 하기 위한 설정값입니다.</span><br></pre></td></tr></table></figure><h2 id="TOMCAT-VM-파라미터"><a href="#TOMCAT-VM-파라미터" class="headerlink" title="TOMCAT VM 파라미터"></a>TOMCAT VM 파라미터</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding=UTF-8</span><br><span class="line">-Dfile.client.encoding=UTF-8</span><br><span class="line">-Dfile.encoding.override=UTF-8</span><br></pre></td></tr></table></figure><h2 id="TOMCAT-SSL-설정"><a href="#TOMCAT-SSL-설정" class="headerlink" title="TOMCAT SSL 설정"></a>TOMCAT SSL 설정</h2><p>옵션에 있는 https 포트 설정은 왜 만들어 져있는지 모르겠으나, 해당 값에 대한 설정 처리가 안됩니다.<br>실제 톰캣 경로의 server.xml을 수정해서 ssl 설정을 마무리했다는 글밖에 없으며,<br>별도의 instance를 생성하여 처리하는 방안밖에는 없어 보입니다.<br>(이클립스의 서버별 tomcat의 분리 instance를 자동으로 생성하는 부분이 아쉽습니다.)</p><h2 id="Exception-in-thread-“main”-java-lang-NoClassDefFoundError-javax-servlet-http-HttpServlet"><a href="#Exception-in-thread-“main”-java-lang-NoClassDefFoundError-javax-servlet-http-HttpServlet" class="headerlink" title="Exception in thread “main” java.lang.NoClassDefFoundError: javax/servlet/http/HttpServlet"></a>Exception in thread “main” java.lang.NoClassDefFoundError: javax/servlet/http/HttpServlet</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.0.1&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>servlet 을 provided로 설정했을 경우, intelliJ에서는 별도의 Main class 에서 동작시에는,<br>IntelliJ 설정에서<br>include dependencies with “Providd” scope 체크를 해야합니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><p><a href="https://www.jetbrains.com/help/idea/configuring-encoding-for-properties-files.html" rel="external nofollow noopener noreferrer" target="_blank">인텔리제이 configuring-encoding-for-properties-files</a></p></li><li><p><a href="https://sejoung.github.io/2017/11/IntelliJ_IDEA" rel="external nofollow noopener noreferrer" target="_blank">김세중 SENSE</a></p></li><li><p><a href="https://www.youtube.com/watch?v=eq3KiAH4IBI" rel="external nofollow noopener noreferrer" target="_blank">인텔리제이 단축키를 빨리 습득하고 싶으실떄 유용한 동영상</a></p></li><li><p><a href="https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties" rel="external nofollow noopener noreferrer" target="_blank">인텔리제이 JVM-options-and-platform-properties</a></p></li><li><p><a href="https://blog.jetbrains.com/blog/2016/05/25/introducing-jetbrains-toolbox-app/" rel="external nofollow noopener noreferrer" target="_blank">툴박스 설명</a></p></li><li><p><a href="http://chomman.github.io/blog/tool/subversion/intellij-subversion-checkout-error/" rel="external nofollow noopener noreferrer" target="_blank">Jetbrain 계열 IDE에서 SVN checkout 에러 해결</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tomcat 최신버전 업그레이드 할 때 유의점</title>
      <link href="/2017/12/2017-12-05-TOMCAT8_5/"/>
      <url>/2017/12/2017-12-05-TOMCAT8_5/</url>
      
        <content type="html"><![CDATA[<h1 id="파라미터를-“-”-로-넘기는-경우에-대해-tomcat에서-막음"><a href="#파라미터를-“-”-로-넘기는-경우에-대해-tomcat에서-막음" class="headerlink" title="파라미터를 “|” 로 넘기는 경우에 대해 tomcat에서 막음."></a>파라미터를 “|” 로 넘기는 경우에 대해 tomcat에서 막음.</h1><p>CVE-2016-6816 관련 에러가 발생할 경우, catalina.properties 에서 tomcat.util.http.parser.HttpParser.requestTargetAllow=| 를 주석 제거함.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Allow for changes to HTTP request validation</span><br><span class="line"># WARNING: Using this option will expose the server to CVE-2016-6816</span><br><span class="line"> tomcat.util.http.parser.HttpParser.requestTargetAllow=|</span><br></pre></td></tr></table></figure><p>해당 에러는 get 방식에서만 발생했고, post 방식이나 restful의 body 형태로 값을 넘기는 경우 필요가 없음.</p><p>[Since Tomcat 7.0.76, 8.0.42, 8.5.12 you can define property requestTargetAllow to allow forbiden characters.]<br>위의 버전부터 처리해당 기능 추가.</p><hr><p>추후 여러가지 특수문자에 대한 파라미터를 제거하기 위해 계속 추가된 최종 형태</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat.util.http.parser.HttpParser.requestTargetAllow=^_|&#123;&#125;#$%@!:&amp;()[],.^</span><br></pre></td></tr></table></figure><p>get 방식에 encoding 없이 바로 넘기는 건 지양해야함. 2번, 3번 동일 특수문자가 encoding 없이 다시 호출되면 CVE-2016-6816 관련 에러가 재발됨.</p><h1 id="쿠키-관련-허용에-대한-처리-로직"><a href="#쿠키-관련-허용에-대한-처리-로직" class="headerlink" title="쿠키 관련 허용에 대한 처리 로직"></a>쿠키 관련 허용에 대한 처리 로직</h1><p>context.xml 쿠키 관련 허용에 대한 처리해야합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;CookieProcessor className=＂org.apache.tomcat.util.http.LegacyCookieProcessor＂ /&gt;</span><br></pre></td></tr></table></figure><p><a href="https://tomcat.apache.org/tomcat-8.0-doc/config/cookie-processor.html" rel="external nofollow noopener noreferrer" target="_blank">참고주소</a><br> 쿠키를 사용하지 않을 경우에는 해당 기능에 대하여 추가 될 필요 없음.</p><p>tomcat 버전업시 해당 부분에 대해 참고!</p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java 특정폴더의 이상한 확장자를 변경</title>
      <link href="/2017/05/2017-05-08-JAVAFILENAMECHANGE/"/>
      <url>/2017/05/2017-05-08-JAVAFILENAMECHANGE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import java.io.File;</span><br><span class="line"></span><br><span class="line">public class phpAndJpg &#123;</span><br><span class="line">  public static void main(String[] args) &#123;</span><br><span class="line">    String filePath = &quot;d:\\work&quot;;</span><br><span class="line">    fileDirectory(filePath);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  public static void fileDirectory(String filePath) &#123;</span><br><span class="line">    File f1 = new File(filePath);</span><br><span class="line">    String[] list = f1.list();</span><br><span class="line">    for (int i = 0; i &lt; list.length; i++) &#123;</span><br><span class="line">      File f2 = new File(filePath, list[i]);</span><br><span class="line">      File f3 = new File(filePath, list[i]+&quot;.jpg&quot;);</span><br><span class="line">      if (f2.isDirectory()) &#123;</span><br><span class="line">//        System.out.printf(&quot;디렉토리 : %s %n&quot;, list[i]);</span><br><span class="line">        fileDirectory(filePath+&quot;/&quot;+list[i]);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        if ((filePath+&quot;/&quot;+list[i]).endsWith(&quot;php&quot;))&#123;</span><br><span class="line">        System.out.printf(&quot;파일 : %s %s %n&quot;, filePath+&quot;/&quot;+list[i], f2);</span><br><span class="line">          if (!f2.renameTo(f3)) &#123;</span><br><span class="line">            System.err.println(&quot;이름 변경 에러 : &quot; + f2);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">//        System.out.printf(&quot;파일 : %s %, dbyte %n&quot;, filePath+&quot;/&quot;+list[i], f2.length());</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php 로 되어있는 문서 파일을 jpg로 바꾸는 로직<br>java 에서 특정 파일 확장자명을 가진 확장자를 다른 확장자명으로 바꾸는 로직</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Could not find the main class: org.eclipse.ant.internal.launching.remote.InternalAntRunner. Program will exit.</title>
      <link href="/2016/01/2016-01-03-ANTBUILD/"/>
      <url>/2016/01/2016-01-03-ANTBUILD/</url>
      
        <content type="html"><![CDATA[<p>build.xml 에 build 내용을 적고나서, 우측버튼을 눌러, ant build 할때 발생한 에러.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not find the main class: org.eclipse.ant.internal.launching.remote.InternalAntRunner. Program will exit.</span><br></pre></td></tr></table></figure><p>관련 URL 을 보니, <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=472599" rel="external nofollow noopener noreferrer" target="_blank">https://bugs.eclipse.org/bugs/show_bug.cgi?id=472599</a></p><p>란곳을 참고해보니,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bug 472599 - Could not find the main class: org.eclipse.ant.internal.launching.remote.InternalAntRunner. Program will exit.</span><br></pre></td></tr></table></figure><p>문제는 JDK 버전 문제로 밝혀짐.<br>기존 셋팅한 자바 버전에서 workspace 랑 같은 버전으로 맞추면 됨.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysqldump 작업</title>
      <link href="/2016/01/2016-01-03-MYSQLDUMP/"/>
      <url>/2016/01/2016-01-03-MYSQLDUMP/</url>
      
        <content type="html"><![CDATA[<p>mysql dump 처리를 위한 작업</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FILENAME=`LANG=C date +%Y%m%d_%H%M%S`</span><br><span class="line">mkdir $FILENAME</span><br><span class="line">chmod 755 $FILENAME</span><br><span class="line">#\cp -rf /var/lib/mysql/데이터베이스명 /home/파일경로/$FILENAME/</span><br><span class="line">mysqldump -uroot -p패스워드 데이터베이스명 &gt; 파일명_$FILENAME.sql</span><br></pre></td></tr></table></figure><p>이런식으로 sh 파일(쉘스크립트)로 만들어서 계속 backup 해서 사용합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jconsole 활용도와 로컬 셋팅 방법입니다</title>
      <link href="/2015/03/2015-03-25-JCONSOLE/"/>
      <url>/2015/03/2015-03-25-JCONSOLE/</url>
      
        <content type="html"><![CDATA[<p>jvm 에 대한 현재 상태를 분석하기 위해,<br>서버 셋팅은 jmxremote 수정 및 tomcat의 catalina.sh 을 수정합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$JRE_HOME/lib/management/jmxremote.password.template 파일을 $JRE_HOME/lib/management/jmxremote.password 로 복사합니다.</span><br></pre></td></tr></table></figure><p>복사한 파일 안에 계정에 비밀번호를 생성합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">monitorRole 비밀번호</span><br><span class="line">controlRole 비밀번호</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">아이디까지 바꿔야하는 경우에는 $JRE_HOME/lib/management/jmxremote.access 파일에 아이디를 추가해야합니다.</span><br></pre></td></tr></table></figure><p>기본 설정은 다음과 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">monitorRole readonly</span><br><span class="line">controlRole readwrite</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/tomcat6/bin/catalina.sh 파일에 하단 내용을 추가합니다.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CATALINA_OPTS=&quot;$CATALINA_OPTS -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8999 -Djava.rmi.server.hostname=host.ip -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false&quot;</span><br></pre></td></tr></table></figure><p>jconsole은 java에서 지원하는 무료 java monitoring 툴입니다.</p><p>로컬 셋팅 방법은 다음과 같습니다.</p><p>[java가 설치된 경로]/lib/jconsole.jar 을 실행시키거나,<br>[java가 설치된 경로]/bin/jconsole.exe 을 실행시킵니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Remote Process : host.ip:8999</span><br><span class="line">Username / Password</span><br><span class="line">monitorRole/monitorRole2014)#(      : 모니터링 계정</span><br><span class="line">controlRole/controlRole2014)#(        : 컨트롤 계정</span><br></pre></td></tr></table></figure><p>활용도는 현재로서는 2가지 용도로 사용될 예정입니다.</p><ol><li>mysql 커넥션 확인 용도<br>현재 Idle 갯수를 알 수 있는 numIdle 과 활성화 여부인 numActive 등을 알 수 있습니다.</li></ol><p>maxActive : 최대 active connection 개수<br>maxIdle : 최대 idle connection 개수<br>minIdle : 최소 idle connection 개수<br>maxWait : 최대 connection 대기 시갂<br>numActive : 현재 active connection 개수<br>numIdle : 현재 idle connection 개수</p><ol start="2"><li>JAVA 단에서 발생하는 Deadlock 상황 확인</li></ol><h2 id="2018-06-27-추가-사항"><a href="#2018-06-27-추가-사항" class="headerlink" title="2018.06.27 추가 사항"></a>2018.06.27 추가 사항</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Djava.rmi.server.hostname=host.ip</span><br></pre></td></tr></table></figure><p>초창기에는 외부에서 접속가능하도록</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">monitorRole readonly</span><br><span class="line">controlRole readwrite</span><br></pre></td></tr></table></figure><p>에 대한 jmxremote.access 에 대한 파일을 수정했습니다.<br>그러나 현재는 회사 내부의 ip와 전체 서버의 ip가 하나의 망으로 구현되어있어, 별도의 jmxremote.access 설정이 없이, 바로 host.ip를 도메인주소가 아닌,<br>host ip로 연결하여 테스트가 가능하게 되었습니다.</p><p>현재는, jconsole 보다, jvisualvm 을 더 자주 사용합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TOMCAT Server.xml 에 설정된 DBCP 설정값</title>
      <link href="/2015/03/2015-06-15-JBCP_SETTING/"/>
      <url>/2015/03/2015-06-15-JBCP_SETTING/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;Resource name=&quot;dreamdb&quot;  </span><br><span class="line">  auth=&quot;Container&quot;  </span><br><span class="line">  type=&quot;javax.sql.DataSource&quot;  </span><br><span class="line">  username=&quot;xxxxx&quot;  </span><br><span class="line">  password=&quot;xxxxx&quot;                         </span><br><span class="line">  url=&quot;jdbc:mysql://xxxx/database?autoReconnect=true&quot;</span><br><span class="line">  driverClassName=&quot;org.gjt.mm.mysql.Driver&quot;</span><br><span class="line">  maxActive=&quot;1000&quot;</span><br><span class="line">  minIdle=&quot;3&quot;</span><br><span class="line">  maxIdle=&quot;5&quot;</span><br><span class="line">  maxWait=&quot;5000&quot;</span><br><span class="line">  removeAbandoned=&quot;true&quot;</span><br><span class="line">  testWhileIdle=&quot;true&quot;</span><br><span class="line">  testOnBorrow=&quot;true&quot;</span><br><span class="line">  validationQuery=&quot;select 1&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><blockquote><p>name - 필수 항목으로서 root java context 인 java:comp/env 에 상대적인 resource 이름이며 jdbc/ 로 시작 (예를 들어 jdbc/sarc)</p></blockquote><blockquote><p>auth - resource manager 에 sign on 하는 주체로 Container (container-managed 일 경우) 혹은 Application (application-managed 일 경우)</p></blockquote><blockquote><p>initialSize - 초기 connection 수로, default 는 0</p></blockquote><blockquote><p>maxActive - 동시 사용 가능한 connection 수로 0 일 경우 무제한이며, default 는 8<br>(최대 동시 대여 가능 커넥션수)</p></blockquote><blockquote><p>minIdle - maxActive 를 넘을 수 없으므로 때에 따라 idle connection 이 minIdle 보다 적을 수도 있고, -1 일 경우 무제한이며, default 는 0</p></blockquote><blockquote><p>maxIdle - connection 의 최대 개수로, default 는 8</p></blockquote><blockquote><p>maxWait - 새로운 connection 을 얻기 위해 대기하는 시간 (msec) 으로, 이 시간에 도달하게 되면 exception 이 발생하며, default 는 -1 로 무제한</p></blockquote><blockquote><p>validationQuery - connection 유효성 체크 query 로 default 는 null 이다. 만일 MySQL/MariaDB/PPAS/PostgreSQL 에 적용하려면 select 1, Oracle 에 적용하려면 select 1 from dual 을 사용</p></blockquote><blockquote><p>removeAbandoned - 대여시간 초과했는데 반납 안된 커넥션 처리</p></blockquote><blockquote><p>removeAbandonedTimeout - 대여시간 설정 ( 1=5초 60=5분 )</p></blockquote><blockquote><p>logAbandoned - 커넥션 삭제시에 로그출력 여부</p></blockquote><blockquote><p>testWhileIdle - 커넥션에 아무런 데이터 송수신이 없을 경우 해당 커넥션이 유효한지 테스트를 할지 여부를 결정.</p></blockquote><blockquote><p>timeBetweenEvictionRunsMillis - 커넥션이 쉬고 있을 때 커넥션 체크 쿼리를 실행하는 시간 간격을 설정. 놀고 있는 connection을 pool에서 제거하는 시간기준 (설정된 시간동안 놀고 있는 connection을 minIdle&amp;maxIdel 설정값을 고려하여 제거.)</p></blockquote><blockquote><p>testOnBorrow - connection pool에서 connection을 가져올 때 해당 connection이 유효성 검사 여부</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ASP 에서 3DES 암호화하는 방법</title>
      <link href="/2014/09/2014-09-19-ASP3DES/"/>
      <url>/2014/09/2014-09-19-ASP3DES/</url>
      
        <content type="html"><![CDATA[<p>ASP 3DES 로 검색을 하면 뜨는 <a href="http://www.example-code.com/asp/3des.asp" rel="external nofollow noopener noreferrer" target="_blank">http://www.example-code.com/asp/3des.asp</a><br>의 소스를 보면</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">set crypt = Server.CreateObject(&quot;Chilkat.Crypt2&quot;)</span><br><span class="line">success = crypt.UnlockComponent(&quot;Anything for 30-day trial&quot;)</span><br><span class="line">If (success &lt;&gt; 1) Then</span><br><span class="line">    &apos;  Unlock failed.</span><br><span class="line">    Response.Write crypt.LastErrorText &amp; &quot;&lt;br&gt;&quot;</span><br><span class="line"></span><br><span class="line">End If</span><br></pre></td></tr></table></figure><p>문제는 Chilkat.Crypt2 는 유료다.<br>유료화된 암호화 툴을 쓸수가 없기 때문에 인터넷을 검색해보니 Platform SDK: CAPICOM 라는 것을 찾을 수 있었다.<br>우선<br><a href="http://www.microsoft.com/ko-kr/download/details.aspx?id=25281" rel="external nofollow noopener noreferrer" target="_blank">http://www.microsoft.com/ko-kr/download/details.aspx?id=25281</a> 로 가서 다운로드를 받는다.<br>CAPICOM 2.1.0.1과 여기서 사용되는 샘플에 필요한 재배포 가능 파일을 포함하는 다운로드입니다. CAPICOM은 디지털 서명 데이터, 서명 코드, 디지털 서명 확인, 개인 정보를 위한 데이터 보호, 데이터 해시, 데이터 암호화/해독 등에 사용할 수 있습니다.<br>다운받고 설치하면 해.결!<br>소스는 매우 간단하다. 인터넷을 조금만 검색하면 소스를 찾을 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">Const CAPICOM_ENCRYPTION_ALGORITHM_RC2 = 0 &apos; Use RSA RC2 encryption. </span><br><span class="line">Const CAPICOM_ENCRYPTION_ALGORITHM_RC4 = 1 &apos; Use RSA RC4 encryption. </span><br><span class="line">Const CAPICOM_ENCRYPTION_ALGORITHM_DES = 2 &apos; Use DES encryption. </span><br><span class="line">Const CAPICOM_ENCRYPTION_ALGORITHM_3DES = 3 &apos; Use triple DES encryption. </span><br><span class="line"></span><br><span class="line">strTestMessage = &quot;Hello World!&quot;</span><br><span class="line">strPassphrase = &quot;A#0x?\$dE&lt;&quot;&apos; NIEMALS die Passphrase &quot;herumliegen&quot; lassen</span><br><span class="line">Set xEncrypt = Server.CreateObject(&quot;CAPICOM.EncryptedData&quot;)</span><br><span class="line">xEncrypt.Content = strTestMessage</span><br><span class="line">xEncrypt.SetSecret strPassphrase</span><br><span class="line">xEncrypt.Algorithm.Name = CAPICOM_ENCRYPTION_ALGORITHM_3DES</span><br><span class="line">strEncryptedMsg = xEncrypt.Encrypt()</span><br><span class="line">Response.Write strEncryptedMsg &amp; &quot;&lt;br/&gt;&quot;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">strPassphrase = &quot;A#0x?\$dE&lt;&quot;&apos; NIEMALS die Passphrase &quot;herumliegen&quot; lassen</span><br><span class="line">Set xEncrypt = Server.CreateObject(&quot;CAPICOM.EncryptedData&quot;)</span><br><span class="line">xEncrypt.SetSecret strPassphrase</span><br><span class="line">xEncrypt.Algorithm.Name = CAPICOM_ENCRYPTION_ALGORITHM_3DES</span><br><span class="line">xEncrypt.Decrypt(strEncryptedMsg)</span><br><span class="line">strPlainText = xEncrypt.Content</span><br><span class="line">Response.Write strPlainText</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>물론 필자는 dll 파일이 등록이 안되서 매우 고생을 했지만!! 어떻게 해결했는지는 비.밀!<br>(티스토리에서 github 으로 옮기면서 비.밀 이라고 적어놨는데, 어떻게 했는지 기억이 안난다. 해당 기능은 asp 쪽의 세션을 훔쳐서 불법으로 뭔가를 다운받기 위한 오덕스러운 짓이었던걸로 기억해서, 비밀로 한거 같은데..)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DB 현재 날짜에서 3일전을 검색하기</title>
      <link href="/2014/09/2014-09-03-3DAYDUMP/"/>
      <url>/2014/09/2014-09-03-3DAYDUMP/</url>
      
        <content type="html"><![CDATA[<h2 id="DB-현재-날짜에서-3일전을-검색하기"><a href="#DB-현재-날짜에서-3일전을-검색하기" class="headerlink" title="DB 현재 날짜에서 3일전을 검색하기"></a>DB 현재 날짜에서 3일전을 검색하기</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM 테이블 WHERE 컬럼 &gt;=(CURDATE()-INTERVAL 3 DAY);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM 테이블 WHERE 컬럼 &gt;=dateadd(day,-3,getdate())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP Client (서버 to 서버)</title>
      <link href="/2014/02/2014-02-05-HTTPCLIENT/"/>
      <url>/2014/02/2014-02-05-HTTPCLIENT/</url>
      
        <content type="html"><![CDATA[<p>관련주소 : <a href="http://javacan.tistory.com/60" rel="external nofollow noopener noreferrer" target="_blank">http://javacan.tistory.com/60</a> 를 보고 따라한<br>관련주소 : <a href="http://hyunisjolly.blogspot.kr/2012/04/http-client.html" rel="external nofollow noopener noreferrer" target="_blank">http://hyunisjolly.blogspot.kr/2012/04/http-client.html</a><br>를 따라함.</p><p>회사에서 사용한다고 해서 만들었는데,<br>안쓰게 되서 우선 블로그에 킵해둡니다. 서버에서 받아서 다른 서버로 파일을 보내는,<br>서버to서버 파일 전송 Class 입니다.<br>기존 소스에서 MultipartFile 을 받아서 처리할 수 있도록 작업하였습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * HTTP 요청을 전송한 후, 응답을 받아오는 유틸리티 클래스</span><br><span class="line"> * </span><br><span class="line"> * GET 방식과 POST 방식으로 데이터를 전송해주며</span><br><span class="line"> * POST 방식의 경우 multipart/form-date 인코딩 방식도 지원해준다.</span><br><span class="line"> * &lt;/pre&gt;</span><br><span class="line"> * @history : </span><br><span class="line"> * ------------------------------------------------------------------</span><br><span class="line"> * 변경일  작성자   변경내용</span><br><span class="line"> * ------------------------------------------------------------------</span><br><span class="line"> * 2013. 11. 25. 젊은광대 최초작성</span><br><span class="line"> * </span><br><span class="line"> * ------------------------------------------------------------------</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.io.BufferedOutputStream;</span><br><span class="line">import java.io.DataOutputStream;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line">import java.io.StringWriter;</span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line"></span><br><span class="line">import java.net.HttpURLConnection;</span><br><span class="line">import java.net.MalformedURLException;</span><br><span class="line">import java.net.URL;</span><br><span class="line">//import java.net.URLConnection;</span><br><span class="line">import java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class HttpRequest &#123;</span><br><span class="line"></span><br><span class="line">    public static final String CRLF = &quot;\r\n&quot;;</span><br><span class="line">    </span><br><span class="line">    protected URL targetURL; // 연결할 URL</span><br><span class="line">    protected String encoding = &quot;UTF-8&quot;;   // String encoding</span><br><span class="line">    </span><br><span class="line">    /** HTTP HEADER **/</span><br><span class="line">    private ArrayList&lt;Object&gt; requestHeader;</span><br><span class="line">//    private ArrayList&lt;Object&gt; responseHeader;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 파라미터 목록을 저장하고 있다.</span><br><span class="line">     * 파라미터 이름과 값이 차례대로 저장된다.</span><br><span class="line">     */</span><br><span class="line">    private ArrayList&lt;Object&gt; params;    </span><br><span class="line">    private int responseCode;  // 응답코드</span><br><span class="line">    private String responseMessage; // 응답메시지</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    public HttpRequest()&#123;</span><br><span class="line">     reset();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * CONSTRUCTOR</span><br><span class="line">     */</span><br><span class="line">    public HttpRequest(URL target)&#123;</span><br><span class="line">     reset();</span><br><span class="line">     this.targetURL  = target;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void setTargetUrl(String targetURL) &#123;</span><br><span class="line">     try &#123;</span><br><span class="line">   this.targetURL = new URL(targetURL);</span><br><span class="line">  &#125; catch (MalformedURLException e) &#123;</span><br><span class="line">   e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * CONSTRUCTOR</span><br><span class="line">     *</span><br><span class="line">     * @param target HTTP 메시지를 전송할 대상 URL</span><br><span class="line">     */</span><br><span class="line">    public HttpRequest(URL target, String encoding) &#123;</span><br><span class="line">     reset();</span><br><span class="line">     this.targetURL  = target;</span><br><span class="line">     if ( encoding != null &amp;&amp; encoding.equals(&quot;&quot;) == false ) &#123; this.encoding  = encoding; &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * CONSTRUCTOR</span><br><span class="line">     *</span><br><span class="line">     * @param target HTTP 메시지를 전송할 대상 URL</span><br><span class="line">     */</span><br><span class="line">    public HttpRequest(URL target, String encoding, int initialCapicity) &#123;</span><br><span class="line">     reset();</span><br><span class="line">     this.targetURL  = target;</span><br><span class="line">     if ( encoding != null &amp;&amp; encoding.equals(&quot;&quot;) == false ) &#123; this.encoding  = encoding; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void reset()</span><br><span class="line">    &#123;</span><br><span class="line">     this.targetURL    = null;</span><br><span class="line">     this.requestHeader   = new ArrayList&lt;Object&gt;();</span><br><span class="line">     // this.responseHeader  = new ArrayList&lt;Object&gt;();</span><br><span class="line">     this.params    = new ArrayList&lt;Object&gt;();</span><br><span class="line">     this.responseCode  = -1;</span><br><span class="line">     this.responseMessage = &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * INITIALIZE</span><br><span class="line">     * @param target</span><br><span class="line">     */</span><br><span class="line">    public void init(URL target) &#123;</span><br><span class="line">     reset();</span><br><span class="line">     this.targetURL  = target;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * INITIALIZE</span><br><span class="line">     * @param target</span><br><span class="line">     * @param encoding</span><br><span class="line">     */</span><br><span class="line">    public void init(URL target, String encoding) &#123;</span><br><span class="line">     reset();</span><br><span class="line">     this.targetURL  = target;</span><br><span class="line">     if ( encoding != null &amp;&amp; encoding.equals(&quot;&quot;) == false ) &#123; this.encoding  = encoding; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /*****************************************************/</span><br><span class="line">    </span><br><span class="line">    public void addHeader(String parameterName, String parameterValue)</span><br><span class="line">    &#123;</span><br><span class="line">        if (parameterValue == null)</span><br><span class="line">            throw new IllegalArgumentException(&quot;Parameter Value can&apos;t be null(parameterName:&quot;+parameterName+&quot;)!&quot;);</span><br><span class="line"></span><br><span class="line">        requestHeader.add(parameterName);</span><br><span class="line">        requestHeader.add(parameterValue);     </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 파라미터를 추가한다.</span><br><span class="line">     * @param parameterName 파라미터 이름</span><br><span class="line">     * @param parameterValue 파라미터 값</span><br><span class="line">     * @exception IllegalArgumentException parameterValue가 null일 경우</span><br><span class="line">     */</span><br><span class="line">    public void addParameter(String parameterName, Object parameterValue) &#123;</span><br><span class="line">        if (parameterValue == null)</span><br><span class="line">        throw new IllegalArgumentException(&quot;Parameter Value can&apos;t be null(parameterName:&quot;+parameterName+&quot;)!&quot;);</span><br><span class="line"></span><br><span class="line">        params.add(parameterName);</span><br><span class="line">        params.add(parameterValue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 파일 파라미터를 추가한다.</span><br><span class="line">     * 만약 parameterValue가 null이면(즉, 전송할 파일을 지정하지 않는다면</span><br><span class="line">     * 서버에 전송되는 filename 은 &quot;&quot; 이 된다.</span><br><span class="line">     *</span><br><span class="line">     * @param parameterName 파라미터 이름</span><br><span class="line">     * @param parameterValue 전송할 파일</span><br><span class="line">     * @exception IllegalArgumentException parameterValue가 null일 경우</span><br><span class="line">     */</span><br><span class="line">    public void addFile(String parameterName, File parameterValue) &#123;</span><br><span class="line">        // paramterValue가 null일 경우 NullFile을 삽입한다.</span><br><span class="line">        if (parameterValue == null) &#123;</span><br><span class="line">         params.add(parameterName);</span><br><span class="line">         params.add(new NullFile());</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">         params.add(parameterName);</span><br><span class="line">         params.add(parameterValue);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 파일 파라미터를 추가한다.</span><br><span class="line">     * 만약 parameterValue가 null이면(즉, 전송할 파일을 지정하지 않는다면</span><br><span class="line">     * 서버에 전송되는 filename 은 &quot;&quot; 이 된다.</span><br><span class="line">     *</span><br><span class="line">     * @param parameterName 파라미터 이름</span><br><span class="line">     * @param parameterValue 전송할 파일</span><br><span class="line">     * @exception IllegalArgumentException parameterValue가 null일 경우</span><br><span class="line">     */</span><br><span class="line">    public void addMultiFile(String parameterName, MultipartFile parameterValue) &#123;</span><br><span class="line">        // paramterValue가 null일 경우 NullFile을 삽입한다.</span><br><span class="line">        if (parameterValue == null) &#123;</span><br><span class="line">         params.add(parameterName);</span><br><span class="line">         params.add(new NullFile());</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">         params.add(parameterName);</span><br><span class="line">         params.add(parameterValue);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 지금까지 지정한 파라미터를 모두 삭제한다.</span><br><span class="line">     */</span><br><span class="line">    public void clearParameters() &#123;</span><br><span class="line">     params.clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /*****************************************************/</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * GET 방식으로 대상 URL에 파라미터를 전송한 후</span><br><span class="line">     * 응답을 InputStream으로 리턴한다.</span><br><span class="line">     * @return InputStream</span><br><span class="line">     */</span><br><span class="line">    public InputStream sendGet() throws Exception &#123;</span><br><span class="line">     </span><br><span class="line">        String paramString = null;</span><br><span class="line">        if (params.size() &gt; 0)</span><br><span class="line">            paramString = &quot;?&quot; + encodeString(params);</span><br><span class="line">        else</span><br><span class="line">            paramString = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">        URL url = new URL(targetURL.toExternalForm() + paramString);</span><br><span class="line">        </span><br><span class="line">        HttpURLConnection conn = (HttpURLConnection)url.openConnection();     </span><br><span class="line">        conn.setRequestMethod(&quot;GET&quot;);</span><br><span class="line"></span><br><span class="line">        // conn.setDoInput(true);</span><br><span class="line">        conn.setDoOutput(true);</span><br><span class="line">        // conn.setUseCaches(true);</span><br><span class="line"></span><br><span class="line">        if (requestHeader != null &amp;&amp; requestHeader.size() &gt; 0) &#123;</span><br><span class="line">         for(int i=0, j=requestHeader.size(); i&lt;j; i++) &#123;</span><br><span class="line">          String name = (String)requestHeader.get(i);</span><br><span class="line">          i++;</span><br><span class="line">          String value = (String)requestHeader.get(i);</span><br><span class="line">          conn.setRequestProperty(name, value);</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        conn.connect();</span><br><span class="line">       </span><br><span class="line">        this.responseCode   = conn.getResponseCode();</span><br><span class="line">        this.responseMessage  = conn.getResponseMessage();</span><br><span class="line">        </span><br><span class="line">        for (int i=0; ; i++) &#123;</span><br><span class="line">            String headerName  = conn.getHeaderFieldKey(i);</span><br><span class="line">            String headerValue  = conn.getHeaderField(i);</span><br><span class="line"></span><br><span class="line">            if (headerName == null &amp;&amp; headerValue == null) &#123;</span><br><span class="line">                // No more headers</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (headerName == null) &#123;</span><br><span class="line">                // The header value contains the server&apos;s HTTP version</span><br><span class="line">             break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        return conn.getInputStream();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * POST 방식으로 대상 URL에 파라미터를 전송한 후</span><br><span class="line">     * 응답을 InputStream으로 리턴한다.</span><br><span class="line">     * @return InputStream</span><br><span class="line">     */</span><br><span class="line">    public InputStream sendPost() throws Exception &#123;</span><br><span class="line">        String paramString = null;</span><br><span class="line">        if (params.size() &gt; 0)</span><br><span class="line">            paramString = encodeString(params);</span><br><span class="line">        else</span><br><span class="line">            paramString = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">        HttpURLConnection conn = (HttpURLConnection)targetURL.openConnection();</span><br><span class="line">        conn.setRequestMethod(&quot;POST&quot;);</span><br><span class="line">        conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line">        </span><br><span class="line">        if (requestHeader != null &amp;&amp; requestHeader.size() &gt; 0) &#123;</span><br><span class="line">         for(int i=0, j=requestHeader.size(); i&lt;j; i++) &#123;</span><br><span class="line">          String name = (String)requestHeader.get(i);</span><br><span class="line">          i++;</span><br><span class="line">          String value = (String)requestHeader.get(i);</span><br><span class="line">          conn.setRequestProperty(name, value);</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        conn.setDoInput(true);</span><br><span class="line">        conn.setDoOutput(true);</span><br><span class="line">        conn.setUseCaches(false);</span><br><span class="line"></span><br><span class="line">        DataOutputStream out = null;</span><br><span class="line">        </span><br><span class="line">        try &#123;</span><br><span class="line">            out = new DataOutputStream(conn.getOutputStream());</span><br><span class="line">            out.writeBytes(paramString);</span><br><span class="line">            out.flush();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (out != null) out.close();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        this.responseCode   = conn.getResponseCode();</span><br><span class="line">        this.responseMessage  = conn.getResponseMessage();</span><br><span class="line">        </span><br><span class="line">        for (int i=0; ; i++) &#123;</span><br><span class="line">            String headerName  = conn.getHeaderFieldKey(i);</span><br><span class="line">            String headerValue  = conn.getHeaderField(i);</span><br><span class="line"></span><br><span class="line">            if (headerName == null &amp;&amp; headerValue == null) &#123;</span><br><span class="line">                // No more headers</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (headerName == null) &#123;</span><br><span class="line">                // The header value contains the server&apos;s HTTP version</span><br><span class="line">             break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        //conn.getResponseCode();</span><br><span class="line">        //conn.getResponseMessage();</span><br><span class="line">        //conn.getErrorStream();</span><br><span class="line">        </span><br><span class="line">        return conn.getInputStream();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * multipart/form-data 인코딩을 사용하여</span><br><span class="line">     * 대상 URL에 데이터를 전송한 후에</span><br><span class="line">     * 응답을 InputStream으로 리턴한다.</span><br><span class="line">     * @return InputStream</span><br><span class="line">     */</span><br><span class="line">    public InputStream sendMultipartPost() throws IOException &#123;</span><br><span class="line">     </span><br><span class="line">        HttpURLConnection conn = (HttpURLConnection)targetURL.openConnection();</span><br><span class="line"></span><br><span class="line">        // Delimeter 생성</span><br><span class="line">        String delimeter = makeDelimeter();</span><br><span class="line"></span><br><span class="line">        byte[] newLineBytes = CRLF.getBytes();</span><br><span class="line">        byte[] delimeterBytes = delimeter.getBytes();</span><br><span class="line">        byte[] dispositionBytes = &quot;Content-Disposition: form-data; name=&quot;.getBytes();</span><br><span class="line">        byte[] quotationBytes = &quot;\&quot;&quot;.getBytes();</span><br><span class="line">        byte[] contentTypeBytes = &quot;Content-Type: application/octet-stream&quot;.getBytes();</span><br><span class="line">        byte[] fileNameBytes = &quot;; filename=&quot;.getBytes();</span><br><span class="line">        byte[] twoDashBytes = &quot;--&quot;.getBytes();</span><br><span class="line"></span><br><span class="line">        conn.setRequestMethod(&quot;POST&quot;);</span><br><span class="line">        conn.setRequestProperty(&quot;Content-Type&quot;, &quot;multipart/form-data; boundary=&quot;+delimeter);</span><br><span class="line"> </span><br><span class="line">        if (requestHeader != null &amp;&amp; requestHeader.size() &gt; 0) &#123;</span><br><span class="line">         for(int i=0, j=requestHeader.size(); i&lt;j; i++) &#123;</span><br><span class="line">          String name = (String)requestHeader.get(i);</span><br><span class="line">          i++;</span><br><span class="line">          String value = (String)requestHeader.get(i);</span><br><span class="line">          conn.setRequestProperty(name, value);</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        conn.setDoInput(true);</span><br><span class="line">        conn.setDoOutput(true);</span><br><span class="line">        conn.setUseCaches(false);</span><br><span class="line"></span><br><span class="line">        BufferedOutputStream out = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            out = new BufferedOutputStream(conn.getOutputStream());</span><br><span class="line"></span><br><span class="line">            Object[] obj = new Object[params.size()];</span><br><span class="line">            params.toArray(obj);</span><br><span class="line"></span><br><span class="line">            for (int i = 0 ; i &lt; obj.length ; i += 2) &#123;</span><br><span class="line">                // Delimeter 전송</span><br><span class="line">                out.write(twoDashBytes);</span><br><span class="line">                out.write(delimeterBytes);</span><br><span class="line">                out.write(newLineBytes);</span><br><span class="line">                // 파라미터 이름 출력</span><br><span class="line">                out.write(dispositionBytes);</span><br><span class="line">                out.write(quotationBytes);</span><br><span class="line">                out.write( ((String)obj[i]).getBytes() );</span><br><span class="line">                out.write(quotationBytes);</span><br><span class="line">                if ( obj[i+1] instanceof String) &#123;</span><br><span class="line">                    // String 이라면</span><br><span class="line">                    out.write(newLineBytes);</span><br><span class="line">                    out.write(newLineBytes);</span><br><span class="line">                    // 값 출력</span><br><span class="line">                    out.write( ((String)obj[i+1]).getBytes() );</span><br><span class="line">                    out.write(newLineBytes);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    // 파라미터의 값이 File 이나 NullFile인 경우</span><br><span class="line">                    if ( obj[i+1] instanceof File) &#123;</span><br><span class="line">                        File file = (File)obj[i+1];</span><br><span class="line">                        // File이 존재하는 지 검사한다.</span><br><span class="line">                        out.write(fileNameBytes);</span><br><span class="line">                        out.write(quotationBytes);</span><br><span class="line">                        out.write(file.getAbsolutePath().getBytes() );</span><br><span class="line">                        out.write(quotationBytes);</span><br><span class="line">                    &#125; else if ( obj[i+1] instanceof MultipartFile) &#123;</span><br><span class="line">                     MultipartFile file = (MultipartFile)obj[i+1];</span><br><span class="line">                        // File이 존재하는 지 검사한다.</span><br><span class="line">                        out.write(fileNameBytes);</span><br><span class="line">                        out.write(quotationBytes);</span><br><span class="line">                        out.write(file.getOriginalFilename().getBytes() );</span><br><span class="line">                        out.write(quotationBytes);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        // NullFile 인 경우</span><br><span class="line">                        out.write(fileNameBytes);</span><br><span class="line">                        out.write(quotationBytes);</span><br><span class="line">                        out.write(quotationBytes);</span><br><span class="line">                    &#125;</span><br><span class="line">                    out.write(newLineBytes);</span><br><span class="line">                    out.write(contentTypeBytes);</span><br><span class="line">                    out.write(newLineBytes);</span><br><span class="line">                    out.write(newLineBytes);</span><br><span class="line">                    // File 데이터를 전송한다.</span><br><span class="line">                    if (obj[i+1] instanceof File) &#123;</span><br><span class="line">                        File file = (File)obj[i+1];</span><br><span class="line">                        // file에 있는 내용을 전송한다.</span><br><span class="line">                        BufferedInputStream is = null;</span><br><span class="line">                        try &#123;</span><br><span class="line">                            is = new BufferedInputStream(new FileInputStream(file));</span><br><span class="line">                            byte[] fileBuffer = new byte[1024 * 8]; // 8k</span><br><span class="line">                            int len = -1;</span><br><span class="line">                            while ( (len = is.read(fileBuffer)) != -1) &#123;</span><br><span class="line">                                out.write(fileBuffer, 0, len);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; finally &#123;</span><br><span class="line">                            if (is != null) try &#123; is.close(); &#125; catch(IOException ex) &#123;&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; else if ( obj[i+1] instanceof MultipartFile) &#123;</span><br><span class="line">                     MultipartFile file = (MultipartFile)obj[i+1];</span><br><span class="line">                        // MultipartFile 있는 내용을 전송한다.</span><br><span class="line">                        BufferedInputStream is = null;</span><br><span class="line">                        try &#123;</span><br><span class="line">                            is = new BufferedInputStream(file.getInputStream());</span><br><span class="line">                            byte[] fileBuffer = new byte[1024 * 8]; // 8k</span><br><span class="line">                            int len = -1;</span><br><span class="line">                            while ( (len = is.read(fileBuffer)) != -1) &#123;</span><br><span class="line">                                out.write(fileBuffer, 0, len);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; finally &#123;</span><br><span class="line">                            if (is != null) try &#123; is.close(); &#125; catch(IOException ex) &#123;&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    out.write(newLineBytes);</span><br><span class="line">                &#125; // 파일 데이터의 전송 블럭 끝</span><br><span class="line">                if ( i + 2 == obj.length ) &#123;</span><br><span class="line">                    // 마지막 Delimeter 전송</span><br><span class="line">                    out.write(twoDashBytes);</span><br><span class="line">                    out.write(delimeterBytes);</span><br><span class="line">                    out.write(twoDashBytes);</span><br><span class="line">                    out.write(newLineBytes);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; // for 루프의 끝</span><br><span class="line"></span><br><span class="line">            out.flush();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (out != null) out.close();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        this.responseCode   = conn.getResponseCode();</span><br><span class="line">        this.responseMessage  = conn.getResponseMessage();</span><br><span class="line"></span><br><span class="line">        for (int i=0; ; i++) &#123;</span><br><span class="line">            String headerName  = conn.getHeaderFieldKey(i);</span><br><span class="line">            String headerValue  = conn.getHeaderField(i);</span><br><span class="line"></span><br><span class="line">            if (headerName == null &amp;&amp; headerValue == null) &#123;</span><br><span class="line">                // No more headers</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (headerName == null) &#123;</span><br><span class="line">                // The header value contains the server&apos;s HTTP version</span><br><span class="line">             break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        return conn.getInputStream();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 응답 코드를 얻는다.</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public int getResponseCode()</span><br><span class="line">    &#123;</span><br><span class="line">     return this.responseCode;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 응답 메시지를 얻는다.</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public String getResponseMessage()</span><br><span class="line">    &#123;</span><br><span class="line">     return this.responseMessage;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * Response Stream을 읽어 String으로 리턴한다.</span><br><span class="line">     * @param is</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static String readResponseToString(InputStream is, String encoding) </span><br><span class="line">    &#123;  </span><br><span class="line">     if ( encoding == null || encoding.equals(&quot;&quot;) ) &#123;</span><br><span class="line">      encoding = &quot;UTF-8&quot;;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     StringWriter  out  = null;</span><br><span class="line">  BufferedReader  br   = null;</span><br><span class="line">  String response = &quot;&quot;;</span><br><span class="line">  try &#123;  </span><br><span class="line"></span><br><span class="line">   br = new BufferedReader(new InputStreamReader(is, encoding));</span><br><span class="line">   out = new StringWriter();</span><br><span class="line">   </span><br><span class="line">   String temp; </span><br><span class="line">   while ((temp = br.readLine()) != null) &#123;</span><br><span class="line">    out.write(temp+CRLF);</span><br><span class="line">   &#125;</span><br><span class="line">   br.close();</span><br><span class="line">   response = out.toString().trim();</span><br><span class="line">   out.close();</span><br><span class="line">   is.close();</span><br><span class="line">  &#125; catch (Exception e) &#123;</span><br><span class="line">   e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">     finally &#123;</span><br><span class="line">   try&#123;</span><br><span class="line">    if (out != null ) &#123; out.close(); &#125;</span><br><span class="line">    if (br != null ) &#123; br.close(); &#125;</span><br><span class="line">    if (is != null ) &#123; is.close(); &#125;</span><br><span class="line">   &#125; catch (Exception e)&#123;&#125;</span><br><span class="line">     &#125;</span><br><span class="line">  </span><br><span class="line">  return response;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 지정한 ArrayList에 저장되어 있는 파라미터&amp;값 목록을</span><br><span class="line">     * application/x-www-form-urlencoded MIME에 맞춰서 인코딩한다.</span><br><span class="line">     * 파라미터의 값의 타입이 File일 경우에는 그 파라미터를 무시하고</span><br><span class="line">     * 다음 파라미터를 처리한다.</span><br><span class="line">     *</span><br><span class="line">     * @param parameters 파라미터 이름과 파라미터 값을 저장하고 있는 객체</span><br><span class="line">     * @return 인코딩된 String</span><br><span class="line">     */</span><br><span class="line">    protected static String encodeString(ArrayList&lt;Object&gt; parameters) throws Exception &#123;</span><br><span class="line">        StringBuffer sb = new StringBuffer(256);</span><br><span class="line"></span><br><span class="line">        Object[] obj = new Object[parameters.size()];</span><br><span class="line">        parameters.toArray(obj);</span><br><span class="line"></span><br><span class="line">        for (int i = 0 ; i &lt; obj.length ; i += 2) &#123;</span><br><span class="line">            if ( obj[i+1] instanceof File || obj[i+1] instanceof NullFile ) continue;</span><br><span class="line"></span><br><span class="line">            sb.append(URLEncoder.encode(((String)obj[i]), &quot;UTF-8&quot;));</span><br><span class="line">            sb.append(&apos;=&apos;);</span><br><span class="line">            sb.append(URLEncoder.encode(((String)obj[i+1]), &quot;UTF-8&quot;));</span><br><span class="line"></span><br><span class="line">            if (i + 2 &lt; obj.length) sb.append(&apos;&amp;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * multipart/form-data 로 데이터를 전송할 때 사용되는</span><br><span class="line">     * 딜리미터를 생성한다.</span><br><span class="line">     * &lt;p&gt;</span><br><span class="line">     * 임의로 생성하지 않고 매번 같은 딜리미터를 생성한다.</span><br><span class="line">     */</span><br><span class="line">    protected static String makeDelimeter() </span><br><span class="line">    &#123;</span><br><span class="line">        return &quot;---------------------------7d115d2a20060c&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 전송할 파일을 지정하지 않은 경우에 사용되는 클래스</span><br><span class="line">     */</span><br><span class="line">    protected class NullFile &#123;</span><br><span class="line">        NullFile() &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        public String toString() &#123;</span><br><span class="line">            return &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>사용방법은 다음과 같습니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> public static Map postForFile(String url, Map param, File file) &#123;</span><br><span class="line">  HttpRequest httpRequest = new HttpRequest();</span><br><span class="line">  Iterator iterator = param.entrySet().iterator();</span><br><span class="line">  while (iterator.hasNext()) &#123;</span><br><span class="line">   Entry entry = (Entry) iterator.next();</span><br><span class="line">   httpRequest.addParameter((String)entry.getKey(), entry.getValue());</span><br><span class="line">  &#125;</span><br><span class="line">  httpRequest.addFile(FILE_ID, file);</span><br><span class="line">  </span><br><span class="line">  InputStream is = null;</span><br><span class="line">  BufferedReader br = null;</span><br><span class="line">  Map&lt;String, Object&gt; result = new HashMap&lt;String, Object&gt;();</span><br><span class="line">  StringBuffer json = new StringBuffer();</span><br><span class="line">  </span><br><span class="line">  try &#123;</span><br><span class="line">   is = httpRequest.sendMultipartPost();</span><br><span class="line">   br = new BufferedReader(new InputStreamReader(is));</span><br><span class="line">      String jsonString = &quot;&quot;;</span><br><span class="line">      </span><br><span class="line">      while ((jsonString = br.readLine()) != null) &#123;</span><br><span class="line">       json.append(jsonString);</span><br><span class="line">   &#125;</span><br><span class="line">  &#125; catch (IOException e) &#123;</span><br><span class="line">   e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">//     JSONObject paramJson = (JSONObject) JSONSerializer.toJSON( json.toString() ); </span><br><span class="line">     JSONObject paramJson = (JSONObject) JSONObject.fromObject( json.toString() );</span><br><span class="line">     </span><br><span class="line">     String errorMessage = (String) paramJson.get(ERROR_MESSAGE);</span><br><span class="line">     String errorCode = (String) paramJson.get(ERROR_CODE);</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">     if (!SUCCESS_CODE.equals(errorCode)) &#123;</span><br><span class="line">      logger.debug(&quot;ErrorCode :::::: &quot; + errorCode);</span><br><span class="line">      logger.debug(&quot;ErrorMessage :::::: &quot; + errorMessage);</span><br><span class="line">      </span><br><span class="line">      result.put(&quot;errorMessage&quot;, errorMessage);</span><br><span class="line">      result.put(&quot;errorCode&quot;, errorCode);</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">  return result;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>이클립스  Code Template 관련</title>
      <link href="/2013/10/2013-10-22-CODETEMPLATE/"/>
      <url>/2013/10/2013-10-22-CODETEMPLATE/</url>
      
        <content type="html"><![CDATA[<p>Window &gt; Preferences &gt; Java &gt; Code Style &gt; Code Template 에서 원하는 주소 타입을 정의한 후 우측 하단의 Apply 을 클릭합니다.</p><p>원하시는 주석을 달 위치(클래스명, 메소드명)에 마우스를 클릭하신후 단축키 alt+shift+J(알트+쉬프트+제이)를 누르시면 주석이 생성됩니다.</p><p>클래스에 넣을 주석 형식을 Types 에 간단하게 정의해서 넣어주시면됩니다. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * &lt;pre&gt;</span><br><span class="line"> * File : $&#123;file_name&#125;</span><br><span class="line"> * &lt;/pre&gt;</span><br><span class="line"> * @history : </span><br><span class="line"> * ------------------------------------------------------------------</span><br><span class="line"> * 변경일  작성자   변경내용</span><br><span class="line"> * ------------------------------------------------------------------</span><br><span class="line"> * $&#123;date&#125; $&#123;user&#125;  최초작성</span><br><span class="line"> * </span><br><span class="line"> * ------------------------------------------------------------------</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>또한 임의로 정의된 변수명을 원하는 변수명으로 넣을 경우에는 eclipse.ini 파일을 수정하시면됩니다.</p><p>예를 들어 ${user}의 값을 변경하고 싶을 경우<br>eclipse.ini 파일에 -Duser.name=(원하는계정명) 을 입력하시면 됩니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>php 서버를 윈도우 서버에서 테스트하기</title>
      <link href="/2013/10/2013-10-22-XAMPP/"/>
      <url>/2013/10/2013-10-22-XAMPP/</url>
      
        <content type="html"><![CDATA[<p>요즘 그누보드로 가볍게 서버를 하나 만들어서 가지고 놀고 있는데, 집에서 로컬서버 뛰우기 위한<br>php 서버를 인터넷을 검색해보면 [apmsetup] 이라는 프로그램만 검색이 된다.</p><p>예전부터 사용하던 서버가 XAMPP 인데 정말 검색이 안된다.<br>“php 서버” 로 검색하면 검색이 안된다.</p><p>XAMPP 주소 : <a href="http://www.apachefriends.org/en/xampp.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.apachefriends.org/en/xampp.html</a></p><p>XAMPP 의 장점은 설치할때, Apache, MySQL, FileZilla FTP Server, Mercury Mail Server, Tomcat 이 한번에 깔린다.<br>난 php 개발자가 아니므로, 추가적으로 설정없이 또한 PHP 와 동시에 Perl 이 깔리며,<br>phpMyAdmin 까지 저절로 깔리기 때문에 따로 쿼리를 날리기 위해 TOAD 같은 쿼리툴 프로그램을 깔필요가 없어 편하게 사용하고 있다.</p><p>다만 32bit 용밖에 없고, 영문이라는 것만 빼면 정말 좋은 프로그램이다.</p><p>XAMPP 다운로드 주소 :<br><a href="http://sourceforge.net/projects/xampp/files/XAMPP%20Windows/1.8.2/xampp-win32-1.8.2-2-VC9-installer.exe/download?use_mirror=jaist&amp;download=" rel="external nofollow noopener noreferrer" target="_blank">http://sourceforge.net/projects/xampp/files/XAMPP%20Windows/1.8.2/xampp-win32-1.8.2-2-VC9-installer.exe/download?use_mirror=jaist&amp;download=</a></p><p>여담으로 별도의 재미를 위해 이미 asp 로 80port 를 사용하고 있었기 때문에<br>81port 로 바꿔서 쓰고 싶었는데 이런 부분에서 사용하기가 편한 인터페이스라 XAMPP 를 잘쓰고 있다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 에서 현재 리눅스인지 윈도우 환경인지 아는 법</title>
      <link href="/2013/10/2013-10-14-WINDOWLINUX/"/>
      <url>/2013/10/2013-10-14-WINDOWLINUX/</url>
      
        <content type="html"><![CDATA[<p>관련 주소 : <a href="http://stackoverflow.com/questions/2357758/what-does-system-getpropertyos-name-return-in-latest-windows-oss" rel="external nofollow noopener noreferrer" target="_blank">http://stackoverflow.com/questions/2357758/what-does-system-getpropertyos-name-return-in-latest-windows-oss</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String osName = System.getProperty(&quot;os.name&quot;);</span><br><span class="line">    if (osName.equals(&quot;Windows NT&quot;) || osName.equals(&quot;Windows 2000&quot;) || osName.equals(&quot;Windows XP&quot;)) &#123;</span><br><span class="line">        cmd = new String[3];</span><br><span class="line">        cmd[0] = WINDOWS_NT_2000_COMMAND_1;</span><br><span class="line">        cmd[1] = WINDOWS_NT_2000_COMMAND_2;</span><br><span class="line">        cmd[2] = command;</span><br><span class="line">    &#125; else if (osName.equals(&quot;Windows 95&quot;) || osName.equals(&quot;Windows 98&quot;) || osName.equalsIgnoreCase(&quot;Windows ME&quot;)) &#123;</span><br><span class="line">        cmd = new String[3];</span><br><span class="line">        cmd[0] = WINDOWS_9X_ME_COMMAND_1;</span><br><span class="line">        cmd[1] = WINDOWS_9X_ME_COMMAND_2;</span><br><span class="line">        cmd[2] = command;</span><br></pre></td></tr></table></figure><p>조건절을 주어</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String shellmkdir = &quot;mkdir -p&quot; + &quot; &quot; + dest;</span><br><span class="line">String shellcp = &quot;cp -rf&quot; + &quot; &quot; + target + &quot; &quot; + dest;</span><br><span class="line">String[] commanddir = &#123; &quot;cmd&quot;, &quot;/c&quot;, shellmkdir &#125;;</span><br><span class="line">String[] commandcp = &#123; &quot;cmd&quot;, &quot;/c&quot;, shellcp &#125;;</span><br></pre></td></tr></table></figure><p>와<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String shellmkdir = &quot;mkdir -p&quot; + &quot; &quot; + dest;</span><br><span class="line">String shellcp = &quot;cp -rf&quot; + &quot; &quot; + target + &quot; &quot; + dest;</span><br><span class="line">String[] commanddir = &#123; &quot;/bin/sh&quot;, &quot;-c&quot;, shellmkdir &#125;;</span><br><span class="line">String[] commandcp = &#123; &quot;/bin/sh&quot;, &quot;-c&quot;, shellcp &#125;;</span><br></pre></td></tr></table></figure></p><p>로 분기합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Couchbase IP address seems to have changed. Unable to listen on &#39;ns_1</title>
      <link href="/2012/12/2012-12-12-Couchbase/"/>
      <url>/2012/12/2012-12-12-Couchbase/</url>
      
        <content type="html"><![CDATA[<ol><li>C:\Program Files\Couchbase\Server\bin 경로로 이동합니다.</li><li>C:\Program Files\Couchbase\Server\bin\service_stop.bat 로 서비스를 멈춥니다.</li><li>C:\Program Files\Couchbase\Server\bin\service_unregister.bat 로 레지스터를 지웁니다.</li><li>C:\Program Files\Couchbase\Server\bin\service_register.bat 를 편집기로 엽니다.</li><li>앞에 내용 중 NS_NAME=ns_1@%IP_ADDR% 이 부분을 <a href="mailto:NS_NAME=ns_1@127.0.0.1" rel="external nofollow noopener noreferrer" target="_blank">NS_NAME=ns_1@127.0.0.1</a> 등으로 바꿉니다. (아무 아이피바꿔도 크게 문제없습니다.)</li><li>C:\Program Files\Couchbase\Server\var\lib\couchbase\mnesia 폴더를 지웁니다.</li><li>C:\Program Files\Couchbase\Server\bin\service_register.bat 로 레지스터를 재등록합니다.</li><li>C:\Program Files\Couchbase\Server\bin\service_start.bat 로 서비스를 시작합니다.</li><li>다시 couchebase 창을 열면 재등록을 해야합니다. 재등록 후에는 저런 경고창이 뜨지 않습니다.</li></ol><p>로컬에서 카우치베이스 테스트하다가 에러가 나는 경우에 대한 대응 방법.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>자바에서 xml 문서를 xsd 로 유효성 검사하는 방법</title>
      <link href="/2012/11/2012-11-29-XMLXSD/"/>
      <url>/2012/11/2012-11-29-XMLXSD/</url>
      
        <content type="html"><![CDATA[<p>따로 jar 파일을 import 할 필요없이, Java 5.0 버전 이상 부터는 javax.xml.validation 패키지가 도입되었습니다.<br>그로 인해 javax.xml.validation API 에서는 SchemaFactory, Schema 및 Validator라는 세 개의 클래스를 사용하여,<br>문서의 유효성을 검증합니다.</p><p>밑의 소스는 유효성을 할 기본 Validator 를 xsd 로 하여 xml 을 유효성 검사하는 소스입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">import javax.xml.transform.Source;</span><br><span class="line">import javax.xml.transform.stream.StreamSource;</span><br><span class="line">import javax.xml.validation.*;</span><br><span class="line">import org.xml.sax.SAXException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Class Name : XSDCheck Description :</span><br><span class="line"> * @author 젊은광대</span><br><span class="line"> * @since 2012.11.29</span><br><span class="line"> * @version 1.0</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">public class XSDCheck &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// 1. W3C XML Schema language 객체를 생성하기 위한 API 검증용 Entry-point 입니다.</span><br><span class="line">SchemaFactory factory = SchemaFactory</span><br><span class="line">.newInstance(&quot;http://www.w3.org/2001/XMLSchema&quot;);</span><br><span class="line"></span><br><span class="line">String xsd = &quot;C:\\xsd\\movie1.xsd&quot;; // xsd 파일위치</span><br><span class="line">String xml = &quot;C:\\xsd\\movies.xml&quot;; // 유효성을 검사할 xml 파일위치</span><br><span class="line"></span><br><span class="line">File schemaLocation;</span><br><span class="line">Schema schema;</span><br><span class="line">Validator validator;</span><br><span class="line">try &#123;</span><br><span class="line">// 2. 정의된 xsd 파일을 불러옵니다.</span><br><span class="line">schemaLocation = new File(xsd);</span><br><span class="line">schema = factory.newSchema(schemaLocation);</span><br><span class="line">// 3. 가져온 스키마로 유효성 검사 도구를 만듭니다.</span><br><span class="line">validator = schema.newValidator();</span><br><span class="line"></span><br><span class="line">// 4. xml 파일을 불러옵니다.</span><br><span class="line">Source source = new StreamSource(xml);</span><br><span class="line"></span><br><span class="line">// 5. 해당 xml 을 유효성을 검사합니다.</span><br><span class="line">validator.validate(source);</span><br><span class="line"></span><br><span class="line">System.out.println(xml + &quot; is valid.&quot;); // 유효성 검사 성공</span><br><span class="line"></span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">System.out.println(xml + &quot; is not found &quot;); // 파일을 찾을 수 없습니다.</span><br><span class="line">System.out.println(e.getMessage()); // 실패한 원인에 대하여 설명합니다.</span><br><span class="line">&#125; catch (SAXException e) &#123;</span><br><span class="line">System.out.println(xml + &quot; is not valid because &quot;); // 유효성 검사 실패</span><br><span class="line">System.out.println(e.getMessage()); // 실패한 원인에 대하여 설명합니다.</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>자바에서 외부 프로그램/외부 명령어를 실행</title>
      <link href="/2012/11/2012-11-07-PROCESSBUILDER/"/>
      <url>/2012/11/2012-11-07-PROCESSBUILDER/</url>
      
        <content type="html"><![CDATA[<p>ProcessBuilder : 자바에서 외부 프로그램/외부 명령어를 실행할때 사용하는 Class 입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line">package com.sec.infolink.admin.common.util;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line">import java.io.OutputStream;</span><br><span class="line">import java.io.Reader;</span><br><span class="line">import java.io.Writer;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.logging.Log;</span><br><span class="line">import org.apache.commons.logging.LogFactory;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * Class Name : CommandExecuteUtil.java</span><br><span class="line"> * Description : </span><br><span class="line"> *</span><br><span class="line"> * Modification Information</span><br><span class="line"> * Mod DateModifierDescription</span><br><span class="line"> * -------------------------------------------</span><br><span class="line"> * 2012.11.07젊은광대최초생성</span><br><span class="line"> *</span><br><span class="line"> * </span><br><span class="line"></span><br><span class="line"> *</span><br><span class="line"> * @author 젊은광대</span><br><span class="line"> * @since 2012.11.07</span><br><span class="line"> * @version 1.0</span><br><span class="line"> */</span><br><span class="line">public class CommandExecuteUtil &#123;</span><br><span class="line"></span><br><span class="line">protected final static Log log = LogFactory.getLog(CommandExecuteUtil.class);</span><br><span class="line"></span><br><span class="line">public static String executeArr(String[] command, Log log) throws IOException &#123;</span><br><span class="line"></span><br><span class="line">ProcessBuilder b = new ProcessBuilder(command);</span><br><span class="line">StringBuffer ret = new StringBuffer();</span><br><span class="line"></span><br><span class="line">  //표준 에러 출력을 머지 해 출력한다</span><br><span class="line">  b.redirectErrorStream(false);</span><br><span class="line">  Process p;</span><br><span class="line"></span><br><span class="line">  p = b.start();</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  BufferedReader reader = new BufferedReader( new InputStreamReader( p.getInputStream() ) );</span><br><span class="line">  String line = null;</span><br><span class="line">  </span><br><span class="line">  //표준 에러 출력이 표준 출력에 머지 해 출력되므로, 표준 출력만 읽어내면 된다</span><br><span class="line">  while ((line = reader.readLine()) != null) &#123;</span><br><span class="line">  ret.append(line);</span><br><span class="line">  &#125;</span><br><span class="line">      </span><br><span class="line">      return ret.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public static String execute(String command, String arg1, String arg2) throws IOException &#123;</span><br><span class="line"></span><br><span class="line">// sh 파일이나 기타 FullPathTarget 으로 파일을 실행할 수 있다.</span><br><span class="line">// 실행파일 이름만으로 실행이 가능하다.</span><br><span class="line">// 다음과 같은 경우 (실행파일, 옵션, 어규먼트) 형식으로 인식한다.</span><br><span class="line">// 리눅스를 예를 들자면 rm -rf *.sh 형식이라고 이해하면 된다.</span><br><span class="line">// ProcessBuilder builder = new ProcessBuilder(&quot;rm -rf *.sh&quot;);</span><br><span class="line">// 으로 할 경우 인식을 제대로 못하기 때문에 분리해서 각각 입력한다.</span><br><span class="line">// ProcessBuilder builder = new ProcessBuilder(&quot;rm&quot;,&quot;-rf&quot;,&quot;*.sh&quot;);</span><br><span class="line">ProcessBuilder builder = new ProcessBuilder(command, arg1, arg2);</span><br><span class="line">StringBuffer ret = new StringBuffer();</span><br><span class="line">Process process = null;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">// 표준 에러 출력을 머지 해 출력한다</span><br><span class="line">// builder.redirectErrorStream(false);</span><br><span class="line">process = builder.start();</span><br><span class="line"></span><br><span class="line">BufferedReader reader = new BufferedReader( new InputStreamReader( process.getInputStream() ) );</span><br><span class="line"></span><br><span class="line">// process.waitFor();</span><br><span class="line">// 실행한 프로세스가 종료될 때까지 대기한다. </span><br><span class="line">// 만약 실행한 프로세스가 동기식으로 처리되어야 한다면 사용해야 한다.</span><br><span class="line">// 하지만 그렇지 않다면 사용해서는 안된다. </span><br><span class="line">// 예를 들어 데몬이나 서비스 형태의 프로세스를 실행하고자 하는 상황에서 </span><br><span class="line">// 이 명령을 사용하면 해당 프로세스가 종료될 때까지 이 명령을 수행한 프로세스는 진행되지 않는다.</span><br><span class="line">int i = process.waitFor();</span><br><span class="line"></span><br><span class="line">if (0 != i)&#123;</span><br><span class="line">log.info(&quot;Command Execute Fail : &lt;&lt; &quot; + i + &quot; &gt;&gt;&quot;);</span><br><span class="line">log.debug(&quot;builder command : &quot; + builder.command().toString());</span><br><span class="line">&#125; else &#123;</span><br><span class="line">log.debug(&quot;builder command : &quot; + builder.command().toString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.info(process.exitValue());</span><br><span class="line"></span><br><span class="line">String line = &quot;&quot;;</span><br><span class="line">// 표준 에러 출력이 표준 출력에 머지 해 출력되므로, 표준 출력만 읽어내면 된다</span><br><span class="line">while ((line = reader.readLine()) != null) &#123;</span><br><span class="line">ret.append(line);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// process.destroy();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">log.info(command + &quot; &quot; + &quot;arg1 : &quot; + arg1 + &quot;arg2 : &quot; + arg2);</span><br><span class="line">throw new RuntimeException(e);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">log.info(command + &quot; &quot; + &quot;&quot; + &quot;&quot;);</span><br><span class="line">throw new RuntimeException(e);</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">if ( null != process) &#123;</span><br><span class="line">closeQuietly(process.getInputStream());</span><br><span class="line">closeQuietly(process.getOutputStream());</span><br><span class="line">closeQuietly(process.getErrorStream());</span><br><span class="line">// 해당 프로세스를 종료시킨다. </span><br><span class="line">// 역시 데몬이나 서비스 형태의 프로세스 호출시에는 사용해서는 안된다. </span><br><span class="line">// 호출하면 해당 프로세스는 종료된다. </span><br><span class="line">process.destroy();</span><br><span class="line">&#125; else &#123;</span><br><span class="line">log.info(command + &quot; &quot; + &quot;arg1 : &quot; + arg1 + &quot;arg2 : &quot; + arg2);</span><br><span class="line">log.info(&quot;Cannot close Process Streams&quot;);</span><br><span class="line">throw new RuntimeException(&quot;Cannot close Process Streams&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return ret.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void closeQuietly(Writer output) &#123;</span><br><span class="line"> try &#123;</span><br><span class="line"> if (output != null) &#123;</span><br><span class="line"> output.close();</span><br><span class="line"> &#125;</span><br><span class="line"> &#125; catch (IOException ioe) &#123;</span><br><span class="line"> //ignore</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> public static void closeQuietly(Reader output) &#123;</span><br><span class="line"> try &#123;</span><br><span class="line"> if (output != null) &#123;</span><br><span class="line"> output.close();</span><br><span class="line"> &#125;</span><br><span class="line"> &#125; catch (IOException ioe) &#123;</span><br><span class="line"> //ignore</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> public static void closeQuietly(InputStream output) &#123;</span><br><span class="line"> try &#123;</span><br><span class="line"> if (output != null) &#123;</span><br><span class="line"> output.close();</span><br><span class="line"> &#125;</span><br><span class="line"> &#125; catch (IOException ioe) &#123;</span><br><span class="line"> //ignore</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> public static void closeQuietly(OutputStream output) &#123;</span><br><span class="line"> try &#123;</span><br><span class="line"> if (output != null) &#123;</span><br><span class="line"> output.close();</span><br><span class="line"> &#125;</span><br><span class="line"> &#125; catch (IOException ioe) &#123;</span><br><span class="line"> //ignore</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> /*</span><br><span class="line">  * 실행 예제 : 리눅스와, 윈도우 환경에 따라서 다르게 동작하도록 작업해둡니다.</span><br><span class="line">  */</span><br><span class="line"> public static void main(String[] args) &#123;</span><br><span class="line">  // OS 구분하여 명령어 처리 - 로컬(window) Dos 작업환경을 위해</span><br><span class="line">         String osType = &quot;unix&quot;;</span><br><span class="line">         if(System.getProperty(&quot;os.name&quot;).toLowerCase().indexOf(&quot;win&quot;) &gt;= 0 )&#123;</span><br><span class="line">         osType = &quot;window&quot;;</span><br><span class="line">         &#125;</span><br><span class="line">         log.debug(&quot;OS check Test : &quot;+System.getProperty(&quot;os.name&quot;).toLowerCase());</span><br><span class="line">         String retail_size = &quot;&quot;;</span><br><span class="line">         // 윈도우와 리눅스 둘다 동작하도록 작업.</span><br><span class="line">         try &#123;</span><br><span class="line">         if(osType.equals(&quot;window&quot;))&#123;</span><br><span class="line">         String cmd[] = new String[3];</span><br><span class="line">         cmd[0] = &quot;cmd.exe&quot;;</span><br><span class="line">         cmd[1] = &quot;/C&quot;;</span><br><span class="line">         cmd[2] = &quot;dir&quot;;</span><br><span class="line">         retail_size = CommandExecuteUtil.executeArr(cmd, log);</span><br><span class="line">         &#125;else&#123;</span><br><span class="line">         retail_size = </span><br><span class="line">         CommandExecuteUtil.execute(</span><br><span class="line">         &quot;rm&quot;, </span><br><span class="line">         &quot;-rf&quot;, </span><br><span class="line">         &quot;*.*&quot;);</span><br><span class="line">         &#125;</span><br><span class="line">         &#125; catch (IOException e) &#123;</span><br><span class="line">// TODO Auto-generated catch block</span><br><span class="line">e.printStackTrace();</span><br><span class="line">         &#125;</span><br><span class="line">         log.info(retail_size);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>티스토리에서 옮기면서 추가적으로 적자면, 네이버에서는 2가지 방법에 대한 가이드가 있어 참조합니다. </p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://d2.naver.com/helloworld/1113548" rel="external nofollow noopener noreferrer" target="_blank">Java에서 외부 프로세스를 실행할 때</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IP를 수치로 변환, 수치를 IP로 변환하는 법.</title>
      <link href="/2012/08/2012-08-01-IPNUMBER/"/>
      <url>/2012/08/2012-08-01-IPNUMBER/</url>
      
        <content type="html"><![CDATA[<ol><li>입력된 IP 값을 계산 가능한 수치로 변환하여 반환하는 로직입니다.</li></ol><h2 id="※-정해진-규칙"><a href="#※-정해진-규칙" class="headerlink" title="※ 정해진 규칙"></a>※ 정해진 규칙</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public static Long ipToInt(String ipAddr) &#123;</span><br><span class="line">       String[] ipAddrArray = ipAddr.split(&quot;\\.&quot;);</span><br><span class="line"></span><br><span class="line">       long num = 0;</span><br><span class="line">       for (int i=0;i&lt;ipAddrArray.length;i++) &#123;</span><br><span class="line">           int power = 3-i;</span><br><span class="line">           /*</span><br><span class="line">            * i의 값으 범위는 0~255 사이이며, 그 값을 256으로 나눈 나머지 값에  </span><br><span class="line">            * 256을 power의 값인 </span><br><span class="line">            * 1~9 사이는 2, </span><br><span class="line">            * 10~99 사이는 1, </span><br><span class="line">            * 100 이상은 0 의 값에 누승하여 num 값에 더함</span><br><span class="line">            */</span><br><span class="line">           num += ((Integer.parseInt(ipAddrArray[i])%256 * Math.pow(256,power)));</span><br><span class="line">       &#125;</span><br><span class="line">       return num;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Long 값을 IP 로 변환하는 로직입니다.<br>기본이 Int 형이나, int 형의 범위가 -2147483648 ~ 2147483647 입니다.<br>그런데 IP 를 수치로 변환하게 되면 2147483647 를 넘는 경우가 생깁니다.<br>그래서 Long 형으로 처리해야합니다. ^^</li></ol><h2 id="※-정해진-규칙-1"><a href="#※-정해진-규칙-1" class="headerlink" title="※ 정해진 규칙"></a>※ 정해진 규칙</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public static String intToIp(long num) &#123;</span><br><span class="line">       return ((num &gt;&gt; 24 ) &amp; 0xFF) + &quot;.&quot; +</span><br><span class="line">              ((num &gt;&gt; 16 ) &amp; 0xFF) + &quot;.&quot; +</span><br><span class="line">              ((num &gt;&gt;  8 ) &amp; 0xFF) + &quot;.&quot; +</span><br><span class="line">              ( num        &amp; 0xFF);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>결국 이것은 약속이므로 임의대로 바꾸면 안됩니다.</p><p>부연설명을 드리자면, </p><h2 id="※-DB-Call-1-Maxmind-에서-나오는-DB-Query"><a href="#※-DB-Call-1-Maxmind-에서-나오는-DB-Query" class="headerlink" title="※ DB Call 1. Maxmind 에서 나오는 DB Query"></a>※ DB Call 1. Maxmind 에서 나오는 DB Query</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT MOD(ROUND(1044455424 / 16777216), 256) AS X</span><br><span class="line">,MOD(ROUND(1044455424 / 65536), 256) AS Y</span><br><span class="line">,MOD(ROUND(1044455424 / 256), 256) AS A</span><br><span class="line">,MOD(1044455424, 256) AS Z FROM DUAL;</span><br><span class="line">Maxmind(http://www.maxmind.com/) 사이트에서 찾을 수 있는 DB Query 지만, 실은 이것과 위의 자바 상의 로직은 결과값이 틀립니다.</span><br></pre></td></tr></table></figure><p>예를 들자면, 1357611007 로 확인했을때, 자바소스는 80.235.127.255 , DB Query 는 81 235 128 255 가 나옵니다.</p><h2 id="※-DB-Call-2"><a href="#※-DB-Call-2" class="headerlink" title="※ DB Call 2."></a>※ DB Call 2.</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT MOD(TRUNC(1357611007 / 16777216), 256)</span><br><span class="line">,MOD(TRUNC(1357611007 / 65536), 256)</span><br><span class="line">,MOD(TRUNC(1357611007 / 256), 256)</span><br><span class="line">,MOD(1357611007, 256) FROM DUAL;</span><br></pre></td></tr></table></figure><p>만약 DB Call 로 검색할려고 한다면, 해당 방식으로 진행해야합니다.<br>비트 단위로 쉬프트 한 다음에 8자리 비트만 확인하여 각 자리 수를 확인하는 로직이므로 DB 도 마찬가지로 진행해야합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ext Js 에서 text 는 중앙정렬, 컬럼내용은 좌우정렬하는 방법</title>
      <link href="/2012/05/2012-05-31-EXTJSCENTER/"/>
      <url>/2012/05/2012-05-31-EXTJSCENTER/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">text : &apos;&lt;span style=&quot;padding: 0px 0px 0px 60px&quot;&gt;Country Name&lt;/span&gt;&apos;,</span><br><span class="line">width : 200, </span><br><span class="line">align : &apos;left&apos;,</span><br><span class="line">sortable : true,</span><br><span class="line">dataIndex: &apos;SHORT_COUNTRY_NM&apos;</span><br></pre></td></tr></table></figure><p>기존에는 이런식으로 중앙 좌측 정렬인데 중앙 정렬을 하기 위해서는 text 안에 <span> 옵션을 주었다.<br>이게 엄청나게 짜증이 난다.<br>1px 단위로 수정하고나서 실제로 변경되었는지 확인해야하기 때문이다.</span></p><p>그런데 이 방법이 말고,<br>text는 중앙정렬이 되면서, 컬럼안에 들어있는 값은 좌측, 우측으로 정렬이 가능한 방법이 있었다.</p><p>바로<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">style: &apos;text-align:center&apos;</span><br></pre></td></tr></table></figure></p><p>을 주는 방법이었다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">text : &apos;Country Name&apos;,</span><br><span class="line">style : &apos;text-align:center&apos;,</span><br><span class="line">width : 200, </span><br><span class="line">align : &apos;left&apos;,</span><br><span class="line">sortable : true,</span><br><span class="line">dataIndex: &apos;SHORT_COUNTRY_NM&apos;</span><br></pre></td></tr></table></figure><p>그렇게 되면 정상적으로 “Country Name”이라는 헤더값이 중앙정렬이 되면서,<br>출력되는 컬럼값들은 전부 좌측정렬이 된다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RestLet (RestFul) 에서 헤더값을 대소문자</title>
      <link href="/2012/05/2012-05-29-RESTFUL/"/>
      <url>/2012/05/2012-05-29-RESTFUL/</url>
      
        <content type="html"><![CDATA[<p>출처 : <a href="http://www.restlet.org/documentation/2.0/jse/api/org/restlet/util/Series.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.restlet.org/documentation/2.0/jse/api/org/restlet/util/Series.html</a></p><p>String    getFirstValue(String name, boolean ignoreCase)<br>           Returns the value of the first parameter found with the given name.<br>String    getFirstValue(String name, boolean ignoreCase, String defaultValue)<br>           Returns the value of the first parameter found with the given name.<br>String    getFirstValue(String name, String defaultValue)<br>           Returns the value of the first parameter found with the given name.</p><h2 id="getFirstValue-String-name-boolean-ignoreCase"><a href="#getFirstValue-String-name-boolean-ignoreCase" class="headerlink" title="getFirstValue(String name, boolean ignoreCase) "></a>getFirstValue(String name, boolean ignoreCase) </h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import org.restlet.data.Form;</span><br><span class="line">Form headers = new Form();</span><br><span class="line">headers.add(&quot;test&quot;, &quot;test입니다.&quot;);</span><br><span class="line">System.out.println(headers.getFirstValue(&quot;Test&quot;,true));</span><br><span class="line">``` </span><br><span class="line">결론 : test입니다.</span><br><span class="line"></span><br><span class="line">getFirstValue(String name, boolean ignoreCase, String defaultValue)</span><br><span class="line">---</span><br><span class="line"> ```aidl</span><br><span class="line"> import org.restlet.data.Form;</span><br><span class="line"> Form headers = new Form();</span><br><span class="line"> headers.add(&quot;test&quot;, &quot;test입니다.&quot;);</span><br><span class="line"> System.out.println(headers.getFirstValue(&quot;Test&quot;,false));</span><br></pre></td></tr></table></figure><p> 결론 : null</p><h2 id="getFirstValue-String-name-String-defaultValue"><a href="#getFirstValue-String-name-String-defaultValue" class="headerlink" title="getFirstValue(String name, String defaultValue)"></a>getFirstValue(String name, String defaultValue)</h2><pre><code class="aidl">import org.restlet.data.Form;Form headers = new Form();headers.add(&quot;test&quot;, &quot;test입니다.&quot;);System.out.println(headers.getFirstValue(&quot;Test&quot;,false, &quot;test입니까?&quot;));</code></pre><p>결론 : test입니까?</p><p>만약 대소문자를 구분하려고 하면 false, 대소문자를 구분하지 않기 위해서는 true를 설정하면 됩니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IMP-00013: DBA만이 다른 DBA가 엑스포트한 파일을 임포트할 수 있습니다</title>
      <link href="/2012/05/2012-05-14-ORACLEDATABASE11G/"/>
      <url>/2012/05/2012-05-14-ORACLEDATABASE11G/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Import: Release 11.1.0.6.0 - Production on 월 5월 14 11:21:47 2012</span><br><span class="line">Copyright (c) 1982, 2007, Oracle.  All rights reserved. </span><br><span class="line"></span><br><span class="line">다음에 접속됨: Oracle Database 11g Enterprise Edition Release 11.1.0.6.0 - Production</span><br><span class="line">With the Partitioning, OLAP, Data Mining and Real Application Testing options</span><br></pre></td></tr></table></figure><p>엑스포트 파일은 규정 경로를 거쳐 EXPORT:V10.02.01 에 의해 생성되었습니다<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IMP-00013: DBA만이 다른 DBA가 엑스포트한 파일을 임포트할 수 있습니다</span><br><span class="line">IMP-00000: 임포트가 실패로 끝났습니다</span><br></pre></td></tr></table></figure></p><p>Export 시에 시스템권한까지 포함하여 익스포트를 한 경우 임포트 대상도 시스템권한이 부여되어야합니다.</p><p>보통은 Grant connect, resource to DB_ID 로 권한을 부여해주는데 DBA권한을 추가해주기 위해서 한가지 조건을 더 붙입니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT CONNECT, RESOURCE, DBA TO DB_ID</span><br></pre></td></tr></table></figure></p><p>이렇게 할 경우 정상적으로 임포트가 가능합니다.<br>익스포트할때 시스템권한으로 익스포트하지 않는게 가장 중요하겠지만요.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Amazon 3S Upload 시에 443 이 아니라 80 port로 Upload 하는 방법</title>
      <link href="/2012/03/2012-03-30-AMAZONE3S/"/>
      <url>/2012/03/2012-03-30-AMAZONE3S/</url>
      
        <content type="html"><![CDATA[<p>참고주소 : <a href="http://www.cozyroc.com/ssis/amazon-s3-connection" rel="external nofollow noopener noreferrer" target="_blank">http://www.cozyroc.com/ssis/amazon-s3-connection</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1. Host </span><br><span class="line">Specify the name or IP address of the Amazon S3 service.</span><br><span class="line">2. Secure connection </span><br><span class="line">Specify to establish secure HTTPS connection with Amazon S3 service on port 443.</span><br><span class="line">3. Regular calling </span><br><span class="line">Specify to connect to Amazon S3 service, using regular calling format. Un-check this option when connecting to EU Amazon S3 service.</span><br><span class="line">4. Access Key </span><br><span class="line">Specify access key for Amazon S3 service.</span><br><span class="line">5. Secret Key </span><br><span class="line">Specify secret key for Amazon S3 service.</span><br><span class="line">6. Time-out (secs) </span><br><span class="line">Specify the number of seconds before timing out session connect. The default value of this property is 100.</span><br><span class="line">7. Test Connection </span><br><span class="line">Confirm connection manager configuration by clicking Test Connection.</span><br></pre></td></tr></table></figure></p><h2 id="Amazon-3S-Upload-시에-443-이-아니라-80-port로-Upload-하는-방법"><a href="#Amazon-3S-Upload-시에-443-이-아니라-80-port로-Upload-하는-방법" class="headerlink" title="Amazon 3S Upload 시에 443 이 아니라 80 port로 Upload 하는 방법 "></a>Amazon 3S Upload 시에 443 이 아니라 80 port로 Upload 하는 방법 </h2><p>S3 Upload : org.jets3t.service.impl.rest.httpclient.RestStorageService Class</p><p>Amazon S3 Upload 시에 setupConnection 에서 ‘isHttpsOnly()’ 에 값을 가져와,<br>https 로 셋팅할 것인지 http 로 셋팅할것인지를 결정합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protected HttpMethodBase setupConnection(HTTP_METHOD method, String bucketName, String objectKey, Map&lt;String, String&gt; requestParameters) throws ServiceException</span><br></pre></td></tr></table></figure><p>isHttpsOnly() 라는 메소드는 org.jets3t.service.StorageService Class 에서 가져옵니다.</p><p> private boolean isHttpsOnly = true;</p><p>문제는 이 변수가 항상 true로 되어있습니다.<br>그래서 항상 SSL 방식으로 업로드가 되게 됩니다.</p><p>그런데 특정 서버의 경우 443 port 가 막혀 80 port 로만 업로드해야할 경우가 있습니다.<br>그로인해 isHttpOnly 를 false 로 바꿔주어야합니다.</p><p>org.jets3t.service.StorageService Class 에 setMethod를 추가합니다.</p><p> public void setHttpsOnly(boolean isHttpsOnly){<br>    this.isHttpsOnly = isHttpsOnly;<br>}</p><p>해당 메소드를<br>그럼 자동으로 파일업로드시 org.jets3t.service.impl.rest.httpclient.RestStorageService 에서 http, https 설정하는<br>setupConnection method() 에서 자동으로 http 를 셋팅합니다.</p><p>사용방법은<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">org.jets3t.service.S3Service s3Service = new RestS3Service(awsCredentials);</span><br><span class="line">s3Service.setHttpsOnly(isHttpsOnly);</span><br><span class="line">S3Bucket bucket = s3Service.getBucket(bucketName);</span><br></pre></td></tr></table></figure></p><p>S3Service 에서 부모에 있는 setHttpsOnly 메소드를 호출하여 false 로 변경해주면 됩니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS Color Chart</title>
      <link href="/2012/02/2012-02-07-CSSCOLOR/"/>
      <url>/2012/02/2012-02-07-CSSCOLOR/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.iegate.net/ver4/bbs/board.php?bo_table=plus03&amp;wr_id=200" rel="external nofollow noopener noreferrer" target="_blank">css 참고 사이트</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>value.replace(&#39;x&#39;,&#39;z&#39;) -&gt; value.replaceAll(&#39;x&#39;,&#39;z&#39;);</title>
      <link href="/2012/02/2012-02-07-JAVASCRIPT/"/>
      <url>/2012/02/2012-02-07-JAVASCRIPT/</url>
      
        <content type="html"><![CDATA[<p>value.replace(“x”,”z”); : value 안에서 x라는 값을 z로 변경. 처음 z 가 나오는 한 부분만 바뀌므로 replaceAll 명령이 필요합니다.<br>그러나 자바스크립트에는 replaceAll 이라는 명령어가 존재하지 않으므로 정규식을 사용하여야합니다.<br>간단하게 “” 와 ‘’를 //로 바꿔서 사용하고 뒤에 정규식을 붙이면 됩니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">g : 모든 문자에 대하여 적용한다.</span><br><span class="line">i : 대소문자를 가리지 않는다.</span><br><span class="line">\s : 공백을 의미한다.</span><br><span class="line">\ : 특수문자를 사용할때 사용한다. ex) \&quot; , \&apos; , \[ , \/ </span><br><span class="line">| : or 조건을 의미한다.</span><br><span class="line">(.*?) : 두 문자열사이의 모든 문자를 의미한다. ex) a(.*?)b : a와b 사이의 모든 문자.</span><br></pre></td></tr></table></figure><p>value.replace(/x/gi, “z”);<br>해석은 x라는 단어를 대소문자 구분없이 모두 z로 바꾸라는 정규식명령이 되므로,<br>실질적으로 value.replaceAll(‘x’, ‘z’); 라는 명령이 됩니다. </p><p>더 자세한 정규식 표현은 <a href="http://kio.zc.bz/Lecture/regexp.html" rel="external nofollow noopener noreferrer" target="_blank">http://kio.zc.bz/Lecture/regexp.html</a> 에서 확인하시기 바랍니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SCRIPT1028: Expected identifier, string or number</title>
      <link href="/2012/01/2012-01-13-SCRIPT1028/"/>
      <url>/2012/01/2012-01-13-SCRIPT1028/</url>
      
        <content type="html"><![CDATA[<p>관련 주소 : <a href="http://forumsblogswikis.com/2008/07/21/javascript-error-expected-identifier-string-or-number-in-ie/" rel="external nofollow noopener noreferrer" target="_blank">http://forumsblogswikis.com/2008/07/21/javascript-error-expected-identifier-string-or-number-in-ie/</a><br>구글 크롬에서는 발생하지 않으나, IE에서는 나타나는 버그.</p><p>‘,’를 넣어져있어 오류가 발생하게 됩니다.<br>구글크롬은 해당 오류를 무시하지만 IE 계열에서는 해당 코드를 오류로 인식합니다.</p><p>단순 버그.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Disk 가 Pool 이 될 경우 발생할 수 있는 문제. </title>
      <link href="/2011/10/2011-10-17-DiskPool/"/>
      <url>/2011/10/2011-10-17-DiskPool/</url>
      
        <content type="html"><![CDATA[<h2 id="Weblogic-의-운영자-로그인이-안되는-현상"><a href="#Weblogic-의-운영자-로그인이-안되는-현상" class="headerlink" title="Weblogic 의 운영자 로그인이 안되는 현상 "></a>Weblogic 의 운영자 로그인이 안되는 현상 </h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/console/login/LoginForm.jsp 에서 로그인 시 페이지를 찾을 수 없습니다가 뜨는 현상</span><br><span class="line">Disk 가 Pool 이 나서 Weblogic Login Log(?) 를 생성하지 못했기 때문에 발생한 오류였음.</span><br></pre></td></tr></table></figure><h2 id="Disk-가-Pool-이-나면-Weblogic-에-영향을-줄-수-있는-범위"><a href="#Disk-가-Pool-이-나면-Weblogic-에-영향을-줄-수-있는-범위" class="headerlink" title="Disk 가 Pool 이 나면 Weblogic 에 영향을 줄 수 있는 범위"></a>Disk 가 Pool 이 나면 Weblogic 에 영향을 줄 수 있는 범위</h2><p>(1) Server 가 떠 있는 동안에는 Service 에 지장이 없다.<br>    문제가 발생한다면 Log 를 제대로 쌓지 못하므로, Log 가 Memory 에 샇이게 되어 시스템에 문제를 줄 순 있다.</p><p>(2) 조치해야할 방법 </p><pre><code>실제 domains의 servers 에 가서 서비스하고 있는 폴더명을 바꾼다.lok 와 같은 계정 정보 문제로 인해 Login 이 안되는 것이므로 새롭게 domain을 생성하는게 좋다. (그리고 이렇게 해야지 제대로 Login 할 수 있다.)ex) D:\domains\도메인명\servers\어플리케이션(서버)명\어플리케이션 명 변경 후 웹로직 재시작.</code></pre><h2 id="윈도우에서-서버-사용시-Disk-Pool-을-조심해야하는-경우"><a href="#윈도우에서-서버-사용시-Disk-Pool-을-조심해야하는-경우" class="headerlink" title="윈도우에서 서버 사용시 Disk Pool 을 조심해야하는 경우"></a>윈도우에서 서버 사용시 Disk Pool 을 조심해야하는 경우</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. Disk 가 Pool 이 나면 계정 정보 때문에 Ldap 디렉토리가 깨질 확률이 있다. </span><br><span class="line">2. Server가 떠있는 동안에는 Service 에 지장은 없지만, Disk 가 Pool 이므로 별도의 Log 수집이 안된다.</span><br><span class="line">2번 문제로 Log 가 Memory 에만 적재게 되면, Memory 까지 차게 되어, Memory Fresh 가 안되므로 서비스에까지 영향을 주게 된다.</span><br><span class="line">결론은 Disk 정리를 필수 중에 필수!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Max depth exceeded when dereferencing c0-e1 에러</title>
      <link href="/2011/10/2011-12-14-MaxDepth/"/>
      <url>/2011/10/2011-12-14-MaxDepth/</url>
      
        <content type="html"><![CDATA[<p>Max depth exceeded when dereferencing c0-e1. See the logs for more details</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">이와 같은 에러가 날 경우는 서버로 파라미터를 던질때 객체를 던질경우에 나온다.</span><br><span class="line">즉, document.form1.id.value값을 던져야 하는데 document.form1.id 와 같이 object 로 던질경우에 에러가 뜬다.</span><br><span class="line">Ajax 에서 Java 로 값을 넘겨주는 데 계속 Error 가 나는데 그 이유가</span><br><span class="line">.value 로 넘겨야하는데 Object 로 넘기면서 문제가 생겼다.</span><br></pre></td></tr></table></figure><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://wiki.gurubee.net/pages/viewpage.action?pageId=1966781" rel="external nofollow noopener noreferrer" target="_blank">상관 모델링</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ext js tab 처리</title>
      <link href="/2011/09/2011-09-07-EXT-TABPANEL/"/>
      <url>/2011/09/2011-09-07-EXT-TABPANEL/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tab = Ext.createWidget(&apos;tabpanel&apos;, &#123; ... &#125;);</span><br><span class="line"></span><br><span class="line">    function switchTabs(next) &#123;</span><br><span class="line">    var items = tab.items.items;</span><br><span class="line">//var active_tab = tabs.getActiveTab();</span><br><span class="line">tab.setActiveTab(items[next].id);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://extperience.wordpress.com/tag/tutorial/" rel="external nofollow noopener noreferrer" target="_blank">So the switchTabs function</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>StarUML_5.0</title>
      <link href="/2011/09/2011-09-07-StarUML/"/>
      <url>/2011/09/2011-09-07-StarUML/</url>
      
        <content type="html"><![CDATA[<p>StarUML 5.0 사용자 가이드</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">참조 주소 참고</span><br></pre></td></tr></table></figure><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://staruml.sourceforge.net/docs/user-guide(ko" rel="external nofollow noopener noreferrer" target="_blank">UML 가이드</a>/toc.html)</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>fmt:formatNumber Attributes</title>
      <link href="/2011/09/2011-10-24-formatNumber/"/>
      <url>/2011/09/2011-10-24-formatNumber/</url>
      
        <content type="html"><![CDATA[<p>#JSTL 정규 표현식 표현방법</p><h2 id="type을-사용하는-방법"><a href="#type을-사용하는-방법" class="headerlink" title="type을 사용하는 방법"></a>type을 사용하는 방법</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;</span><br><span class="line">&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/fmt&quot; prefix=&quot;fmt&quot; %&gt;</span><br><span class="line"></span><br><span class="line">number : &lt;fmt:formatNumber value=&quot;12345.678&quot; type=&quot;number&quot;/&gt;&lt;br/&gt;</span><br><span class="line">currency : &lt;fmt:formatNumber value=&quot;12345.678&quot; type=&quot;currency&quot; currencySymbol=&quot;\\&quot;/&gt;&lt;br/&gt;</span><br><span class="line">percent : &lt;fmt:formatNumber value=&quot;12345.678&quot; type=&quot;percent&quot;/&gt;&lt;br/&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:set var=&quot;now&quot; value=&quot;&lt;%=new java.util.Date()%&gt;&quot;/&gt;</span><br><span class="line">&lt;c:out value=&quot;$&#123;now&#125;&quot;/&gt;&lt;br/&gt;</span><br><span class="line"></span><br><span class="line">date : &lt;fmt:formatDate value=&quot;$&#123;now&#125;&quot; type=&quot;date&quot;/&gt;&lt;br/&gt;</span><br><span class="line">time : &lt;fmt:formatDate value=&quot;$&#123;now&#125;&quot; type=&quot;time&quot;/&gt;&lt;br/&gt;</span><br><span class="line">both : &lt;fmt:formatDate value=&quot;$&#123;now&#125;&quot; type=&quot;both&quot;/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><p>결과<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">number : 12,345.678</span><br><span class="line">currency : \ 12,345.68</span><br><span class="line">percent : 1,234,568%</span><br><span class="line">Wed May 18 12:49:38 KST 2011</span><br><span class="line">date : 2011. 5. 18</span><br><span class="line">time : 오후 12:49:38</span><br><span class="line">both : 2011. 5. 18 오후 12:49:38</span><br></pre></td></tr></table></figure></p><h2 id="pattern을-사용한-방법"><a href="#pattern을-사용한-방법" class="headerlink" title="pattern을 사용한 방법"></a>pattern을 사용한 방법</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set var=&quot;num&quot; value=&quot;234.5678&quot;/&gt;</span><br><span class="line">&lt;c:set var=&quot;money&quot; value=&quot;9876543&quot;/&gt;</span><br><span class="line"></span><br><span class="line">$&#123;num&#125;&lt;p&gt;</span><br><span class="line">$&#123;money&#125;&lt;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;fmt:formatNumber value=&quot;$&#123;num&#125;&quot; pattern=&quot;0.00&quot;/&gt;&lt;p&gt;</span><br><span class="line">&lt;fmt:formatNumber value=&quot;$&#123;num&#125;&quot; pattern=&quot;0.0&quot;/&gt;&lt;p&gt;</span><br><span class="line">&lt;fmt:formatNumber value=&quot;$&#123;num&#125;&quot; pattern=&quot;.0&quot;/&gt;</span><br><span class="line">&lt;fmt:formatNumber value=&quot;$&#123;money&#125;&quot; pattern=&quot;#,##0&quot;/&gt;&lt;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:set var=&quot;now&quot; value=&quot;&lt;%=new java.util.Date()%&gt;&quot;/&gt;</span><br><span class="line">&lt;fmt:formatDate value=&quot;$&#123;now&#125;&quot; pattern=&quot;yyyy-MM-dd HH:mm EEE&quot;/&gt;&lt;p&gt;</span><br><span class="line">&lt;fmt:formatDate value=&quot;$&#123;now&#125;&quot; pattern=&quot;yyyy-MM-dd hh:mm(a) EEEE&quot;/&gt;&lt;p&gt;</span><br></pre></td></tr></table></figure><p>결과<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">234.5678</span><br><span class="line">9876543</span><br><span class="line">234.57</span><br><span class="line">234.6</span><br><span class="line">234.6</span><br><span class="line">9,876,543</span><br><span class="line">2011-05-18 14:41 수</span><br><span class="line">2011-05-18 02:41(오후) 수요일</span><br></pre></td></tr></table></figure></p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://blog.naver.com/jgs135/110121197774" rel="external nofollow noopener noreferrer" target="_blank">JSTL 가이드</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>org.osgi.framework.BundleException: Exception in org.eclipse.core.resources.ResourcesPlugin.start()</title>
      <link href="/2011/09/2011-09-06-EclipseError/"/>
      <url>/2011/09/2011-09-06-EclipseError/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">org.osgi.framework.BundleException: Exception in org.eclipse.core.resources.ResourcesPlugin.start() of bundle org.eclipse.core.resources.</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:1028)</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:984)</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:265)</span><br><span class="line">at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)</span><br><span class="line">at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)</span><br><span class="line">at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:427)</span><br><span class="line">at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:193)</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:368)</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:33)</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:441)</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:397)</span><br><span class="line">at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:385)</span><br><span class="line">at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:87)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:251)</span><br><span class="line">at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)</span><br><span class="line">at org.eclipse.ui.views.markers.MarkerViewHandler.&lt;clinit&gt;(MarkerViewHandler.java:39)</span><br><span class="line">at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)</span><br><span class="line">at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)</span><br><span class="line">at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)</span><br><span class="line">at java.lang.reflect.Constructor.newInstance(Constructor.java:494)</span><br><span class="line">at java.lang.Class.newInstance0(Class.java:350)</span><br><span class="line">at java.lang.Class.newInstance(Class.java:303)</span><br><span class="line">at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)</span><br><span class="line">at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:867)</span><br><span class="line">at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)</span><br><span class="line">at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerProxy.loadHandler(HandlerProxy.java:335)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerProxy.isEnabled(HandlerProxy.java:304)</span><br><span class="line">at org.eclipse.core.commands.Command.isEnabled(Command.java:833)</span><br><span class="line">at org.eclipse.core.commands.Command.setHandler(Command.java:996)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerAuthority.updateCommand(HandlerAuthority.java:459)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerAuthority.activateHandler(HandlerAuthority.java:249)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerService.activateHandler(HandlerService.java:120)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerService.activateHandler(HandlerService.java:112)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerService.activateHandler(HandlerService.java:107)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerPersistence.readDefaultHandlersFromRegistry(HandlerPersistence.java:250)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerPersistence.reRead(HandlerPersistence.java:204)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerPersistence.read(HandlerPersistence.java:158)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerService.readRegistry(HandlerService.java:186)</span><br><span class="line">at org.eclipse.ui.internal.handlers.HandlerServiceFactory.create(HandlerServiceFactory.java:61)</span><br><span class="line">at org.eclipse.ui.internal.services.WorkbenchServiceRegistry.getService(WorkbenchServiceRegistry.java:102)</span><br><span class="line">at org.eclipse.ui.internal.services.ServiceLocator.getService(ServiceLocator.java:174)</span><br><span class="line">at org.eclipse.ui.internal.Workbench$43.runWithException(Workbench.java:1675)</span><br><span class="line">at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:31)</span><br><span class="line">at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</span><br><span class="line">at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)</span><br><span class="line">at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3800)</span><br><span class="line">at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3425)</span><br><span class="line">at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2293)</span><br><span class="line">at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2198)</span><br><span class="line">at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:493)</span><br><span class="line">at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)</span><br><span class="line">at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:488)</span><br><span class="line">at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)</span><br><span class="line">at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)</span><br><span class="line">at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:193)</span><br><span class="line">at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)</span><br><span class="line">at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)</span><br><span class="line">at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:382)</span><br><span class="line">at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:585)</span><br><span class="line">at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)</span><br><span class="line">at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)</span><br><span class="line">at org.eclipse.equinox.launcher.Main.run(Main.java:1236)</span><br></pre></td></tr></table></figure><ol><li><p>eclipse.exe -clean 으로 실행<br>이클립스를 사용하여 개발할때 파일 저장하거나 기타 다른 동작을 할때 크래쉬 오류가 계속 나온다면 clean 이란 명령어를 사용하라고 해서, 위의 오류가 났을때도 해봤는데 해결되지 않았다.<br>해당 방법을 사용할때는 이클립스 설치 폴더의 eclipse.ini 안에 -clean 이라고 넣고 실행하면 된다.</p></li><li><p>그대로 안되면 참조 주소<br>모든 .metadata 삭제</p></li></ol><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://blog.outsider.ne.kr/636" rel="external nofollow noopener noreferrer" target="_blank">metadata 데이터 폴더를 전부 삭제해버리기</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>EXT JS 4.0 ROW CLICK..</title>
      <link href="/2011/08/2011-08-17-EXT-JS-4.0-ROW-CLICK/"/>
      <url>/2011/08/2011-08-17-EXT-JS-4.0-ROW-CLICK/</url>
      
        <content type="html"><![CDATA[<p>EXT JS 4.0</p><p>행 클릭시에 특정 이벤트를 동작시키도록 하는 스크립트.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">var grid = Ext.create(&apos;Ext.grid.Panel&apos;, &#123;</span><br><span class="line">         store: store,</span><br><span class="line">         stateful: true,</span><br><span class="line">         stateId: &apos;stateGrid&apos;,</span><br><span class="line">         selType: &apos;rowmodel&apos;,</span><br><span class="line">         columns: [</span><br><span class="line">            &#123;</span><br><span class="line">     header    : &apos;No&apos;, </span><br><span class="line">     width     : 35, </span><br><span class="line">     align     : &apos;center&apos;, </span><br><span class="line">     dataIndex : &apos;NUM&apos;, </span><br><span class="line">     sortable : true</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">     header: &apos;A&apos;,</span><br><span class="line">     width    : 70,</span><br><span class="line">     align : &apos;left&apos;, </span><br><span class="line">     sortable : true, </span><br><span class="line">     dataIndex: &apos;A&apos;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">     header: &apos;B&apos;,</span><br><span class="line">     width    : 80,</span><br><span class="line">     align     : &apos;center&apos;, </span><br><span class="line">     sortable : true,</span><br><span class="line">     dataIndex: &apos;B&apos;</span><br><span class="line">    &#125;</span><br><span class="line">   ],</span><br><span class="line">   listeners: &#123;</span><br><span class="line">            itemclick: function(dataview, record, item, index, e) &#123;</span><br><span class="line">                alert(&apos;TEST&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">   columnLines: true,</span><br><span class="line">   height: 350,</span><br><span class="line">   width: 203, // 185:content + 18:vertical scroll</span><br><span class="line">   renderTo: &apos;version&apos;,</span><br><span class="line">   viewConfig: &#123; stripeRows: true &#125; </span><br><span class="line">         &#125;</span><br><span class="line">  );</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ext JS Grid 를 변경할 때 사용</title>
      <link href="/2011/08/2011-08-11-ExtJSChange/"/>
      <url>/2011/08/2011-08-11-ExtJSChange/</url>
      
        <content type="html"><![CDATA[<p>EXT JS 4.0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var selectModel = grid.getSelectionModel();</span><br><span class="line">var ix = selectModel.getSelection();</span><br><span class="line"></span><br><span class="line">for ( var k = 0; k &lt; ix.length; k++) &#123;</span><br><span class="line">grid.getStore().add(ix[k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>삭제할 경우 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid.getStore().remove(ix[k]);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Max depth exceeded when dereferencing c0-e1 에러</title>
      <link href="/2011/05/2011-05-20-CRUDMATRIX/"/>
      <url>/2011/05/2011-05-20-CRUDMATRIX/</url>
      
        <content type="html"><![CDATA[<h2 id="CRUD-매트릭스"><a href="#CRUD-매트릭스" class="headerlink" title="CRUD 매트릭스"></a>CRUD 매트릭스</h2><p>업무 프로세스와 데이터간 상관 분석표는 행은 업무 프로세스로, 열은 엔티티 타입으로 구성되며 행과 열이 만나는 교차점에 발생 및 이용에 대한 상태를 표시한다. 일반적으로 생성(Create), 이용(Read), 수정(Update), 삭제(Delete)로 나누어 표현하여 이를 CRUD 매트릭스라고도 부른다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Create: 하나의 업무기능이 하나의 데이터를 생성하는 관계 </span><br><span class="line">Read: 하나의 업무기능이 업무수행의 목적을 달성하기 위하여 데이터를 참조하는 관계 </span><br><span class="line">Update: 하나의 업무를 수행하는 과정에서 데이터가 수정/갱신되는 관계 </span><br><span class="line">Delete: 하나의 업무를 수행하는 과정에서 데이터가 삭제되는 관계</span><br></pre></td></tr></table></figure><p>여지까지 개발하면서 해본적없는 업무.<br>한번 해두면 언젠가는 도움이 될 거 같다.</p><p>단순히 하나의 프로세스에 사용되는 DB테이블에서 어떤식으로 Select(Read) , Insert(Create), Update, Delete 되는지 목록을<br>뽑는 듯 싶다.</p><p>CRUD MATRIX를 이용함으로써 프로젝트에서 얻을 수 있는 장점<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">▶ 분석 단계의 데이터 모델과 프로세스 모델에 대한 작업을 검증하는 역학을 한다.</span><br><span class="line">▶ 시스템 구축 다녜에서 애플리케이션을 개발하는 데 필요하고 중요한 산출물이 된다.</span><br><span class="line">▶ 테스트 단계에서 개발한 애플리케이션을 객관적인 자료를 사용하여 테스트하는 데도 중요한 역할을 한다.</span><br><span class="line">▶ 전체 업무의 인터페이스를 파악할 수 있다.</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java.lang.UnsatisfiedLinkError: no JniTrustNet in java.library.path</title>
      <link href="/2011/03/2011-01-21-JniTrusNet/"/>
      <url>/2011/03/2011-01-21-JniTrusNet/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error &gt;&gt; Failure loading shared library</span><br><span class="line">java.lang.UnsatisfiedLinkError: no JniTrustNet in java.library.path</span><br></pre></td></tr></table></figure><p>윈도우의 경우 PATH 에 해당되는 lib 을 넣어주지 않을 경우에 발생합니다.<br>서버 기동시에는 오류가 발생하지 않으나 WebPage 접속시에 해당 오류가 발생합니다.</p><p>설정방법은</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set PATH=해당lib 경로</span><br></pre></td></tr></table></figure><p>와 같이 실제 dll, lib 과 같은 파일 경로를 잡아줍니다.<br>보통 Windows/System32 안에 해당 dll 파일을 넣어주면 동작해야하는데,</p><p>접근 권한이라든가 그런 문제로 발생하는 걸로 파악됩니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>오라클 RBO 에 대한 설명</title>
      <link href="/2011/03/2011-03-04-RBO/"/>
      <url>/2011/03/2011-03-04-RBO/</url>
      
        <content type="html"><![CDATA[<p>RBO 란 (Rule-Based Optimizer) 의 약자로<br>하나의 SQL에 대한 여러 개의 execution plan 가운데 가장 높은 순위의 execution plan을 항상 사용하도록 하는 법입니다. (Rank Rule 사용.)</p><ul><li>경험적으로 순위가 매겨진 오퍼레이션에 기초한 실행계획을 선택합니다.</li><li>SQL 문을 실행하기 위한 방법이 하나 이상있다면, 규칙기준 접근 방식은 순위가 높은 오퍼레이션을 이용합니다.</li><li>순위가 높은 오퍼레이션은 순위가 낮은 오퍼레이션보다 빨리 실행됩니다.</li><li>수립될 실행계획이 예측 가능하기 때문에 사용자가 원하는 처리 경로로 유도하기 쉽습니다.</li></ul><p>다만 오라클 10G 부터는 RBO 에 대한 지원 자체가 중단되었기 때문에<br>그로 인해 우리 서버의 경우 DBA가 자체적으로 ‘통계’ 수집작업을 하도록 결정되었습니다.</p><p>통계내역은 이주 월요일밤부터 수집된 내역을 퍼블리싱 하였고,<br>모든 테이블이 대상으로 하였고,<br>작업시 오라클 SQL AREA 가 프러싱 되어 하드 파싱이 다량 발생하였지만,<br>시스템에 무리를 줄 수준은 아니었으며,<br>현재 OTLP성 작업에는 실행시 이상이 없는 걸로 파악되었으며,<br>지속적인 테스트를 하고 있는 중입니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://blog.naver.com/chanseog/20000663161" rel="external nofollow noopener noreferrer" target="_blank">Rule-Based Optimizer</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Web Server L4 SLB Port Redirection</title>
      <link href="/2011/03/2011-03-03-WebL4/"/>
      <url>/2011/03/2011-03-03-WebL4/</url>
      
        <content type="html"><![CDATA[<p>Web Server L4 SLB Port Redirection</p><p><a href="http://xx.xx.xx:82" rel="external nofollow noopener noreferrer" target="_blank">http://xx.xx.xx:82</a> -&gt; <a href="https://xx.xx.xx:442" rel="external nofollow noopener noreferrer" target="_blank">https://xx.xx.xx:442</a></p><p>L4에서 위와같이 redirect를 하는 경우 82번 포트를<br>사용하여 접속한 유저는 442로 redirection이 된다고 해도 통신 상 request 및 response 는 encryption 되지 않고<br>plain text로 계속 통신이 되어 보안상의 문제점이 있다고 판단되어,</p><p>서버단에서도 특별히 다른 방법이 없으니 소스단에서 해결해달라고 요청이 왔습니다.</p><p>되는 걸로 알고 있었는데 안된다고 하여 해당 기능에 대해 고민 중입니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://blog.naver.com/s6242?Redirect=Log&amp;logNo=60047142704" rel="external nofollow noopener noreferrer" target="_blank">L4 Switch</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ORA-01502 인덱스</title>
      <link href="/2011/01/2011-01-03-ORA-01502/"/>
      <url>/2011/01/2011-01-03-ORA-01502/</url>
      
        <content type="html"><![CDATA[<p>“ORA-01502 인덱스 XX인덱스명 또는 XX 분할영역은 사용할 수 없는 상태입니다.”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. Alter index &#123;index_name&#125; rebuild </span><br><span class="line">2. Alter index &#123;index_names&#125; rebuild partition &#123;partition_names&#125;</span><br></pre></td></tr></table></figure><p>만약 파티션 되지 않은 인덱스면 1번, 아니라면 “ORA-14806 : 분활영역된 인덱스는 전체를 다시 만들 수 없습니다”가 발생합니다.<br>그럴 경우 2번.</p><p>원인은 파티션은 파티션 별로 RowID를 다르게 갖게 됨으로 파티션의 변경이 발생하게 되면 RowID의 변경이 발생하게 됩니다.<br>그래서 실제 파티션 테이블의 RowID와 변경된 파티션 로컬 인덱스와 글로벌 인덱스의 RowID가 일치하지 않게 되어 인덱스 사용 중지 즉, IU 상태가 발생하게 되어 인덱스의 사용 불가 및 재 생성에 따른 운영 및 관리상의 부하 및 재 생성에 따른 시스템 부하가 발생하게 됩니다.<br>그런데 실제로, 운영권한으로</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;select *</span><br><span class="line">&gt;&gt;from DBA_INDEXES</span><br><span class="line">&gt;&gt;where index_name = &apos;XXX인덱스&apos;</span><br></pre></td></tr></table></figure><p>로 검색해본 결과 Stats 가 INDEX UNUSABLE 이 발생하는 ‘Unusable ‘ 상태가 아니었습니다. 한마디로 그 순간에 잠깐 ”ORA-01502”가 발생하는 상황이었다는 말이 됩니다.</p><p>해당 오류가 발생한 원인<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 테이블은 파티셔닝이고, 인덱스가 non-파티셔닝으로 인해 발생하는 현상</span><br><span class="line">2. 해당 파티션을 해당 인덱스를 통해서 엑세스 할 수 없게 됨으로 해당 어플리케이션의 수행을 유지 할 수 없는 상황에서 발생</span><br></pre></td></tr></table></figure></p><p>2번의 경우 인덱스를 사용하지 않고 해당 파티션을 TABLE FULL SCAN 하면 에러가 발생하지 않지만 옵티마이져가 실행계획 수립시에는 INDEX UNUSABLE 상태 여부를 체크하지 않으므로 해당 인덱스를 사용하는 실행계획이 수립되고 실제 수행시 오류가 발생하게 됨으로 이미 운용중인 어플리케이션이나 SQL이 정상 수행되지 않습니다.<br>이런 경우에는 skip_unusable_indexes = TRUE 파라메터를 지정하면 수행시에 해당 인덱스가 UNUSABLE이면 이를 사용하지 않고 TABLE FULL SCAN 등을 한다. 경우에 따라서 유용하게 사용 가능하므로 고려 해 볼 수 있습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://onlypower.egloos.com/600879" rel="external nofollow noopener noreferrer" target="_blank">Oracle 파티션</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PoolLimitSQLException 관련 조치 사항</title>
      <link href="/2010/12/2010-12-20-PoolLimitSQL/"/>
      <url>/2010/12/2010-12-20-PoolLimitSQL/</url>
      
        <content type="html"><![CDATA[<h2 id="웹로직에서-PoolLimitSQLException-에러-대응-작업"><a href="#웹로직에서-PoolLimitSQLException-에러-대응-작업" class="headerlink" title="웹로직에서 PoolLimitSQLException 에러 대응 작업"></a>웹로직에서 PoolLimitSQLException 에러 대응 작업</h2><p>“PoolLimitSQLException” 오류가 발생하였고,<br>이유는 웹로직(Weblogic)설정에 Maxinum capacity 가 15로 설정되어있었기 때문으로 추측됩니다.(기본 설정)</p><p>접속 Connection 이 많을때는 117까지 Idle이 증가되면서, 해당 오류가 발생된 것으로 파악되면서, 기본형으로 셋팅되었던 몇군대의 문제점이 발견되었습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Home &gt; Summary of Services: JDBC &gt; Summary of JDBC Data Sources &gt; XXX 설정</span><br></pre></td></tr></table></figure><p>Test Connections On Reserve 를 Check 합니다.<br>Check 할 경우 120 초 마다 “SELECT 1 FROM DUAL” 을 날려, 성공했을 경우 900초 동안은 검증이 되었다고 판단합니다.</p><p>900초는 너무 짧고, 1200 초가 적당하다고 합니다.</p><p>또한, 문제가 되었던 Maximum Capacity를 200으로 잡아주었습니다.<br>그런데 초기 용량이 1 이러다로 증가 수치 또한 1이면 부담이 될 수 있을 거 같습니다.</p><p>그 이유는, Monitoring 을 보면, 접속된 connections count 0인데, 가장 높은 count는 52 ~ 117까지 존재하는 걸 확인했고,<br>만약 초기용량이 1로 증가수치가 1씩 증가할 경우 connections 요청이 많을 경우 문제가 발생할 수 있을 걸로 추정되었습니다.</p><p>처음 용량을 5로 잡고 증가 수치 폭 또한 5씩 잡는 게 좋아 보아 같이 수정했습니다.</p><p>PS.<br>Diagnostics 에서 Profile Connection Leak를 Check 를 해둬야할 거 같습니다.<br>Monitoring 에서 해당 Leaked Count 를 알 수 있기 때문 있습니다.<br>이 옵션은 leaked connection이 connection pool에 자동 반환되는 것을 의미하는 것은 아니고, 단순히 로그에 leak정보의 출력을 의미하지만, Monitoring 에는 중요한 정보입니다</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>crontab -e 로 java를 실행하기</title>
      <link href="/2010/12/2010-12-28-crontab/"/>
      <url>/2010/12/2010-12-28-crontab/</url>
      
        <content type="html"><![CDATA[<h2 id="crontab-e-를-하게-되면-vi-editor-상태로-들어가게-됩니다"><a href="#crontab-e-를-하게-되면-vi-editor-상태로-들어가게-됩니다" class="headerlink" title="crontab -e 를 하게 되면 vi editor 상태로 들어가게 됩니다."></a>crontab -e 를 하게 되면 vi editor 상태로 들어가게 됩니다.</h2><p>crontab 은 반복적으로 어떤 특정한 시간대에 어떤 작업을 시작하도록 예약할 필요성을 느낄때,<br>예약기능인 crontab 을 구현하여 저장할 수 있습니다.</p><p>crontab 은 다음과 같이</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">분  시 일 월 연 해당명령으로 구현되어있습니다.</span><br><span class="line">30 16  *   *  *  echo &quot;테스트&quot;</span><br></pre></td></tr></table></figure><p>매년 매월 매일 4시 30분에 “테스트”라는 값을 출력하도록 하는 명령어입니다.</p><p>이렇게 표준 출력으로 출력이 나오는 명령어는 특정 계정에게 메일로 전송됩니다.<br>이렇게 메일을 전송하지 않도록 하려면</p><p>00 06 <em> </em> * echo ‘I bug the system administrator daily at 6:00am!’ &gt;/dev/null</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">###################################################</span><br><span class="line"># TEST 망 RESTART SHELL SCRIPT</span><br><span class="line">###################################################</span><br><span class="line">20 4 * * 2 /xxx/restart.sh</span><br></pre></td></tr></table></figure><p>crontab 안에 java class 를 직접 호출할 수도 있지만,<br>보통은 이렇게 sh 파일을 불려오는 데 crontab -e 를 사용합니다.</p><p>restart.sh 안에는 또다른 sh 파일을 넣어서 처리하도록 할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /xxx</span><br><span class="line">stop.sh</span><br><span class="line">start.sh</span><br></pre></td></tr></table></figure><p>또한, 별도의 java class 를 호출하는 형태도 가능합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/ksh</span><br><span class="line"># 통계 배치</span><br><span class="line"></span><br><span class="line">BATCH_HOME=/xxx/batch</span><br><span class="line"></span><br><span class="line">. $&#123;BATCH_HOME&#125;/SetEnv.sh $*</span><br><span class="line"></span><br><span class="line">java test.xxxBatchProcess $1&gt; $&#123;BATCH_HOME&#125;/log/xxxBatchProcess.log.`date +%y%m%d_%H%M%S`</span><br></pre></td></tr></table></figure><p>이렇게 실제로 자바를 실행할 수도 있습니다.<br>SetEnv.sh 에는 해당 자바 소스들을 import 합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/ksh</span><br><span class="line"></span><br><span class="line">export LANG=ko</span><br><span class="line">export PATH=/</span><br><span class="line">export JAVA_HOME=/xxx/weblogic/bea/jdk150_06</span><br><span class="line">export WEBAPP_PATH=/xxx/WEB-INF</span><br><span class="line">export WEBAPP_LIB_PATH=$WEBAPP_PATH/lib</span><br><span class="line">export CLASSPATH=.:$CLASSPATH:$WEBAPP_PATH/classes</span><br><span class="line">export CLASSPATH=.:$CLASSPATH:$WEBAPP_LIB_PATH/commons-beanutils-1.7.0.jar</span><br></pre></td></tr></table></figure><p>import 를 안해도 상관은 없지만,<br>그렇게 하면 java 의 속성값들에 해당 export 값들을 전부 넣어줘서 crontab 에 바로 등록도 가능합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">35 04 * * * /usr/local/java/bin/java -Xms516m -Xmx1024m -cp &quot;/home/xxx/public_html/WEB-INF/classes:/home/xxx/public_html/WEB-INF/lib/*&quot; com.adgather.frequency.log.xxx -DeleteBeforeData=Y -CheckAllDate=Y</span><br></pre></td></tr></table></figure><p>여러 방법 중에 편한 방법이 가장 좋지만,<br>맨 앞에, restart.sh 처럼 crontab 에는 sh 파일을 불러오고,<br>shell 에서 java or jar 를 불려와 처리하는 방안이 제일 무난하다고 생각합니다.</p><p>가끔 heap 메모리가 부족할 것이 걱정이 된다면,<br>-Xms512m -Xmx2048m 와 같이 메모리 용량을 늘려주는게 좋을 거 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/ksh</span><br><span class="line"># 통계 배치</span><br><span class="line">BATCH_HOME=/xxx/batch</span><br><span class="line">. $&#123;BATCH_HOME&#125;/SetEnv.sh $*</span><br><span class="line">java -Xms512m -Xmx2048m test.xxxBatchProcess $1&gt; $&#123;BATCH_HOME&#125;/log/xxxBatchProcess.log.`date +%y%m%d_%H%M%S`</span><br></pre></td></tr></table></figure><p>이렇게 실제로 자바를 실행할 수도 있습니다.</p><p>ps.<br>위의 예제에서 &gt; 는 해당 출력결과를 특정 log 파일에 저장합니다.<br>계속 같은 곳에 붙여넣기를 하는 경우도 있기 때문에 계속 날짜를 바꾸기 위한 date를 선언합니다.<br>만약 &gt;&gt; 를 선언하여 계속 덮어 씌우는 것도 가능합니다. 그럴 경우에는 날짜를 바꾸는 date를 제외해야합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Client IP 문제(X-Forwarded-For) 해결 방안</title>
      <link href="/2010/12/2010-12-06-ForwardedFor/"/>
      <url>/2010/12/2010-12-06-ForwardedFor/</url>
      
        <content type="html"><![CDATA[<p>L4 에서 IP를 바꿔버리는 문제가 발생했습니다.<br>스위치를 예전 모델로 교체한다고 하여도 해당문제는 앞 단에 위치하게 되는 Firewall 장비에서 IP Remapping 할 가능성이 존재한다는 답변을 들었습니다.<br>L4 에서는 IP 를 Remapping 하면서 Client IP 를 아예 없애버리는 게 아니고 X-Forwarded-For 라는 헤더에 남겨 놓는다고 하여 해당 값을 가져다 쓰라고 하였습니다.<br>(대부분의 Proxy에서 이런 방법으로 IP를 기록한다고 합니다.)</p><p>기본적으로는 X-Forwarded-For 정보를 헤더에서 추출하고 그 값이 비어있을 경우 Remote-Addr 헤더로 문제없이 사용이 가능합니다.</p><p>참고로 해당 값은 LP VIP 을 통해 들어갈 때만 생기며, 클라이언트에서 보내주는 헤더값이 아니라 L4 VIP 를 통해 들어갈때 L4에서 헤더에 넣어주는 헤더값을 의미합니다.</p><p>자바내의 처리로직 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HttpServletRequest request</span><br><span class="line"></span><br><span class="line">String ip = request.getHeader(&quot;HTTP_X_FORWARDED_FOR&quot;);</span><br><span class="line"></span><br><span class="line">if(ip == null || ip.length() == 0 || ip.toLowerCase().equals(&quot;unknown&quot;))</span><br><span class="line">    ip = request.getHeader(&quot;REMOTE_ADDR&quot;);</span><br><span class="line"></span><br><span class="line">if(ip == null || ip.length() == 0 || ip.toLowerCase().equals(&quot;unknown&quot;))</span><br><span class="line">    ip = request.getRemoteAddr();</span><br></pre></td></tr></table></figure></p><p>아래는 해외 문서를 참고한 내용입니다.</p><h2 id="Getting-The-Real-IP-Of-Your-Users"><a href="#Getting-The-Real-IP-Of-Your-Users" class="headerlink" title="Getting The Real IP Of Your Users"></a>Getting The Real IP Of Your Users</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">There are a lot of sites around the internet that try and get your IP address. Most of their reasons are legitimate. For example Google Adsense will log your IP to see where the user clicking the advert is from (and kick you off if its the same IP you logged into that account with).</span><br><span class="line"></span><br><span class="line">However, there are some sites that try to look at your IP for various reasons but do it wrong. Rapidshare is a beatifully painful example of this. If you’re on an ISP that uses a transparent proxy, RapidShare will log the proxy address instead of the actual account IP. As they limit the downloading on a per-IP basis, that means everyone using that ISP, going through that proxy, has the same IP to Rapidshare, meaning the limit to how much you download is split among those users.</span><br><span class="line"></span><br><span class="line">What I’m saying here is, if you’re going to do your own IP lookups for whatever reason, do them correctly. My initial code here was in VB.net but since I have translated what its doing to the most popular server-side languages. As its based on the server variables, rather than the code’s process, its quite easy to port to something else if you need to.</span><br><span class="line"></span><br><span class="line">The lookup that these “incorrect” sites are doing is something like this:</span><br><span class="line"></span><br><span class="line">Request.ServerVariables(&quot;REMOTE_ADDR&quot;)</span><br><span class="line">What then need to be doing is comparing the HTTP_X_FORWARDED_FOR variable against it, to check that there isn’t a non-transparent proxy in the way. Like so:</span><br><span class="line"></span><br><span class="line">&apos; Look for a proxy address firstDim _ip As String = Request.ServerVariables(&quot;HTTP_X_FORWARDED_FOR&quot;)&apos; If there is no proxy, get the standard remote addressIf (_ip = &quot;&quot; Or _ip.ToLower = &quot;unknown&quot;) Then _ _ip = Request.ServerVariables(&quot;REMOTE_ADDR&quot;)</span><br><span class="line">This doesnt help people that are limited to (or otherwise) on anonymous proxies. They will hide the forwarding address (like they’re supposed to) and therefore the lookup will ONLY get the proxy’s address. Some ISPs do this by default to “protect” their users… Its just retarded. If you ISP does this, and you’ve been wondering why RS or other sites don’t work… Now you know.</span><br><span class="line"></span><br><span class="line">If you want to check against an existing “wrong site”, try IP Chicken. It will return an incorrect value (eg the proxy). WhatsMyIP.orgis one that will look through the proxy and should give you the correct IP.</span><br><span class="line"></span><br><span class="line">Here are some more examples in other languages:</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C#"></a>C#</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Look for a proxy address firstString</span><br><span class="line">_ip = Request.ServerVariables[&quot;HTTP_X_FORWARDED_FOR&quot;];</span><br><span class="line">// If there is no proxy, get the standard remote address</span><br><span class="line">If (_ip == &quot;&quot; || _ip.ToLower == &quot;unknown&quot;)</span><br><span class="line">_ip = Request.ServerVariables[&quot;REMOTE_ADDR&quot;];</span><br></pre></td></tr></table></figure><h2 id="C-1"><a href="#C-1" class="headerlink" title="C#"></a>C#</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Look for a proxy address firstString</span><br><span class="line">_ip = Request.ServerVariables[&quot;HTTP_X_FORWARDED_FOR&quot;];</span><br><span class="line">// If there is no proxy, get the standard remote address</span><br><span class="line">If (_ip == &quot;&quot; || _ip.ToLower == &quot;unknown&quot;)</span><br><span class="line">_ip = Request.ServerVariables[&quot;REMOTE_ADDR&quot;];</span><br></pre></td></tr></table></figure><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p>Based on code from OxyScripts.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function GetUserIP() &#123;</span><br><span class="line">if (isset($_SERVER)) &#123;</span><br><span class="line">if (isset($_SERVER[&quot;HTTP_X_FORWARDED_FOR&quot;]))</span><br><span class="line">return $_SERVER[&quot;HTTP_X_FORWARDED_FOR&quot;];</span><br><span class="line">if (isset($_SERVER[&quot;HTTP_CLIENT_IP&quot;]))</span><br><span class="line">return $_SERVER[&quot;HTTP_CLIENT_IP&quot;];</span><br><span class="line">return $_SERVER[&quot;REMOTE_ADDR&quot;]; &#125;</span><br><span class="line">if (getenv(&apos;HTTP_X_FORWARDED_FOR&apos;))</span><br><span class="line">return getenv(&apos;HTTP_X_FORWARDED_FOR&apos;);</span><br><span class="line">if (getenv(&apos;HTTP_CLIENT_IP&apos;))</span><br><span class="line">return getenv(&apos;HTTP_CLIENT_IP&apos;);</span><br><span class="line">return getenv(&apos;REMOTE_ADDR&apos;);&#125;</span><br></pre></td></tr></table></figure><h2 id="Java-and-JSP"><a href="#Java-and-JSP" class="headerlink" title="Java and JSP"></a>Java and JSP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String ipaddress = request.getHeader(&quot;HTTP_X_FORWARDED_FOR&quot;);</span><br><span class="line">if (ipaddress == null)</span><br><span class="line">ipaddress = request.getRemoteAddr();</span><br></pre></td></tr></table></figure><h2 id="ASP-VBScript"><a href="#ASP-VBScript" class="headerlink" title="ASP/VBScript"></a>ASP/VBScript</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ipaddress = Request.ServerVariables(&quot;HTTP_X_FORWARDED_FOR&quot;)</span><br><span class="line">if ipaddress = &quot;&quot;</span><br><span class="line">then</span><br><span class="line">ipaddress = Request.ServerVariables(&quot;REMOTE_ADDR&quot;</span><br><span class="line">)end if</span><br></pre></td></tr></table></figure><h2 id="ColdFusion"><a href="#ColdFusion" class="headerlink" title="ColdFusion"></a>ColdFusion</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;CFCOMPONENT&gt;</span><br><span class="line">&lt;CFIF #CGI.HTTP_X_Forwarded_For# EQ &quot;&quot;&gt;</span><br><span class="line">&lt;CFSET ipaddress=&quot;#CGI.Remote_Addr#&quot;&gt;</span><br><span class="line">&lt;CFELSE&gt;</span><br><span class="line">&lt;CFSET ipaddress=&quot;#CGI.HTTP_X_Forwarded_For#&quot;&gt;</span><br><span class="line">&lt;/CFIF&gt;</span><br><span class="line">&lt;/CFCOMPONENT&gt;</span><br></pre></td></tr></table></figure><h2 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ip = $req-&gt;header(&apos;Client-IP&apos;) || $req-&gt;header(&apos;Remote-Addr&apos;);</span><br><span class="line">if ($req-&gt;header(&apos;X-Forwarded-For&apos;))</span><br><span class="line">&#123; $proxy = $ip; $ip = $req-&gt;header(&apos;X-Forwarded-For&apos;);&#125;</span><br></pre></td></tr></table></figure><p>If you know anymore, just ping them in my general direction and they can be added.</p><p>C# 계열은 정상 동작했는데,<br>우리쪽에서는 헤더정보를 읽어오지 못했습니다.<br>이유는 웹로직에서 포워딩할때 변경하는게 아닌가 추측됩니다.<br>모든 헤더 정보를 찍어보니 해당 헤더이름은<br>“X-Forwarded-For”(HTTP-X-FOWARDED-FOR) 로 변환해서 들어오는 것을 확인했습니다.</p><p> 그것은 IIS 설정에서 X-Forwarded-For 를 IP로 잡는 겁니다.<br> 인터넷에서 F5XForwardedFor 로 검색하면 상세한 정보를 알 수 있습니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://blog.chonnom.com/10100163904" rel="external nofollow noopener noreferrer" target="_blank">윈도우즈 X-Forwarded-For 아이피 변환</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vi 편집기 사용하기</title>
      <link href="/2010/12/2010-12-03-VI-EDITOR/"/>
      <url>/2010/12/2010-12-03-VI-EDITOR/</url>
      
        <content type="html"><![CDATA[<p>vi는 리눅스를 비롯한 유닉스 계열 운영체제에서 많이 사용되는 텍스트 파일 편집 프로그램입니다.  </p><p>‘#which vi’ 이라 명령어를 입력하면 vim 프로그램의 위치를 나타냅니다.<br>보통 vi 편집기는 alias 되어 있어 vi 명령어만 입력하면 텍스트 파일을 열어 편집할 수 있습니다.<br>vi 은 3가지 상태 모드가 있습니다.</p><ol><li>명령 상태<br>명령어를 입력하는 상태입니다. 내용을 검색하거나 이동할 때 사용하는 명령어 입력 상태입니다.</li><li>입력 상태<br>텍스트 파일의 내용을 입력할 수 있는 상태입니다. 텍스트 파일을 수정할 수 있는 상태입니다.</li><li><p>ex 상태<br>파일 관련 처리 명령에 사용되며 명령 상태에서 ‘:’ 문자를 입력하면 ex 상태가 됩니다.</p><p>명령 상태는 vi 편집기를 실행하면 명령 상태로 실행됩니다. 어떤 상태이든 esc 버튼을 누르면 명령 상태로 돌아갑니다. 아래의 화면은 명령 상태로 vi 편집기가 실행된 화면입니다.</p></li></ol><p>명령 상태의 키는 다음과 같습니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">h,j,k,l : 왼쪽,아래쪽, 위쪽, 오른족으로 한 칸씩 이동합니다.</span><br><span class="line">$ : 그 줄의 가장 마지막으로 이동합니다.</span><br><span class="line">^ : 그 줄의 가장 처음으로 이동합니다.</span><br><span class="line">H : 화면의 가장 위로 이동합니다.</span><br><span class="line">L : 화면에 가장 아래로 이동합니다.</span><br><span class="line">gg : 파일의 가장 처음으로 이동합니다.</span><br><span class="line">G : 파일의 가장 마지막으로 이동합니다.</span><br><span class="line">&#125; : 다음 단락으로 이동합니다.</span><br><span class="line">&#123; : 이전 단락으로 이동합니다.</span><br><span class="line">:n : n 번째 줄로 이동합니다.</span><br></pre></td></tr></table></figure></p><p> 명령 상태에서 텍스트 파일의 커서가 위치하는 곳에 텍스트 파일을 수정하기 위해서는 입력상태로 변경해야 합니다. 이 때 사용하는 키는 다음과 같습니다.</p><ul><li>입력 명령</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i : 현재 커서가 위치한 곳부터 글자를 입력합니다.</span><br><span class="line">I : 현재 작업 줄의 가장 처음에 글자를 입력합니다.</span><br><span class="line">a: 현재 커서가 위치한 다음 칸부터 글자를 입력합니다.</span><br><span class="line">A : 현재 작업 줄의 가장 마지막에 글자를 입력합니다.</span><br></pre></td></tr></table></figure><ul><li>삭제 명령</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x : 현재 커서가 위치한 곳에 글자 삭제</span><br><span class="line">dw : 한 단어를 삭제</span><br><span class="line">dd : 줄 전체를 삭제</span><br><span class="line">d$ : 현재 커서가 위치한 곳부터 그 줄의 가장 마지막까지 삭제</span><br></pre></td></tr></table></figure><ul><li>복제 및 붙이기 명령</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yy : 현재 줄 전체를 메모리에 저장해 둡니다.</span><br><span class="line">y0 : 현재 커서가 위치한 곳부터 그 줄의 가장 처음까지 메모리에 저장합니다.</span><br><span class="line">y$ : 현재 커서가 위치한 곳부터 그 줄의 가장 마지막까지 메모리에 저장합니다.</span><br><span class="line">p : 현재 커서가 위치한 곳에서 메모리의 내용을 붙여 넣습니다.</span><br><span class="line">P : 현재 커서가 위치한 바로 다음 칸에 메모리의 내용을 붙여넣습니다.</span><br></pre></td></tr></table></figure><p> 참고로 v 키를 누른 후 이동 명령으로 커서를 이동하면 선택된 블록 영역이 반전된 색깔로 표시되며 영역이 선택됩니다.</p><p> dd 삭제 명령과 i G, gg 정도만 알면, 어느정도 vi 편집하는데 불편함은 업습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>윈도우 스케쥴러로 매시간 자바실행시키기</title>
      <link href="/2010/11/2010-11-05-WINDOW/"/>
      <url>/2010/11/2010-11-05-WINDOW/</url>
      
        <content type="html"><![CDATA[<h2 id="윈도우-스케쥴러로-매시간-자바실행시키기"><a href="#윈도우-스케쥴러로-매시간-자바실행시키기" class="headerlink" title="윈도우 스케쥴러로 매시간 자바실행시키기"></a>윈도우 스케쥴러로 매시간 자바실행시키기</h2><p>부제 : 배치 프로세스</p><ol><li>javac 명령어로 클래스 파일 만들기 - 생략</li><li>java 실행시킬 실행파일(BAT) 파일 생성<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">패턴 1. classpath 에 모든 정보를 담은 뒤, java에서는 해당 클래스파일만 불러옵니다.</span><br><span class="line">set classpath=.;&#123;불러올 패키지의 classes 및 jar 경로&#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">set path=.;C:/project/java/jdk1.5.0_16/bin</span><br><span class="line">set classpath=.</span><br><span class="line">set classpath=%classpath%;C:/test/com.sec.admin_home/WEB-INF/classes</span><br><span class="line">set classpath=%classpath%;C:/test/com.sec.admin_home/WEB-INF/lib</span><br><span class="line">set classpath=%classpath%;C:/test/com.sec.admin_home/WEB-INF/lib/xxx.jar</span><br><span class="line">java com.sec.admin.batch.biz.process.TestProcess</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">패턴 2. 기본 classpath 만 설정한 후 java 명령어 중 classpath 설정하는 명령어로 class를 불러옵니다.</span><br><span class="line">Java –cp &#123;불러올 classes 및 jar 경로&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set path=.;C:/project/java/jdk1.5.0_16/bin</span><br><span class="line">java -cp C:/test/com.sec.admin_home/WEB-INF/classes com.sec.admin.batch.biz.process.TestProcess</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><ol start="3"><li>lib 설정<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">패턴 1. java 자체 lib 안에 jar 파일을 넣어 인식시킵니다.</span><br><span class="line">set classpath=.;&#123;불러올 패키지의 classes 및 jar 경로&#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:/project/java/jdk1.5.0_16/jre/lib/ext</span><br><span class="line">jdk의 ext 폴더에 실행할때 필요한 jar 파일을 넣습니다.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">단점 : 서버의 lib 과 자바의 lib 이 충돌납니다. 독립적으로 사용할 경우에 추천합니다.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">패턴 2. 사용하는 모든 jar 파일을 classpath 로 불러옵니다.</span><br><span class="line">Java –cp &#123;불러올 classes 및 jar 경로&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set classpath=%classpath%;C:/test/com.sec.admin_home/WEB-INF/lib</span><br><span class="line">set classpath=%classpath%;C:/test/com.sec.admin_home/WEB-INF/lib/xxx.jar</span><br></pre></td></tr></table></figure><ol start="4"><li>윈도우 스케쥴러에 해당 bat 파일 등록 –생략</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>String을 InputStream으로..</title>
      <link href="/2010/07/2010-07-16-STRING/"/>
      <url>/2010/07/2010-07-16-STRING/</url>
      
        <content type="html"><![CDATA[<p>String을 InputStream으로 만들어야 하는 경우가 종종 발생한다.<br>라이브러리가 파일이나 네트웍과 같은 곳으로부터 읽어서 처리할 수 있도록 전달인자를 InputStream으로 되어 있다.<br>하지만 이 파일의 내용이 DB와 같은 곳에 있다면?? DB에서 읽으면 문자열일텐데..<br>이걸 다시 파일에 기록하고 InputStream을 열어서 전달하기는 좀 무리가 있다.<br>(어쩌면 난 경험이 부족해서 이런 경우에 더 좋은 방법이 있는데 모르는 것일 수도 있다. =ㅅ=;;)</p><p>일단.. String으로 읽어서 String을 InputStream으로 바꾸는 방법을 찾아봤다.<br>JDK 1.0에 StringBufferInputStream라는 클래스가 있지만 이 녀석은 deprecated되었다.<br>대신 StringReader를 사용하라고 한다. </p><p>InputStream과 Reader의 차이는 InputStream은 byte 단위로 읽는 녀석이지만,<br>Reader는 문자(character) 단위로 읽는 녀석이다. </p><p>ASCII의 경우는 동일하겠지만, 유니코드가 섞여 있다면 처리 방식이 달라질 수 있다.<br>문자열이라는 것은 인코딩이 되어 있으니까 String은 InputStream이 아닌 Reader로 읽는 것이 맞는 말이다.</p><p>그래서 StringBufferInputStream은 말 그대로 폐기.. 또 다른 방법은.. Apache Ant 라이브러리에 있는<br>StringInputStream을 사용하는 방법이다. 사용 방법은 아주 간단하다. </p><p>Ant를 다운받고 lib 경로 아래에 있는 ant.jar 파일을 CLASS_PATH에 넣어주고 쓰면 된다. </p><p>String 문자열을 생성자에 넣어주고 객체를 생성하면 그 문자열이 InputStream 처럼 동작한다.<br>(뭐.. 그야 InputStream을 상속받았으니까 =ㅅ=;;) </p><p>아래 예제는 LDIF 파일을 읽어서 처리하는 부분이다. LDIFReader는 InputStream을 필요로 한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String ldifContent = &quot;...&quot;;</span><br><span class="line">StringInputStream is = new StringInputStream(ldifContent, &quot;UTF-8&quot;);</span><br><span class="line">LDIFReader reader = new LDIFReader(is, LDAPConnection.LDAP_V3);</span><br><span class="line">LDAPMessage msg = reader.readMessage();</span><br></pre></td></tr></table></figure><p>소스 코드를 보니 내부적으로는 Reader를 InputStream으로 변환해주는 org.apache.tools.ant.util.ReaderInputStream을<br>상속받아 org.apache.tools.ant.filters.StringInputStream을 구현했다. </p><p>이거 나중에 유용하게 사용할 수도 있겠다.</p><p>그리고 이런 라이브러리가 귀찮거나 기능에 비해 거추장스럽다면..<br>간단하게 byte 배열을 이용하는 방법도 있다. String을 byte 배열로 변환한 후 ByteArrayInputStream을 사용하면 된다.<br>위의 코드에서 InputStream을 생성해 주는 부분만 아래와 같이 바꾸자.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ByteArrayInputStream is = new ByteArrayInputStream(ldifContent.getBytes(&quot;UTF-8&quot;));</span><br></pre></td></tr></table></figure><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://www.kodejava.org/examples/265.html" rel="external nofollow noopener noreferrer" target="_blank">How do I convert string into InputStream?</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL*Loader 프로그래밍</title>
      <link href="/2010/06/2010-06-07-SQL_Loader/"/>
      <url>/2010/06/2010-06-07-SQL_Loader/</url>
      
        <content type="html"><![CDATA[<p>엑셀의 많은 데이터를 오라클에 저장하는 방법입니다.<br>물론 저는 특정 클라이언트가 업로드한 파일을 그대로 DB에 넣기 위해 사용합니다.</p><p>내용은 간단합니다.</p><ol><li>엑셀파일을 다른 이름으로 저장해서 확장자를 csv 로 저장합니다.<br>(미리 csv 에서 지정된 구분자를 정할 수 있습니다. ‘tab’ , ‘,’ 등..)</li></ol><ol start="2"><li>오라클에 데이터를 저장할 수 있는 테이블을 데이터 형식에 맞게 만들어줍니다.</li></ol><ol start="3"><li><p>새로운 메모장으로 SQL*Loader 컨트롤 파일을 작성해줍니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LOAD DATA</span><br><span class="line">INFILE &apos;c:\biotest.csv&apos;  // 파일 경로</span><br><span class="line">APPEND                       // 저장 옵션 (기존의 행에 추가, 이외에 REPLACE, INSERT, TRUNCATE 가 있음)</span><br><span class="line">INTO TABLE BIO_TEST   // 데이터를 저장할 테이블명 </span><br><span class="line">FIELDS TERMINATED BY &apos;,&apos;  // 데이터간의 구분 문자</span><br><span class="line">(&quot;Entrez_GeneID&quot;,&quot;Gene_symbol&quot;,&quot;Ka&quot;,&quot;Ks&quot;,&quot;Ka/Ks&quot;,&quot;5&apos;UTR&quot;,&quot;CDS&quot;)    // 테이블 속성명</span><br></pre></td></tr></table></figure></li><li><p>명령어 창에서</p><blockquote><p>sqlldr userid/passwd@db_ip control=’파일경로’ 를 쳐줍니다.</p></blockquote></li></ol><ol start="5"><li>데이터 저장이 완료되면 컨트롤파일명과 동일한 텍스트파일이 생성되어 저장 결과를 확인합니다.</li></ol><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://blog.naver.com/kjhfreedom21/110082610606" rel="external nofollow noopener noreferrer" target="_blank">SQL*Loader 를 처음 써보다.</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>리눅스 파일권한 명령어</title>
      <link href="/2010/06/2010-06-03-Linux/"/>
      <url>/2010/06/2010-06-03-Linux/</url>
      
        <content type="html"><![CDATA[<h1 id="리눅스-파일권한-상식"><a href="#리눅스-파일권한-상식" class="headerlink" title="리눅스 파일권한 상식"></a>리눅스 파일권한 상식</h1><p>ls -al 로 파일의 자세한 정보를 볼 수 있다 </p><h1 id="참고-맨앞에-문자가-일-경우-파일-d-이면-디렉토리-l-이면-링크를-나타냄"><a href="#참고-맨앞에-문자가-일-경우-파일-d-이면-디렉토리-l-이면-링크를-나타냄" class="headerlink" title="참고 :  맨앞에 문자가 - 일 경우 파일, d 이면 디렉토리, l 이면 링크를 나타냄 )"></a>참고 :  맨앞에 문자가 - 일 경우 파일, d 이면 디렉토리, l 이면 링크를 나타냄 )</h1><p>r : Read  = 4<br>w : Write = 2<br>x : eXcute = 1</p><p>-rwxrwxrwx   ( 777 )<br>-r–r–r–  ( 444 )<br>-rwx–x–x ( 711 )</p><p>2~4필드 : 소유주 ( User ) 권한<br>5~7필드 : 그룹 ( Group )  권한<br>8~10필드 : 나머지 ( Others ) 권한</p><ol><li>chmod : 파일, 디렉토리 권한 수정<ul><li>ex)<br>   chmod 755 a_file<br>   ( 소유자에겐 7(rwx), 그룹과 나머지에겐 5(r-x) 권한부여 )<br>   chmod o+rw a_file<br>   ( others에게 읽기, 쓰기 권한 부여 )<br>   chmod 700 *                <pre><code>( 현재 위치의 모든 파일과 폴더 권한 수정 )</code></pre>   chmod -R 755 www<br>   ( www디렉토리 내의 모든 파일과 디렉토리의 권한 수정 )</li></ul></li></ol><ol start="2"><li>umask : 파일이 만들어질때 허가권 기본값<ul><li>ex) <h1 id="umask-022"><a href="#umask-022" class="headerlink" title="umask 022"></a>umask 022</h1><pre><code>-&gt; chmod와 반대개념 777에서 뺀다.  022일 경우 chmod 755 와 같음, </code></pre></li></ul></li></ol><ol start="3"><li>chown : 파일 소유자, 소유그룹 수정 <ul><li>ex)<br>   chown bible file1        <pre><code>( file1 파일의 소유자를 bible로 수정 )</code></pre>   chown bible:bible2 file2<br>   ( file2 파일의 소유자를 bible로 그룹을 bible2로 수정 )<br>   chown -cR nobody:nobody dirl<br>   ( dirl 폴더와 그안의 모든 파일,디렉토리의 소유자,소유그룹 변경 )<br>   chown -R bible:webhost uploads –from=nobody:nobody<br>   ( uploads디렉토리 내의 파일중 소유자가 nobody이고 소유그룹이 nobody로 되어 있는 파일의<pre><code>소유자를 bible로 변경하고 소유그룹을 webhost로 변경 )</code></pre></li></ul></li></ol><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://slog2.egloos.com/3546476" rel="external nofollow noopener noreferrer" target="_blank">[명령어] 리눅스 파일권환 명령어 umask, chmod, chown.</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FLASHBACK TABLE</title>
      <link href="/2010/05/2010-05-19-FLASHBACK/"/>
      <url>/2010/05/2010-05-19-FLASHBACK/</url>
      
        <content type="html"><![CDATA[<p>FLASHBACK TABLE 테이블명 TO BEFORE DROP;</p><p>DROP 해서 날려버린 테이블을 복구하려고 할때 사용됩니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 쓰레기통 비워져있으면,</span><br><span class="line"> -&gt; 그날로 짐싸야합니다.</span><br><span class="line"></span><br><span class="line">2. 10G 이하면,</span><br><span class="line"> -&gt; 10G 이상부터  휴지통이 있으므로, 그냥 짐싸야합니다.</span><br><span class="line"></span><br><span class="line">3. 동일 Table 이 있으면,</span><br><span class="line"> -&gt; 복구가 안됩니다. 짐쌉시다.</span><br></pre></td></tr></table></figure><p>아차 3번일 경우에는 짐싸기 전에 확인합시다.</p><p>새로운 이름으로 변경하여 복구 후 rename 을 해줍시다.</p><p>FLASHBACK TABLE 테이블명 TO BEFORE DROP RENAME TO 변경 테이블 명;</p><p>원래 테이블명과 동일한 테이블이 존재할 경우에 제약조건만 없다면,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO DEPT SELECT * FROM &quot;BIN$W7Q+R0EGy9rgQAB/AQA02Q==$0&quot;;</span><br></pre></td></tr></table></figure><p>위와같은 명령어로 복구가 가능합니다.</p><hr><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="http://blog.naver.com/woosa7?Redirect=Log&amp;logNo=20059355223" rel="external nofollow noopener noreferrer" target="_blank">FLASHBACK TABLE </a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>불필요한 객체 생성을 피하는 방법</title>
      <link href="/2010/01/2010-01-27-Effective/"/>
      <url>/2010/01/2010-01-27-Effective/</url>
      
        <content type="html"><![CDATA[<p>극단적인 예<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String s= new String(&quot;테스트&quot;);</span><br><span class="line">-&gt;String s = &quot;테스트&quot;;</span><br></pre></td></tr></table></figure></p><p>기능적으로 동일한 객체를, 필요할 때마다 매번 새로 생성하기보다는 하나의 객체를 재사용하는 것이 좋을 때가 많다.<br>재사용을 하면 객체 생성에 소요되는 비용(시간과 자원)이 절감되므로 실행 속도가 더 빨라지고 코드도 보기 좋게 작성된다.<br>불변(immutable) 객체는 항상 재사용이 가능하다.  </p><p>new String 을 하게 되면 매번 새로운 String 인스턴스를 생성하게 된다.<br>한마디로 불필요한 객체를 만들게 된다는 말이다.  </p><p>매번 이 생성자를 통해 생성하게 되면 기능 상으로 동일한 객체가 계속 별개로 생성하게 되는 것이다.  </p><p>만일 반복문이나 자주 호출되는 메소드 안에서 이런 문장이 실행된다면,<br>동일한 String 인스턴스를 쓸데없이 생성하게 된다.</p><p>String 의 경우 동일한 문자열 리터럴(literal)을 갖도록 권장하고 있다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Web 화면에서 특수한 기호(이하 특수문자) 인식</title>
      <link href="/2009/09/2009-09-30-WEBHTMLTAG/"/>
      <url>/2009/09/2009-09-30-WEBHTMLTAG/</url>
      
        <content type="html"><![CDATA[<h2 id="특수문자를-HTML-TAG로-변환하는-방법"><a href="#특수문자를-HTML-TAG로-변환하는-방법" class="headerlink" title="특수문자를 HTML TAG로 변환하는 방법"></a>특수문자를 HTML TAG로 변환하는 방법</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. &quot; : &amp;quot;</span><br><span class="line">2. &amp; :  &amp;amp;</span><br><span class="line">3. &lt; : &amp;lt;</span><br><span class="line">4. &gt; : &amp;gt;</span><br><span class="line">5. non-breaking space : &amp;nbsp;</span><br></pre></td></tr></table></figure><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ㄱ. &lt;input type=text name=n value=&quot;&quot;&gt;&quot;&gt;</span><br><span class="line">ㄴ. alert(&quot;&quot;&gt;&quot;);</span><br></pre></td></tr></table></figure><p>ㄱ, ㄴ 의 예제와 같이 특정 html 출력시에 DB의 데이터를 그대로 사용할 경우 HTML 문서 오류가 발생할 가능성이 있습니다.</p><p>이러한 경우 4번과 5번은 HTML 태그를 손상시키지 않으므로 무시해도 됩니다.</p><p>그렇다면 문제가 발생하지 않기 위해선</p><ol><li>DB에 넣기 전에 1,2,3 의 경우 변환한 후 데이터 입력</li><li>HTML에 그대로 적용</li></ol><p>(만약 HTML 에 적용하기 전에 수정하거나 사용되어진다면, DB에는 그대로 넣고<br>HTML 출력 바로 직전에 변환하는 과정 필요)</p><h2 id="결론"><a href="#결론" class="headerlink" title="결론 :"></a>결론 :</h2><p>DB에 넣을 때는 신경쓰지 않아도 되지만, 빼올 때 어떻게 처리하는 지에 따라서 고민해보아야 합니다.</p><p>HTML 출력시 혹은 디바이스에서 처리할 때 문제가 발생하면,</p><p> ( “, &amp;, &lt;) 와 같은 문자열을 (&quot;, &amp;, &lt;)로 변환시켜주면 됩니다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ㄷ. &lt;input type=text name=n value=&quot;&amp;quot;&amp;lt;&quot;&gt;</span><br><span class="line">ㄹ. alert(&quot;&amp;quot;&amp;lt;&quot;);</span><br></pre></td></tr></table></figure></p><p>위와 같은 경우에도 실제로는 메시지 창에서 “&gt; 란 값이 출력될 수도 있으므로 고민을 해봐야합니다.<br>아무때나 변경시키면 곤란하다는 의미입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 상세 소스--&gt;</span><br><span class="line"> public static String escapeHtmlString(String s)</span><br><span class="line"> &#123;</span><br><span class="line">  String s1 = s;</span><br><span class="line">  if (s1 == null)</span><br><span class="line">   return null;</span><br><span class="line">  if (s1.indexOf(38, 0) != -1)</span><br><span class="line">   s1 = replace(s1, &quot;&amp;&quot;, &quot;&amp;amp;&quot;);</span><br><span class="line">  if (s1.indexOf(60, 0) != -1)</span><br><span class="line">   s1 = replace(s1, &quot;&lt;&quot;, &quot;&amp;lt;&quot;);</span><br><span class="line">  if (s1.indexOf(62, 0) != -1)</span><br><span class="line">   s1 = replace(s1, &quot;&gt;&quot;, &quot;&amp;gt;&quot;);</span><br><span class="line">  if (s1.indexOf(34, 0) != -1)</span><br><span class="line">   s1 = replace(s1, &quot;\&quot;&quot;, &quot;&amp;quot;&quot;);</span><br><span class="line">  return s1;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>로 강제로 변환하는 로직을 구현합니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlMapConfig</title>
      <link href="/2009/02/2009-02-26-SQLMAPConfig/"/>
      <url>/2009/02/2009-02-26-SQLMAPConfig/</url>
      
        <content type="html"><![CDATA[<h2 id="sqlMapConfig"><a href="#sqlMapConfig" class="headerlink" title="sqlMapConfig"></a>sqlMapConfig</h2><p>properties resource=”데이타베이스 설정한 곳 주소”<br>알바티스를 위한 셋팅, 정의는 되어있으나 특별하게 셋팅할 필요는 없습니다.  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings</span><br><span class="line">cacheModelsEnabled=&quot;true&quot;</span><br><span class="line">enhancementEnabled=&quot;true&quot;</span><br><span class="line">lazyLoadingEnabled=&quot;true&quot;</span><br><span class="line">maxRequests=&quot;32&quot;</span><br><span class="line">maxSessions=&quot;10&quot;</span><br><span class="line">maxTransactions=&quot;5&quot;</span><br><span class="line">useStatementNamespaces=&quot;false&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>cacheModelsEnabled : 한번 사용했던 데이타는 나중에 또 언젠가는 쓸지 모르니 caching 하여 사용할 것인지 확인<br>useStatementNamespaces : 여러개의 sqlMap의 namespace 가 BlogUser 라 할때, resource 가 존재했을때 유용함, id로만 접근할 것인가, 아미녀 sqlmap.statement이름으로 구성할 것인지를 확인</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;typeAlias alias=&quot;full pacage 에 대한 별칭을 알려줌&quot;&gt;</span><br></pre></td></tr></table></figure><p>JDBC, SIMPLE 같은 경우에는 iBATIS가 별칭으로 해당 명칭을 매칭시켜줍니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;transactionManager type=&quot;JDBC&quot; &gt;</span><br><span class="line">&lt;dataSource type=&quot;SIMPLE&quot;&gt;</span><br><span class="line">&lt;property name=&quot;url을 읽어옴.&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JDBC : 트랙젝션을 그대로 사용</span><br><span class="line">EXTERNAL : 사용자가 직접</span><br><span class="line">JTA :  2기종간의 데이터베이스 여러가지의 DB를 하나로 관리가능</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SIMPLE : (내가 집적) 알바티스 설정 문서 안에서 DB 커넥션을 얻거나, 데이터 소스 설정을 얻을 수 있습니다.</span><br><span class="line">JNDI : 컨테이너가 제공하는 WAS가 제공해주는 DB 소스를 사용</span><br><span class="line">DBCP : 자카르타의 DBCP</span><br></pre></td></tr></table></figure><p>최종적으로 소스에 가장 상위에는</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SqlMapConfig.xml</span><br><span class="line">SqlMap.xml .. . .. . . . ...</span><br></pre></td></tr></table></figure><p>가 하나가 되서 iBATIS 로 이루어져있습니다.<br>파라미터를 넘기고 결과를 객체로 받거나 XML로 받거나 하는 형태가 iBATIS 를 의미합니다.<br>settings 요소를 건드릴 필요는 없습니다.  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web.xml 자동 한글변환</title>
      <link href="/2009/02/2009-02-24-web.xml/"/>
      <url>/2009/02/2009-02-24-web.xml/</url>
      
        <content type="html"><![CDATA[<h2 id="web-xml-한글-변환-관련-Encoding-설정-방법"><a href="#web-xml-한글-변환-관련-Encoding-설정-방법" class="headerlink" title="web.xml 한글 변환 관련 Encoding 설정 방법"></a>web.xml 한글 변환 관련 Encoding 설정 방법</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * To change this template, choose Tools | Templates</span><br><span class="line"> * and open the template in the editor.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">package kr.co.ithrd.common;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import javax.servlet.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class CharacterEncodingFilter implements Filter &#123;</span><br><span class="line">    FilterConfig fc;</span><br><span class="line"></span><br><span class="line">    public void init(FilterConfig fc)&#123;</span><br><span class="line">        this.fc = fc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException&#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            request.setCharacterEncoding(fc.getInitParameter(&quot;characterEncoding&quot;));</span><br><span class="line">        &#125; catch (UnsupportedEncodingException uee) &#123;</span><br><span class="line">            uee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void destroy()&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위의 소스는 필터 기능을 통해, 넘어온 캐릭터셋으로 변경하는 로직입니다.</p><p>web.xml 안에<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;filter&gt;</span><br><span class="line">&lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">&lt;filter-class&gt;kr.co.ithrd.common.CharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">&lt;init-param&gt;</span><br><span class="line">    &lt;param-name&gt;characterEncoding&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;UTF-8&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line"></span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line"> &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line"> &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">&lt;/filter-mapping&gt;</span><br><span class="line"></span><br><span class="line">&lt;servlet&gt;</span><br></pre></td></tr></table></figure></p><p>이 구문을 선언해주시면됩니다.</p><p>간단하게 소스를 설명하자면, filter 이름이 CharacterEncodingFilter로 mapping 시키고<br>url-pattenr 이 * 인 파일은 (즉, 전부) 해당 Filter 를 타도록 하는 방법입니다.</p><p>java 파일 디컴파일 하면, 해당 클래스는 결국 Filter 를 implements 받습니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Servlet Container에서 JAR 파일 설치 시 주의할 점</title>
      <link href="/2009/02/2009-02-01-ServletContainer/"/>
      <url>/2009/02/2009-02-01-ServletContainer/</url>
      
        <content type="html"><![CDATA[<h2 id="Tomcat4-X의-경우"><a href="#Tomcat4-X의-경우" class="headerlink" title="Tomcat4.X의 경우"></a>Tomcat4.X의 경우</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">commons-collection.jar, commons-logging.jar</span><br></pre></td></tr></table></figure><h2 id="Tomcat5-X인-경우"><a href="#Tomcat5-X인-경우" class="headerlink" title="Tomcat5.X인 경우"></a>Tomcat5.X인 경우</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">commons-collections.jar</span><br></pre></td></tr></table></figure><p>해당 파일이 이미 Tomcat의 common/lib에 이미 설치되어 있으므로 일부 이긴 하지만 jar 파일이 충돌이 나는 경우가 있을 수 있습니다.</p><p>작성하는</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Web Application의 WEB-INF/lib</span><br></pre></td></tr></table></figure><p>에는 이런 파일을 lib 폴더에 넣지 않는 것이 좋습니다.</p><p>PS . 가끔가다가 jar 파일을 JRE 에다가 넣어야할 때가 있고, JRE에 넣었는데도 서블릿에서 찾지 못할 경우에는 서블릿 쪽에다가 넣어야할 때도 존재합니다.</p><p>그럴때는 두군대에 같은 jar 파일을 넣어두었다는 것을 꼭 기록에 남겨두록 합시다. ^-^;<br>언제 다른 서블릿 컨테이너와 충돌날지 장담할 수 없으니까요. ^-^</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Project facet Java version 5.0 is not supported. 오류</title>
      <link href="/2009/01/2009-01-29-Project_facet_Java_version_5.0_is_not_supported/"/>
      <url>/2009/01/2009-01-29-Project_facet_Java_version_5.0_is_not_supported/</url>
      
        <content type="html"><![CDATA[<!--# Project facet Java version 5.0 is not supported. 오류--><h2 id="문제-발생"><a href="#문제-발생" class="headerlink" title="문제 발생"></a>문제 발생</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Project facet Java version 5.0 is not supported.</span><br><span class="line">Project facet Java version 6.0 is not supported.</span><br></pre></td></tr></table></figure><h2 id="문제에-대한-고찰"><a href="#문제에-대한-고찰" class="headerlink" title="문제에 대한 고찰"></a>문제에 대한 고찰</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 새로운 jre 버전을 설치했습니까?</span><br><span class="line">2. 새로운 jre 로 JSP를 작성해야합니까?</span><br><span class="line">3. Project 를 Dynamic Web Project 로 만들었습니까?</span><br><span class="line"></span><br><span class="line">현재 사용하는 JRE 버전이 1.5 이면서, JRE를 1.4 를 써야한다던가</span><br><span class="line">여하튼 지금 사용하는 JRE와는 다른 버전을 사용했을 때 이런 문제가 뜹니다.</span><br></pre></td></tr></table></figure><h2 id="원인은"><a href="#원인은" class="headerlink" title="원인은?"></a>원인은?</h2><p>이클립스 안에는 기본값으로 설정된 [Configuration] 항목의 값을 <custom>. [Project Facets] 항목의 값이 Dynamic Web Module java 가 기본값을 그대로 사용합니다.</custom></p><p>즉, 현재 기본값으로 설정된 다른 버전의 JRE를 그대로 사용하므로서 인한 혹은 기존에 사용된 JRE가 다른 버전으로 바뀌면서 생성되는 에러인 것입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">조치 1.</span><br><span class="line"></span><br><span class="line">Properties - &gt; Project Facets</span><br><span class="line">에서 현재 JAVA 를 현재 사용하는 JRE 로 바꿔주면 됩니다.</span><br><span class="line"></span><br><span class="line">조치 2.</span><br><span class="line"></span><br><span class="line">Dynamic Web Project 로 Project를 만들지 않습니다.</span><br></pre></td></tr></table></figure><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>Facets 에 있는 Java 의 셋팅을 현재 사용하는 JRE 버전으로 바꿔주면 됩니다.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Perhaps JAVA_HOME does not point to the JDK 오류</title>
      <link href="/2009/01/2009-01-16-Perhaps_JAVA_HOME_does_not_point_to_the_JDK/"/>
      <url>/2009/01/2009-01-16-Perhaps_JAVA_HOME_does_not_point_to_the_JDK/</url>
      
        <content type="html"><![CDATA[<!--# Perhaps JAVA_HOME does not point to the JDK 오류--><h2 id="문제-발생"><a href="#문제-발생" class="headerlink" title="문제 발생"></a>문제 발생</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">exception</span><br><span class="line">org.apache.jasper.JasperException: Unable to compile class for JSP</span><br><span class="line">Unable to find a javac compiler;</span><br><span class="line">com.sun.tools.javac.Main is not on the classpath.</span><br><span class="line">Perhaps JAVA_HOME does not point to the JDK</span><br></pre></td></tr></table></figure><h2 id="문제에-대한-고찰"><a href="#문제에-대한-고찰" class="headerlink" title="문제에 대한 고찰"></a>문제에 대한 고찰</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. Tomcat 을 install 버전으로 깔았습니까?</span><br><span class="line">2. 인스톨 할 당시에 JRE 버전을 1.5 로 맞추었습니까?</span><br><span class="line"></span><br><span class="line">여하튼 Tomcat 의 JRE 버전은 1.5 이면서, JAVA_HOME 따위는 건드리지 않고 이클립스가 저절로 잡아준다고</span><br><span class="line">확신하고 살아가는 당신이라면, 문제가 발생할 수 있습니다!</span><br></pre></td></tr></table></figure><h2 id="원인은"><a href="#원인은" class="headerlink" title="원인은?"></a>원인은?</h2><p>톰켓이 JSP 파일을 JAVA 파일로 바꾸고, 이를 컴파일 하기 위해서는 1.5 버전에서는 tools.jar 파일이 필요합니다.<br>그래서 CLASS_PATH 가 잡여 있어야 하는데, 이게 적용이 잘 안되는 경우가 있는것 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">조치 1.</span><br><span class="line"></span><br><span class="line">내컴퓨터 오른쪽 클릭 &gt; 시스템 등록정보 &gt; 고급 &gt; 환경변수</span><br><span class="line">에서 JAVA_HOME 경로를 제대로 맞추어 줍니다.</span><br><span class="line"></span><br><span class="line">조치 2.</span><br><span class="line">%JAVA_HOME%\lib\tools.jar 파일을 %CATALINA_HOME%\common\lib 폴더에 COPY 해 넣습니다.</span><br></pre></td></tr></table></figure><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>한마디로 환경변수로 1.5 위치를 잡아 주던가, 아니면 그냥 TOMCAT 의 common 안의 lib 폴더안에, tools.jar 파일을 넣어둡시다.</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
